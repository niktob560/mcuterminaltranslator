GAS LISTING /tmp/ccUgL469.s 			page 1


   1              		.file	"translator.cpp"
   2              		.text
   3              	.Ltext0:
   5              	_Z41__static_initialization_and_destruction_0ii:
   6              	.LVL0:
   7              	.LFB1841:
   8              		.file 1 "Src/translator.cpp"
   1:Src/translator.cpp **** #include "translator.hpp"
   2:Src/translator.cpp **** 
   3:Src/translator.cpp **** namespace translator
   4:Src/translator.cpp **** {
   5:Src/translator.cpp **** 
   6:Src/translator.cpp ****     using namespace std;
   7:Src/translator.cpp **** 
   8:Src/translator.cpp ****     //generate checksum for char array
   9:Src/translator.cpp ****     checksum_t genCheckSum(const uint8_t* c)
  10:Src/translator.cpp ****     {
  11:Src/translator.cpp ****         checksum_t ret = 0;
  12:Src/translator.cpp ****         uint8_t len = getLen(c);
  13:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
  14:Src/translator.cpp ****         {
  15:Src/translator.cpp ****             ret |= (c[3 + i]) << (8 * ((i % 2) == 1));
  16:Src/translator.cpp ****         }
  17:Src/translator.cpp ****         return ret;
  18:Src/translator.cpp ****     }
  19:Src/translator.cpp **** 
  20:Src/translator.cpp ****     //get type of package
  21:Src/translator.cpp ****     uint8_t getType(const uint8_t* package)
  22:Src/translator.cpp ****     {
  23:Src/translator.cpp ****         return ((package[0] & (~LEN_MASK)) >> 6);
  24:Src/translator.cpp ****     }
  25:Src/translator.cpp **** 
  26:Src/translator.cpp **** 
  27:Src/translator.cpp ****     //parse input package, get payload, return type of package
  28:Src/translator.cpp ****     uint8_t parsePacket(uint8_t* package, uint8_t* payloadto)
  29:Src/translator.cpp ****     {
  30:Src/translator.cpp ****         uint8_t type = getType(package);
  31:Src/translator.cpp ****         if(type != TYPE_ARR && type != TYPE_CMD && type != TYPE_VAR)
  32:Src/translator.cpp ****             return TYPE_BAD_TYPE;
  33:Src/translator.cpp **** 
  34:Src/translator.cpp ****         uint8_t len = getLen(package);
  35:Src/translator.cpp ****         if(len == 0)
  36:Src/translator.cpp ****             return TYPE_BAD_LEN;
  37:Src/translator.cpp **** 
  38:Src/translator.cpp ****         if(genCheckSum(package) != getCheckSum(package))
  39:Src/translator.cpp ****             return TYPE_BAD_CHECKSUM;
  40:Src/translator.cpp **** 
  41:Src/translator.cpp **** 
  42:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
  43:Src/translator.cpp ****         {
  44:Src/translator.cpp ****             payloadto[i] = package[i + 3];
  45:Src/translator.cpp ****         }
  46:Src/translator.cpp ****         return type;
  47:Src/translator.cpp ****     }
  48:Src/translator.cpp **** 
  49:Src/translator.cpp **** 
  50:Src/translator.cpp ****     //parse cmd from package, call funcArr[cmd], return type of package, max num of funcs - 255
GAS LISTING /tmp/ccUgL469.s 			page 2


  51:Src/translator.cpp ****     uint8_t parseCmd(uint8_t* package, void (*funcArr [])())
  52:Src/translator.cpp ****     {
  53:Src/translator.cpp ****         uint8_t var = getType(package);
  54:Src/translator.cpp ****         if(var != TYPE_CMD)
  55:Src/translator.cpp ****             return TYPE_BAD_TYPE;
  56:Src/translator.cpp **** 
  57:Src/translator.cpp ****         var = getLen(package);
  58:Src/translator.cpp ****         if(var != 1)
  59:Src/translator.cpp ****             return TYPE_BAD_LEN;
  60:Src/translator.cpp **** 
  61:Src/translator.cpp ****         checksum_t check = genCheckSum(package);
  62:Src/translator.cpp ****         if(check != getCheckSum(package))
  63:Src/translator.cpp ****             return TYPE_BAD_CHECKSUM;
  64:Src/translator.cpp **** 
  65:Src/translator.cpp ****         if(funcArr[package[3]] != NULL)
  66:Src/translator.cpp ****             funcArr[package[3]]();
  67:Src/translator.cpp ****         return TYPE_CMD;
  68:Src/translator.cpp ****     }
  69:Src/translator.cpp **** 
  70:Src/translator.cpp **** 
  71:Src/translator.cpp ****     //get payload from package to addr
  72:Src/translator.cpp ****     void getPayload(const uint8_t* package, uint8_t* to)
  73:Src/translator.cpp ****     {
  74:Src/translator.cpp ****         uint8_t len = getLen(package);
  75:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
  76:Src/translator.cpp ****         {
  77:Src/translator.cpp ****             to[i] = package[i + 3];
  78:Src/translator.cpp ****         }
  79:Src/translator.cpp ****     }
  80:Src/translator.cpp **** 
  81:Src/translator.cpp ****     //get len of payload
  82:Src/translator.cpp ****     uint8_t getLen(const uint8_t* package)
  83:Src/translator.cpp ****     {
  84:Src/translator.cpp ****         return package[0] & LEN_MASK;
  85:Src/translator.cpp ****     }
  86:Src/translator.cpp **** 
  87:Src/translator.cpp ****     bool equals(const uint8_t* p1, const uint8_t* p2)
  88:Src/translator.cpp ****     {
  89:Src/translator.cpp ****         if(p1[0] != p2[0])
  90:Src/translator.cpp ****             return false;
  91:Src/translator.cpp **** 
  92:Src/translator.cpp ****         uint8_t len = getLen(p1);
  93:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
  94:Src/translator.cpp ****         {
  95:Src/translator.cpp ****             if(p1[i] != p2[i])
  96:Src/translator.cpp ****                 return false;
  97:Src/translator.cpp ****         }
  98:Src/translator.cpp ****         return true;
  99:Src/translator.cpp ****     }
 100:Src/translator.cpp **** 
 101:Src/translator.cpp ****     uint8_t getZeroByte(const uint8_t type, const uint8_t len)
 102:Src/translator.cpp ****     {
 103:Src/translator.cpp ****         return (uint8_t)(((type & 0b11) << 6) | (len & LEN_MASK));
 104:Src/translator.cpp ****     }
 105:Src/translator.cpp **** 
 106:Src/translator.cpp **** 
 107:Src/translator.cpp ****     checksum_t getCheckSum(const uint8_t* package)
GAS LISTING /tmp/ccUgL469.s 			page 3


 108:Src/translator.cpp ****     {
 109:Src/translator.cpp ****         return (package[1] << 8) | package[2];
 110:Src/translator.cpp ****     }
 111:Src/translator.cpp **** 
 112:Src/translator.cpp **** 
 113:Src/translator.cpp ****     //gets cmd num at 'cmd', returns final package into target pointer
 114:Src/translator.cpp ****     void generateCmd(const uint8_t cmd, uint8_t* tgt)
 115:Src/translator.cpp ****     {
 116:Src/translator.cpp ****         tgt[0] = getZeroByte(TYPE_CMD, 1);
 117:Src/translator.cpp ****         tgt[3] = cmd;
 118:Src/translator.cpp ****         checksum_t check = getCheckSum(tgt);
 119:Src/translator.cpp ****         tgt[1] = check >> 8;
 120:Src/translator.cpp ****         tgt[2] = check & 0xFF;
 121:Src/translator.cpp ****     }
 122:Src/translator.cpp **** 
 123:Src/translator.cpp **** 
 124:Src/translator.cpp ****     //get id of var in payload of package
 125:Src/translator.cpp ****     uint8_t getVarId(const uint8_t* pack)
 126:Src/translator.cpp ****     {
 127:Src/translator.cpp ****         if(!validate(pack))
 128:Src/translator.cpp ****             return 0xFF;
 129:Src/translator.cpp **** 
 130:Src/translator.cpp ****         return pack[3];
 131:Src/translator.cpp ****     }
 132:Src/translator.cpp **** 
 133:Src/translator.cpp **** 
 134:Src/translator.cpp ****     //validate checksum, type, len
 135:Src/translator.cpp ****     bool validate(const uint8_t* pack)
 136:Src/translator.cpp ****     {
 137:Src/translator.cpp ****         uint8_t type = getType(pack);
 138:Src/translator.cpp ****         switch (type)
 139:Src/translator.cpp ****         {
 140:Src/translator.cpp ****             case TYPE_CMD:
 141:Src/translator.cpp ****             {
 142:Src/translator.cpp ****                 if(getLen(pack) != 1)
 143:Src/translator.cpp ****                     return false;
 144:Src/translator.cpp ****                 break;
 145:Src/translator.cpp ****             }
 146:Src/translator.cpp ****             case TYPE_VAR:
 147:Src/translator.cpp ****             case TYPE_ARR:
 148:Src/translator.cpp ****             {
 149:Src/translator.cpp ****                 if(getLen(pack) <= 1)
 150:Src/translator.cpp ****                     return false;
 151:Src/translator.cpp ****                 break;
 152:Src/translator.cpp ****             }
 153:Src/translator.cpp ****             default:
 154:Src/translator.cpp ****                 return false;
 155:Src/translator.cpp ****         }
 156:Src/translator.cpp ****         return (getCheckSum(pack) == genCheckSum(pack));
 157:Src/translator.cpp ****     }
 158:Src/translator.cpp **** 
 159:Src/translator.cpp ****     //create var package
 160:Src/translator.cpp ****     void generateVar(const uint8_t len, const uint8_t id, const uint8_t* var, uint8_t* tgt)
 161:Src/translator.cpp ****     {
 162:Src/translator.cpp ****         tgt[0] = getZeroByte(TYPE_VAR, len + 1);
 163:Src/translator.cpp ****         tgt[3] = id;
 164:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
GAS LISTING /tmp/ccUgL469.s 			page 4


 165:Src/translator.cpp ****             tgt[4 + i] = var[i];
 166:Src/translator.cpp ****         checksum_t check = genCheckSum(tgt);
 167:Src/translator.cpp ****         tgt[1] = check >> 8;
 168:Src/translator.cpp ****         tgt[2] = check & 0xFF;
 169:Src/translator.cpp ****     }
 170:Src/translator.cpp **** 
 171:Src/translator.cpp **** 
 172:Src/translator.cpp ****     //parse var from var package and write into toArr[id], return type of package
 173:Src/translator.cpp ****     uint8_t parseVar(uint8_t* package, uint8_t* toArr, uint8_t elsize)
 174:Src/translator.cpp ****     {
 175:Src/translator.cpp ****         uint8_t type = getType(package);
 176:Src/translator.cpp ****         if(type != TYPE_VAR)
 177:Src/translator.cpp ****             return TYPE_BAD_TYPE;
 178:Src/translator.cpp ****         uint8_t len = getLen(package);
 179:Src/translator.cpp ****         if(len < 2)
 180:Src/translator.cpp ****             return TYPE_BAD_LEN;
 181:Src/translator.cpp ****         checksum_t  check = genCheckSum(package),
 182:Src/translator.cpp ****                     thischeck = getCheckSum(package);
 183:Src/translator.cpp ****         if(check != thischeck)
 184:Src/translator.cpp ****             return TYPE_BAD_CHECKSUM;
 185:Src/translator.cpp **** 
 186:Src/translator.cpp ****         uint8_t id = package[3];
 187:Src/translator.cpp ****         for(uint8_t i = 0; i < len - 1; i++)
 188:Src/translator.cpp ****         {
 189:Src/translator.cpp ****             toArr[(id + i) * elsize] = package[i + 4];
 190:Src/translator.cpp ****             std::cout << "from " << (int)((id + i) * elsize) << " to " << (int)(i + 4) << std::endl
 191:Src/translator.cpp ****         }
 192:Src/translator.cpp ****         return TYPE_VAR;
 193:Src/translator.cpp ****     }
 194:Src/translator.cpp **** }
   9              		.loc 1 194 1 view -0
  10              		.cfi_startproc
  11              		.loc 1 194 1 is_stmt 0 view .LVU1
  12 0000 83FF01   		cmpl	$1, %edi
  13 0003 7401     		je	.L7
  14              	.L4:
  15 0005 C3       		ret
  16              	.L7:
  17              		.loc 1 194 1 discriminator 1 view .LVU2
  18 0006 81FEFFFF 		cmpl	$65535, %esi
  18      0000
  19 000c 75F7     		jne	.L4
  20              		.loc 1 194 1 view .LVU3
  21 000e 4883EC08 		subq	$8, %rsp
  22              		.cfi_def_cfa_offset 16
  23              		.file 2 "/usr/include/c++/9.1.0/iostream"
   1:/usr/include/c++/9.1.0/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/c++/9.1.0/iostream **** 
   3:/usr/include/c++/9.1.0/iostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.1.0/iostream **** //
   5:/usr/include/c++/9.1.0/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.1.0/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.1.0/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.1.0/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.1.0/iostream **** // any later version.
  10:/usr/include/c++/9.1.0/iostream **** 
  11:/usr/include/c++/9.1.0/iostream **** // This library is distributed in the hope that it will be useful,
GAS LISTING /tmp/ccUgL469.s 			page 5


  12:/usr/include/c++/9.1.0/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.1.0/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.1.0/iostream **** // GNU General Public License for more details.
  15:/usr/include/c++/9.1.0/iostream **** 
  16:/usr/include/c++/9.1.0/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.1.0/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.1.0/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.1.0/iostream **** 
  20:/usr/include/c++/9.1.0/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.1.0/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.1.0/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.1.0/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.1.0/iostream **** 
  25:/usr/include/c++/9.1.0/iostream **** /** @file include/iostream
  26:/usr/include/c++/9.1.0/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/9.1.0/iostream ****  */
  28:/usr/include/c++/9.1.0/iostream **** 
  29:/usr/include/c++/9.1.0/iostream **** //
  30:/usr/include/c++/9.1.0/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/c++/9.1.0/iostream **** //
  32:/usr/include/c++/9.1.0/iostream **** 
  33:/usr/include/c++/9.1.0/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/c++/9.1.0/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/c++/9.1.0/iostream **** 
  36:/usr/include/c++/9.1.0/iostream **** #pragma GCC system_header
  37:/usr/include/c++/9.1.0/iostream **** 
  38:/usr/include/c++/9.1.0/iostream **** #include <bits/c++config.h>
  39:/usr/include/c++/9.1.0/iostream **** #include <ostream>
  40:/usr/include/c++/9.1.0/iostream **** #include <istream>
  41:/usr/include/c++/9.1.0/iostream **** 
  42:/usr/include/c++/9.1.0/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/9.1.0/iostream **** {
  44:/usr/include/c++/9.1.0/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/9.1.0/iostream **** 
  46:/usr/include/c++/9.1.0/iostream ****   /**
  47:/usr/include/c++/9.1.0/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/c++/9.1.0/iostream ****    *
  49:/usr/include/c++/9.1.0/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/c++/9.1.0/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/c++/9.1.0/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/c++/9.1.0/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/c++/9.1.0/iostream ****    *
  54:/usr/include/c++/9.1.0/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/c++/9.1.0/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/c++/9.1.0/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/c++/9.1.0/iostream ****    *  manual linked to above.
  58:/usr/include/c++/9.1.0/iostream ****   */
  59:/usr/include/c++/9.1.0/iostream ****   //@{
  60:/usr/include/c++/9.1.0/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/c++/9.1.0/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/c++/9.1.0/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/c++/9.1.0/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/c++/9.1.0/iostream **** 
  65:/usr/include/c++/9.1.0/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/c++/9.1.0/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/c++/9.1.0/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/c++/9.1.0/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
GAS LISTING /tmp/ccUgL469.s 			page 6


  69:/usr/include/c++/9.1.0/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/c++/9.1.0/iostream **** #endif
  71:/usr/include/c++/9.1.0/iostream ****   //@}
  72:/usr/include/c++/9.1.0/iostream **** 
  73:/usr/include/c++/9.1.0/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/c++/9.1.0/iostream ****   static ios_base::Init __ioinit;
  24              		.loc 2 74 25 view .LVU4
  25 0012 488D3D00 		leaq	_ZStL8__ioinit(%rip), %rdi
  25      000000
  26              	.LVL1:
  27              		.loc 2 74 25 view .LVU5
  28 0019 E8000000 		call	_ZNSt8ios_base4InitC1Ev@PLT
  28      00
  29              	.LVL2:
  30              		.loc 2 74 25 view .LVU6
  31 001e 488D1500 		leaq	__dso_handle(%rip), %rdx
  31      000000
  32 0025 488D3500 		leaq	_ZStL8__ioinit(%rip), %rsi
  32      000000
  33 002c 488B3D00 		movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rdi
  33      000000
  34 0033 E8000000 		call	__cxa_atexit@PLT
  34      00
  35              	.LVL3:
  36              		.loc 1 194 1 view .LVU7
  37 0038 4883C408 		addq	$8, %rsp
  38              		.cfi_def_cfa_offset 8
  39 003c C3       		ret
  40              		.cfi_endproc
  41              	.LFE1841:
  43              		.globl	_ZN10translator7getTypeEPKh
  45              	_ZN10translator7getTypeEPKh:
  46              	.LVL4:
  47              	.LFB1504:
  22:Src/translator.cpp ****         return ((package[0] & (~LEN_MASK)) >> 6);
  48              		.loc 1 22 5 is_stmt 1 view -0
  49              		.cfi_startproc
  23:Src/translator.cpp ****     }
  50              		.loc 1 23 9 view .LVU9
  23:Src/translator.cpp ****     }
  51              		.loc 1 23 27 is_stmt 0 view .LVU10
  52 003d 0FB607   		movzbl	(%rdi), %eax
  23:Src/translator.cpp ****     }
  53              		.loc 1 23 44 view .LVU11
  54 0040 C1F806   		sarl	$6, %eax
  24:Src/translator.cpp **** 
  55              		.loc 1 24 5 view .LVU12
  56 0043 C3       		ret
  57              		.cfi_endproc
  58              	.LFE1504:
  60              		.globl	_ZN10translator6getLenEPKh
  62              	_ZN10translator6getLenEPKh:
  63              	.LVL5:
  64              	.LFB1508:
  83:Src/translator.cpp ****         return package[0] & LEN_MASK;
  65              		.loc 1 83 5 is_stmt 1 view -0
  66              		.cfi_startproc
GAS LISTING /tmp/ccUgL469.s 			page 7


  84:Src/translator.cpp ****     }
  67              		.loc 1 84 9 view .LVU14
  84:Src/translator.cpp ****     }
  68              		.loc 1 84 27 is_stmt 0 view .LVU15
  69 0044 0FB607   		movzbl	(%rdi), %eax
  84:Src/translator.cpp ****     }
  70              		.loc 1 84 29 view .LVU16
  71 0047 83E03F   		andl	$63, %eax
  85:Src/translator.cpp **** 
  72              		.loc 1 85 5 view .LVU17
  73 004a C3       		ret
  74              		.cfi_endproc
  75              	.LFE1508:
  77              		.globl	_ZN10translator11genCheckSumEPKh
  79              	_ZN10translator11genCheckSumEPKh:
  80              	.LVL6:
  81              	.LFB1503:
  10:Src/translator.cpp ****         checksum_t ret = 0;
  82              		.loc 1 10 5 is_stmt 1 view -0
  83              		.cfi_startproc
  10:Src/translator.cpp ****         checksum_t ret = 0;
  84              		.loc 1 10 5 is_stmt 0 view .LVU19
  85 004b 53       		pushq	%rbx
  86              		.cfi_def_cfa_offset 16
  87              		.cfi_offset 3, -16
  88 004c 4889FB   		movq	%rdi, %rbx
  11:Src/translator.cpp ****         uint8_t len = getLen(c);
  89              		.loc 1 11 9 is_stmt 1 view .LVU20
  90              	.LVL7:
  12:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
  91              		.loc 1 12 9 view .LVU21
  12:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
  92              		.loc 1 12 29 is_stmt 0 view .LVU22
  93 004f E8000000 		call	_ZN10translator6getLenEPKh
  93      00
  94              	.LVL8:
  12:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
  95              		.loc 1 12 29 view .LVU23
  96 0054 89C7     		movl	%eax, %edi
  97              	.LVL9:
  13:Src/translator.cpp ****         {
  98              		.loc 1 13 9 is_stmt 1 view .LVU24
  99              	.LBB45:
  13:Src/translator.cpp ****         {
 100              		.loc 1 13 21 is_stmt 0 view .LVU25
 101 0056 BA000000 		movl	$0, %edx
 101      00
 102              	.LBE45:
  11:Src/translator.cpp ****         uint8_t len = getLen(c);
 103              		.loc 1 11 20 view .LVU26
 104 005b B8000000 		movl	$0, %eax
 104      00
 105              	.LVL10:
 106              	.L12:
 107              	.LBB46:
  13:Src/translator.cpp ****         {
 108              		.loc 1 13 30 discriminator 3 view .LVU27
GAS LISTING /tmp/ccUgL469.s 			page 8


 109 0060 4038FA   		cmpb	%dil, %dl
 110 0063 731C     		jnb	.L10
  15:Src/translator.cpp ****         }
 111              		.loc 1 15 13 is_stmt 1 discriminator 2 view .LVU28
  15:Src/translator.cpp ****         }
 112              		.loc 1 15 27 is_stmt 0 discriminator 2 view .LVU29
 113 0065 0FB6CA   		movzbl	%dl, %ecx
  15:Src/translator.cpp ****         }
 114              		.loc 1 15 25 discriminator 2 view .LVU30
 115 0068 8D7103   		leal	3(%rcx), %esi
 116 006b 4863F6   		movslq	%esi, %rsi
  15:Src/translator.cpp ****         }
 117              		.loc 1 15 28 discriminator 2 view .LVU31
 118 006e 0FB63433 		movzbl	(%rbx,%rsi), %esi
  15:Src/translator.cpp ****         }
 119              		.loc 1 15 37 discriminator 2 view .LVU32
 120 0072 C1E103   		sall	$3, %ecx
 121 0075 83E108   		andl	$8, %ecx
  15:Src/translator.cpp ****         }
 122              		.loc 1 15 31 discriminator 2 view .LVU33
 123 0078 D3E6     		sall	%cl, %esi
  15:Src/translator.cpp ****         }
 124              		.loc 1 15 17 discriminator 2 view .LVU34
 125 007a 09F0     		orl	%esi, %eax
 126              	.LVL11:
  13:Src/translator.cpp ****         {
 127              		.loc 1 13 9 discriminator 2 view .LVU35
 128 007c 83C201   		addl	$1, %edx
 129              	.LVL12:
  13:Src/translator.cpp ****         {
 130              		.loc 1 13 9 discriminator 2 view .LVU36
 131 007f EBDF     		jmp	.L12
 132              	.LVL13:
 133              	.L10:
  13:Src/translator.cpp ****         {
 134              		.loc 1 13 9 discriminator 2 view .LVU37
 135              	.LBE46:
  18:Src/translator.cpp **** 
 136              		.loc 1 18 5 view .LVU38
 137 0081 5B       		popq	%rbx
 138              		.cfi_def_cfa_offset 8
 139              	.LVL14:
  18:Src/translator.cpp **** 
 140              		.loc 1 18 5 view .LVU39
 141 0082 C3       		ret
 142              		.cfi_endproc
 143              	.LFE1503:
 145              		.globl	_ZN10translator10getPayloadEPKhPh
 147              	_ZN10translator10getPayloadEPKhPh:
 148              	.LVL15:
 149              	.LFB1507:
  73:Src/translator.cpp ****         uint8_t len = getLen(package);
 150              		.loc 1 73 5 is_stmt 1 view -0
 151              		.cfi_startproc
  73:Src/translator.cpp ****         uint8_t len = getLen(package);
 152              		.loc 1 73 5 is_stmt 0 view .LVU41
 153 0083 55       		pushq	%rbp
GAS LISTING /tmp/ccUgL469.s 			page 9


 154              		.cfi_def_cfa_offset 16
 155              		.cfi_offset 6, -16
 156 0084 53       		pushq	%rbx
 157              		.cfi_def_cfa_offset 24
 158              		.cfi_offset 3, -24
 159 0085 4889FB   		movq	%rdi, %rbx
 160 0088 4889F5   		movq	%rsi, %rbp
  74:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
 161              		.loc 1 74 9 is_stmt 1 view .LVU42
  74:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
 162              		.loc 1 74 29 is_stmt 0 view .LVU43
 163 008b E8000000 		call	_ZN10translator6getLenEPKh
 163      00
 164              	.LVL16:
  75:Src/translator.cpp ****         {
 165              		.loc 1 75 9 is_stmt 1 view .LVU44
 166              	.LBB47:
  75:Src/translator.cpp ****         {
 167              		.loc 1 75 21 is_stmt 0 view .LVU45
 168 0090 BA000000 		movl	$0, %edx
 168      00
 169              	.LVL17:
 170              	.L16:
  75:Src/translator.cpp ****         {
 171              		.loc 1 75 30 discriminator 3 view .LVU46
 172 0095 38C2     		cmpb	%al, %dl
 173 0097 7312     		jnb	.L14
  77:Src/translator.cpp ****         }
 174              		.loc 1 77 13 is_stmt 1 discriminator 2 view .LVU47
  77:Src/translator.cpp ****         }
 175              		.loc 1 77 29 is_stmt 0 discriminator 2 view .LVU48
 176 0099 0FB6CA   		movzbl	%dl, %ecx
  77:Src/translator.cpp ****         }
 177              		.loc 1 77 34 discriminator 2 view .LVU49
 178 009c 0FB6740B 		movzbl	3(%rbx,%rcx), %esi
 178      03
  77:Src/translator.cpp ****         }
 179              		.loc 1 77 19 discriminator 2 view .LVU50
 180 00a1 4088740D 		movb	%sil, 0(%rbp,%rcx)
 180      00
  75:Src/translator.cpp ****         {
 181              		.loc 1 75 9 discriminator 2 view .LVU51
 182 00a6 83C201   		addl	$1, %edx
 183              	.LVL18:
  75:Src/translator.cpp ****         {
 184              		.loc 1 75 9 discriminator 2 view .LVU52
 185 00a9 EBEA     		jmp	.L16
 186              	.L14:
  75:Src/translator.cpp ****         {
 187              		.loc 1 75 9 discriminator 2 view .LVU53
 188              	.LBE47:
  79:Src/translator.cpp **** 
 189              		.loc 1 79 5 view .LVU54
 190 00ab 5B       		popq	%rbx
 191              		.cfi_def_cfa_offset 16
 192              	.LVL19:
  79:Src/translator.cpp **** 
GAS LISTING /tmp/ccUgL469.s 			page 10


 193              		.loc 1 79 5 view .LVU55
 194 00ac 5D       		popq	%rbp
 195              		.cfi_def_cfa_offset 8
 196              	.LVL20:
  79:Src/translator.cpp **** 
 197              		.loc 1 79 5 view .LVU56
 198 00ad C3       		ret
 199              		.cfi_endproc
 200              	.LFE1507:
 202              		.globl	_ZN10translator6equalsEPKhS1_
 204              	_ZN10translator6equalsEPKhS1_:
 205              	.LVL21:
 206              	.LFB1509:
  88:Src/translator.cpp ****         if(p1[0] != p2[0])
 207              		.loc 1 88 5 is_stmt 1 view -0
 208              		.cfi_startproc
  89:Src/translator.cpp ****             return false;
 209              		.loc 1 89 9 view .LVU58
 210 00ae 0FB606   		movzbl	(%rsi), %eax
 211 00b1 3807     		cmpb	%al, (%rdi)
 212 00b3 7529     		jne	.L21
  88:Src/translator.cpp ****         if(p1[0] != p2[0])
 213              		.loc 1 88 5 is_stmt 0 view .LVU59
 214 00b5 55       		pushq	%rbp
 215              		.cfi_def_cfa_offset 16
 216              		.cfi_offset 6, -16
 217 00b6 53       		pushq	%rbx
 218              		.cfi_def_cfa_offset 24
 219              		.cfi_offset 3, -24
 220 00b7 4889FB   		movq	%rdi, %rbx
 221 00ba 4889F5   		movq	%rsi, %rbp
  92:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
 222              		.loc 1 92 9 is_stmt 1 view .LVU60
  92:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
 223              		.loc 1 92 29 is_stmt 0 view .LVU61
 224 00bd E8000000 		call	_ZN10translator6getLenEPKh
 224      00
 225              	.LVL22:
  93:Src/translator.cpp ****         {
 226              		.loc 1 93 9 is_stmt 1 view .LVU62
 227              	.LBB48:
  93:Src/translator.cpp ****         {
 228              		.loc 1 93 21 is_stmt 0 view .LVU63
 229 00c2 BA000000 		movl	$0, %edx
 229      00
 230              	.LVL23:
 231              	.L20:
  93:Src/translator.cpp ****         {
 232              		.loc 1 93 30 discriminator 1 view .LVU64
 233 00c7 38C2     		cmpb	%al, %dl
 234 00c9 7319     		jnb	.L22
  95:Src/translator.cpp ****                 return false;
 235              		.loc 1 95 13 is_stmt 1 view .LVU65
  95:Src/translator.cpp ****                 return false;
 236              		.loc 1 95 19 is_stmt 0 view .LVU66
 237 00cb 0FB6CA   		movzbl	%dl, %ecx
  95:Src/translator.cpp ****                 return false;
GAS LISTING /tmp/ccUgL469.s 			page 11


 238              		.loc 1 95 13 view .LVU67
 239 00ce 0FB6740D 		movzbl	0(%rbp,%rcx), %esi
 239      00
 240 00d3 4038340B 		cmpb	%sil, (%rbx,%rcx)
 241 00d7 7513     		jne	.L23
  93:Src/translator.cpp ****         {
 242              		.loc 1 93 9 discriminator 2 view .LVU68
 243 00d9 83C201   		addl	$1, %edx
 244              	.LVL24:
  93:Src/translator.cpp ****         {
 245              		.loc 1 93 9 discriminator 2 view .LVU69
 246 00dc EBE9     		jmp	.L20
 247              	.LVL25:
 248              	.L21:
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_restore 3
 251              		.cfi_restore 6
  93:Src/translator.cpp ****         {
 252              		.loc 1 93 9 discriminator 2 view .LVU70
 253              	.LBE48:
  90:Src/translator.cpp **** 
 254              		.loc 1 90 20 view .LVU71
 255 00de B8000000 		movl	$0, %eax
 255      00
  99:Src/translator.cpp **** 
 256              		.loc 1 99 5 view .LVU72
 257 00e3 C3       		ret
 258              	.LVL26:
 259              	.L22:
 260              		.cfi_def_cfa_offset 24
 261              		.cfi_offset 3, -24
 262              		.cfi_offset 6, -16
  98:Src/translator.cpp ****     }
 263              		.loc 1 98 16 view .LVU73
 264 00e4 B8010000 		movl	$1, %eax
 264      00
 265              	.LVL27:
 266              	.L18:
  99:Src/translator.cpp **** 
 267              		.loc 1 99 5 view .LVU74
 268 00e9 5B       		popq	%rbx
 269              		.cfi_remember_state
 270              		.cfi_def_cfa_offset 16
 271              	.LVL28:
  99:Src/translator.cpp **** 
 272              		.loc 1 99 5 view .LVU75
 273 00ea 5D       		popq	%rbp
 274              		.cfi_def_cfa_offset 8
 275              	.LVL29:
  99:Src/translator.cpp **** 
 276              		.loc 1 99 5 view .LVU76
 277 00eb C3       		ret
 278              	.LVL30:
 279              	.L23:
 280              		.cfi_restore_state
 281              	.LBB49:
  96:Src/translator.cpp ****         }
GAS LISTING /tmp/ccUgL469.s 			page 12


 282              		.loc 1 96 24 view .LVU77
 283 00ec B8000000 		movl	$0, %eax
 283      00
 284              	.LVL31:
  96:Src/translator.cpp ****         }
 285              		.loc 1 96 24 view .LVU78
 286 00f1 EBF6     		jmp	.L18
 287              	.LBE49:
 288              		.cfi_endproc
 289              	.LFE1509:
 291              		.globl	_ZN10translator11getZeroByteEhh
 293              	_ZN10translator11getZeroByteEhh:
 294              	.LVL32:
 295              	.LFB1510:
 102:Src/translator.cpp ****         return (uint8_t)(((type & 0b11) << 6) | (len & LEN_MASK));
 296              		.loc 1 102 5 is_stmt 1 view -0
 297              		.cfi_startproc
 103:Src/translator.cpp ****     }
 298              		.loc 1 103 9 view .LVU80
 103:Src/translator.cpp ****     }
 299              		.loc 1 103 33 is_stmt 0 view .LVU81
 300 00f3 400FB6C7 		movzbl	%dil, %eax
 103:Src/translator.cpp ****     }
 301              		.loc 1 103 41 view .LVU82
 302 00f7 C1E006   		sall	$6, %eax
 103:Src/translator.cpp ****     }
 303              		.loc 1 103 54 view .LVU83
 304 00fa 83E63F   		andl	$63, %esi
 305              	.LVL33:
 103:Src/translator.cpp ****     }
 306              		.loc 1 103 47 view .LVU84
 307 00fd 09F0     		orl	%esi, %eax
 104:Src/translator.cpp **** 
 308              		.loc 1 104 5 view .LVU85
 309 00ff C3       		ret
 310              		.cfi_endproc
 311              	.LFE1510:
 313              		.globl	_ZN10translator11getCheckSumEPKh
 315              	_ZN10translator11getCheckSumEPKh:
 316              	.LVL34:
 317              	.LFB1511:
 108:Src/translator.cpp ****         return (package[1] << 8) | package[2];
 318              		.loc 1 108 5 is_stmt 1 view -0
 319              		.cfi_startproc
 109:Src/translator.cpp ****     }
 320              		.loc 1 109 9 view .LVU87
 109:Src/translator.cpp ****     }
 321              		.loc 1 109 26 is_stmt 0 view .LVU88
 322 0100 0FB64701 		movzbl	1(%rdi), %eax
 109:Src/translator.cpp ****     }
 323              		.loc 1 109 28 view .LVU89
 324 0104 C1E008   		sall	$8, %eax
 325 0107 89C2     		movl	%eax, %edx
 109:Src/translator.cpp ****     }
 326              		.loc 1 109 45 view .LVU90
 327 0109 0FB64702 		movzbl	2(%rdi), %eax
 109:Src/translator.cpp ****     }
GAS LISTING /tmp/ccUgL469.s 			page 13


 328              		.loc 1 109 34 view .LVU91
 329 010d 09D0     		orl	%edx, %eax
 110:Src/translator.cpp **** 
 330              		.loc 1 110 5 view .LVU92
 331 010f C3       		ret
 332              		.cfi_endproc
 333              	.LFE1511:
 335              		.globl	_ZN10translator11parsePacketEPhS0_
 337              	_ZN10translator11parsePacketEPhS0_:
 338              	.LVL35:
 339              	.LFB1505:
  29:Src/translator.cpp ****         uint8_t type = getType(package);
 340              		.loc 1 29 5 is_stmt 1 view -0
 341              		.cfi_startproc
  29:Src/translator.cpp ****         uint8_t type = getType(package);
 342              		.loc 1 29 5 is_stmt 0 view .LVU94
 343 0110 4156     		pushq	%r14
 344              		.cfi_def_cfa_offset 16
 345              		.cfi_offset 14, -16
 346 0112 4155     		pushq	%r13
 347              		.cfi_def_cfa_offset 24
 348              		.cfi_offset 13, -24
 349 0114 4154     		pushq	%r12
 350              		.cfi_def_cfa_offset 32
 351              		.cfi_offset 12, -32
 352 0116 55       		pushq	%rbp
 353              		.cfi_def_cfa_offset 40
 354              		.cfi_offset 6, -40
 355 0117 53       		pushq	%rbx
 356              		.cfi_def_cfa_offset 48
 357              		.cfi_offset 3, -48
 358 0118 4889FB   		movq	%rdi, %rbx
 359 011b 4989F5   		movq	%rsi, %r13
  30:Src/translator.cpp ****         if(type != TYPE_ARR && type != TYPE_CMD && type != TYPE_VAR)
 360              		.loc 1 30 9 is_stmt 1 view .LVU95
  30:Src/translator.cpp ****         if(type != TYPE_ARR && type != TYPE_CMD && type != TYPE_VAR)
 361              		.loc 1 30 31 is_stmt 0 view .LVU96
 362 011e E8000000 		call	_ZN10translator7getTypeEPKh
 362      00
 363              	.LVL36:
  30:Src/translator.cpp ****         if(type != TYPE_ARR && type != TYPE_CMD && type != TYPE_VAR)
 364              		.loc 1 30 31 view .LVU97
 365 0123 4189C4   		movl	%eax, %r12d
 366              	.LVL37:
  31:Src/translator.cpp ****             return TYPE_BAD_TYPE;
 367              		.loc 1 31 9 is_stmt 1 view .LVU98
  31:Src/translator.cpp ****             return TYPE_BAD_TYPE;
 368              		.loc 1 31 17 is_stmt 0 view .LVU99
 369 0126 3C03     		cmpb	$3, %al
 370 0128 0F95C2   		setne	%dl
  31:Src/translator.cpp ****             return TYPE_BAD_TYPE;
 371              		.loc 1 31 37 view .LVU100
 372 012b 3C01     		cmpb	$1, %al
 373 012d 0F95C0   		setne	%al
 374              	.LVL38:
  31:Src/translator.cpp ****             return TYPE_BAD_TYPE;
 375              		.loc 1 31 9 view .LVU101
GAS LISTING /tmp/ccUgL469.s 			page 14


 376 0130 84C2     		testb	%al, %dl
 377 0132 7406     		je	.L31
  31:Src/translator.cpp ****             return TYPE_BAD_TYPE;
 378              		.loc 1 31 49 discriminator 1 view .LVU102
 379 0134 4180FC02 		cmpb	$2, %r12b
 380 0138 754F     		jne	.L34
 381              	.L31:
  34:Src/translator.cpp ****         if(len == 0)
 382              		.loc 1 34 9 is_stmt 1 view .LVU103
  34:Src/translator.cpp ****         if(len == 0)
 383              		.loc 1 34 29 is_stmt 0 view .LVU104
 384 013a 4889DF   		movq	%rbx, %rdi
 385 013d E8000000 		call	_ZN10translator6getLenEPKh
 385      00
 386              	.LVL39:
 387 0142 89C5     		movl	%eax, %ebp
 388              	.LVL40:
  35:Src/translator.cpp ****             return TYPE_BAD_LEN;
 389              		.loc 1 35 9 is_stmt 1 view .LVU105
 390 0144 84C0     		testb	%al, %al
 391 0146 7449     		je	.L35
  38:Src/translator.cpp ****             return TYPE_BAD_CHECKSUM;
 392              		.loc 1 38 9 view .LVU106
  38:Src/translator.cpp ****             return TYPE_BAD_CHECKSUM;
 393              		.loc 1 38 23 is_stmt 0 view .LVU107
 394 0148 4889DF   		movq	%rbx, %rdi
 395 014b E8000000 		call	_ZN10translator11genCheckSumEPKh
 395      00
 396              	.LVL41:
  38:Src/translator.cpp ****             return TYPE_BAD_CHECKSUM;
 397              		.loc 1 38 23 view .LVU108
 398 0150 4189C6   		movl	%eax, %r14d
  38:Src/translator.cpp ****             return TYPE_BAD_CHECKSUM;
 399              		.loc 1 38 47 view .LVU109
 400 0153 4889DF   		movq	%rbx, %rdi
 401 0156 E8000000 		call	_ZN10translator11getCheckSumEPKh
 401      00
 402              	.LVL42:
  38:Src/translator.cpp ****             return TYPE_BAD_CHECKSUM;
 403              		.loc 1 38 9 view .LVU110
 404 015b 664439F0 		cmpw	%r14w, %ax
 405 015f 7538     		jne	.L36
 406              	.LBB50:
  42:Src/translator.cpp ****         {
 407              		.loc 1 42 21 view .LVU111
 408 0161 B8000000 		movl	$0, %eax
 408      00
 409 0166 EB10     		jmp	.L33
 410              	.LVL43:
 411              	.L38:
  44:Src/translator.cpp ****         }
 412              		.loc 1 44 13 is_stmt 1 discriminator 2 view .LVU112
  44:Src/translator.cpp ****         }
 413              		.loc 1 44 36 is_stmt 0 discriminator 2 view .LVU113
 414 0168 0FB6D0   		movzbl	%al, %edx
  44:Src/translator.cpp ****         }
 415              		.loc 1 44 41 discriminator 2 view .LVU114
GAS LISTING /tmp/ccUgL469.s 			page 15


 416 016b 0FB64C13 		movzbl	3(%rbx,%rdx), %ecx
 416      03
  44:Src/translator.cpp ****         }
 417              		.loc 1 44 26 discriminator 2 view .LVU115
 418 0170 41884C15 		movb	%cl, 0(%r13,%rdx)
 418      00
  42:Src/translator.cpp ****         {
 419              		.loc 1 42 9 discriminator 2 view .LVU116
 420 0175 83C001   		addl	$1, %eax
 421              	.LVL44:
 422              	.L33:
  42:Src/translator.cpp ****         {
 423              		.loc 1 42 30 discriminator 3 view .LVU117
 424 0178 4038E8   		cmpb	%bpl, %al
 425 017b 72EB     		jb	.L38
 426              	.LVL45:
 427              	.L30:
  42:Src/translator.cpp ****         {
 428              		.loc 1 42 30 discriminator 3 view .LVU118
 429              	.LBE50:
  47:Src/translator.cpp **** 
 430              		.loc 1 47 5 view .LVU119
 431 017d 4489E0   		movl	%r12d, %eax
 432 0180 5B       		popq	%rbx
 433              		.cfi_remember_state
 434              		.cfi_def_cfa_offset 40
 435              	.LVL46:
  47:Src/translator.cpp **** 
 436              		.loc 1 47 5 view .LVU120
 437 0181 5D       		popq	%rbp
 438              		.cfi_def_cfa_offset 32
 439 0182 415C     		popq	%r12
 440              		.cfi_def_cfa_offset 24
 441 0184 415D     		popq	%r13
 442              		.cfi_def_cfa_offset 16
 443              	.LVL47:
  47:Src/translator.cpp **** 
 444              		.loc 1 47 5 view .LVU121
 445 0186 415E     		popq	%r14
 446              		.cfi_def_cfa_offset 8
 447 0188 C3       		ret
 448              	.LVL48:
 449              	.L34:
 450              		.cfi_restore_state
  32:Src/translator.cpp **** 
 451              		.loc 1 32 20 view .LVU122
 452 0189 41BC6500 		movl	$101, %r12d
 452      0000
 453              	.LVL49:
  32:Src/translator.cpp **** 
 454              		.loc 1 32 20 view .LVU123
 455 018f EBEC     		jmp	.L30
 456              	.LVL50:
 457              	.L35:
  36:Src/translator.cpp **** 
 458              		.loc 1 36 20 view .LVU124
 459 0191 41BC6400 		movl	$100, %r12d
GAS LISTING /tmp/ccUgL469.s 			page 16


 459      0000
 460              	.LVL51:
  36:Src/translator.cpp **** 
 461              		.loc 1 36 20 view .LVU125
 462 0197 EBE4     		jmp	.L30
 463              	.LVL52:
 464              	.L36:
  39:Src/translator.cpp **** 
 465              		.loc 1 39 20 view .LVU126
 466 0199 41BC6600 		movl	$102, %r12d
 466      0000
 467              	.LVL53:
  39:Src/translator.cpp **** 
 468              		.loc 1 39 20 view .LVU127
 469 019f EBDC     		jmp	.L30
 470              		.cfi_endproc
 471              	.LFE1505:
 473              		.globl	_ZN10translator8parseCmdEPhPPFvvE
 475              	_ZN10translator8parseCmdEPhPPFvvE:
 476              	.LVL54:
 477              	.LFB1506:
  52:Src/translator.cpp ****         uint8_t var = getType(package);
 478              		.loc 1 52 5 is_stmt 1 view -0
 479              		.cfi_startproc
  52:Src/translator.cpp ****         uint8_t var = getType(package);
 480              		.loc 1 52 5 is_stmt 0 view .LVU129
 481 01a1 4155     		pushq	%r13
 482              		.cfi_def_cfa_offset 16
 483              		.cfi_offset 13, -16
 484 01a3 4154     		pushq	%r12
 485              		.cfi_def_cfa_offset 24
 486              		.cfi_offset 12, -24
 487 01a5 55       		pushq	%rbp
 488              		.cfi_def_cfa_offset 32
 489              		.cfi_offset 6, -32
 490 01a6 53       		pushq	%rbx
 491              		.cfi_def_cfa_offset 40
 492              		.cfi_offset 3, -40
 493 01a7 4883EC08 		subq	$8, %rsp
 494              		.cfi_def_cfa_offset 48
 495 01ab 4889FB   		movq	%rdi, %rbx
 496 01ae 4989F4   		movq	%rsi, %r12
  53:Src/translator.cpp ****         if(var != TYPE_CMD)
 497              		.loc 1 53 9 is_stmt 1 view .LVU130
  53:Src/translator.cpp ****         if(var != TYPE_CMD)
 498              		.loc 1 53 30 is_stmt 0 view .LVU131
 499 01b1 E8000000 		call	_ZN10translator7getTypeEPKh
 499      00
 500              	.LVL55:
  54:Src/translator.cpp ****             return TYPE_BAD_TYPE;
 501              		.loc 1 54 9 is_stmt 1 view .LVU132
 502 01b6 3C01     		cmpb	$1, %al
 503 01b8 7538     		jne	.L41
  57:Src/translator.cpp ****         if(var != 1)
 504              		.loc 1 57 9 view .LVU133
  57:Src/translator.cpp ****         if(var != 1)
 505              		.loc 1 57 21 is_stmt 0 view .LVU134
GAS LISTING /tmp/ccUgL469.s 			page 17


 506 01ba 4889DF   		movq	%rbx, %rdi
 507 01bd E8000000 		call	_ZN10translator6getLenEPKh
 507      00
 508              	.LVL56:
  57:Src/translator.cpp ****         if(var != 1)
 509              		.loc 1 57 21 view .LVU135
 510 01c2 89C5     		movl	%eax, %ebp
 511              	.LVL57:
  58:Src/translator.cpp ****             return TYPE_BAD_LEN;
 512              		.loc 1 58 9 is_stmt 1 view .LVU136
 513 01c4 3C01     		cmpb	$1, %al
 514 01c6 753C     		jne	.L42
  61:Src/translator.cpp ****         if(check != getCheckSum(package))
 515              		.loc 1 61 9 view .LVU137
  61:Src/translator.cpp ****         if(check != getCheckSum(package))
 516              		.loc 1 61 39 is_stmt 0 view .LVU138
 517 01c8 4889DF   		movq	%rbx, %rdi
 518 01cb E8000000 		call	_ZN10translator11genCheckSumEPKh
 518      00
 519              	.LVL58:
  61:Src/translator.cpp ****         if(check != getCheckSum(package))
 520              		.loc 1 61 39 view .LVU139
 521 01d0 4189C5   		movl	%eax, %r13d
 522              	.LVL59:
  62:Src/translator.cpp ****             return TYPE_BAD_CHECKSUM;
 523              		.loc 1 62 9 is_stmt 1 view .LVU140
  62:Src/translator.cpp ****             return TYPE_BAD_CHECKSUM;
 524              		.loc 1 62 32 is_stmt 0 view .LVU141
 525 01d3 4889DF   		movq	%rbx, %rdi
 526 01d6 E8000000 		call	_ZN10translator11getCheckSumEPKh
 526      00
 527              	.LVL60:
  62:Src/translator.cpp ****             return TYPE_BAD_CHECKSUM;
 528              		.loc 1 62 9 view .LVU142
 529 01db 664439E8 		cmpw	%r13w, %ax
 530 01df 752A     		jne	.L43
  65:Src/translator.cpp ****             funcArr[package[3]]();
 531              		.loc 1 65 9 is_stmt 1 view .LVU143
  65:Src/translator.cpp ****             funcArr[package[3]]();
 532              		.loc 1 65 29 is_stmt 0 view .LVU144
 533 01e1 0FB64303 		movzbl	3(%rbx), %eax
  65:Src/translator.cpp ****             funcArr[package[3]]();
 534              		.loc 1 65 30 view .LVU145
 535 01e5 498B04C4 		movq	(%r12,%rax,8), %rax
  65:Src/translator.cpp ****             funcArr[package[3]]();
 536              		.loc 1 65 9 view .LVU146
 537 01e9 4885C0   		testq	%rax, %rax
 538 01ec 7409     		je	.L39
  66:Src/translator.cpp ****         return TYPE_CMD;
 539              		.loc 1 66 13 is_stmt 1 view .LVU147
  66:Src/translator.cpp ****         return TYPE_CMD;
 540              		.loc 1 66 32 is_stmt 0 view .LVU148
 541 01ee FFD0     		call	*%rax
 542              	.LVL61:
 543 01f0 EB05     		jmp	.L39
 544              	.LVL62:
 545              	.L41:
GAS LISTING /tmp/ccUgL469.s 			page 18


  55:Src/translator.cpp **** 
 546              		.loc 1 55 20 view .LVU149
 547 01f2 BD650000 		movl	$101, %ebp
 547      00
 548              	.LVL63:
 549              	.L39:
  68:Src/translator.cpp **** 
 550              		.loc 1 68 5 view .LVU150
 551 01f7 89E8     		movl	%ebp, %eax
 552 01f9 4883C408 		addq	$8, %rsp
 553              		.cfi_remember_state
 554              		.cfi_def_cfa_offset 40
 555 01fd 5B       		popq	%rbx
 556              		.cfi_def_cfa_offset 32
 557              	.LVL64:
  68:Src/translator.cpp **** 
 558              		.loc 1 68 5 view .LVU151
 559 01fe 5D       		popq	%rbp
 560              		.cfi_def_cfa_offset 24
 561 01ff 415C     		popq	%r12
 562              		.cfi_def_cfa_offset 16
 563              	.LVL65:
  68:Src/translator.cpp **** 
 564              		.loc 1 68 5 view .LVU152
 565 0201 415D     		popq	%r13
 566              		.cfi_def_cfa_offset 8
 567 0203 C3       		ret
 568              	.LVL66:
 569              	.L42:
 570              		.cfi_restore_state
  59:Src/translator.cpp **** 
 571              		.loc 1 59 20 view .LVU153
 572 0204 BD640000 		movl	$100, %ebp
 572      00
 573 0209 EBEC     		jmp	.L39
 574              	.LVL67:
 575              	.L43:
  63:Src/translator.cpp **** 
 576              		.loc 1 63 20 view .LVU154
 577 020b BD660000 		movl	$102, %ebp
 577      00
 578              	.LVL68:
  63:Src/translator.cpp **** 
 579              		.loc 1 63 20 view .LVU155
 580 0210 EBE5     		jmp	.L39
 581              		.cfi_endproc
 582              	.LFE1506:
 584              		.globl	_ZN10translator11generateCmdEhPh
 586              	_ZN10translator11generateCmdEhPh:
 587              	.LVL69:
 588              	.LFB1512:
 115:Src/translator.cpp ****         tgt[0] = getZeroByte(TYPE_CMD, 1);
 589              		.loc 1 115 5 is_stmt 1 view -0
 590              		.cfi_startproc
 115:Src/translator.cpp ****         tgt[0] = getZeroByte(TYPE_CMD, 1);
 591              		.loc 1 115 5 is_stmt 0 view .LVU157
 592 0212 55       		pushq	%rbp
GAS LISTING /tmp/ccUgL469.s 			page 19


 593              		.cfi_def_cfa_offset 16
 594              		.cfi_offset 6, -16
 595 0213 53       		pushq	%rbx
 596              		.cfi_def_cfa_offset 24
 597              		.cfi_offset 3, -24
 598 0214 89FD     		movl	%edi, %ebp
 599 0216 4889F3   		movq	%rsi, %rbx
 116:Src/translator.cpp ****         tgt[3] = cmd;
 600              		.loc 1 116 9 is_stmt 1 view .LVU158
 116:Src/translator.cpp ****         tgt[3] = cmd;
 601              		.loc 1 116 29 is_stmt 0 view .LVU159
 602 0219 BE010000 		movl	$1, %esi
 602      00
 603              	.LVL70:
 116:Src/translator.cpp ****         tgt[3] = cmd;
 604              		.loc 1 116 29 view .LVU160
 605 021e BF010000 		movl	$1, %edi
 605      00
 606              	.LVL71:
 116:Src/translator.cpp ****         tgt[3] = cmd;
 607              		.loc 1 116 29 view .LVU161
 608 0223 E8000000 		call	_ZN10translator11getZeroByteEhh
 608      00
 609              	.LVL72:
 116:Src/translator.cpp ****         tgt[3] = cmd;
 610              		.loc 1 116 16 view .LVU162
 611 0228 8803     		movb	%al, (%rbx)
 117:Src/translator.cpp ****         checksum_t check = getCheckSum(tgt);
 612              		.loc 1 117 9 is_stmt 1 view .LVU163
 117:Src/translator.cpp ****         checksum_t check = getCheckSum(tgt);
 613              		.loc 1 117 16 is_stmt 0 view .LVU164
 614 022a 40886B03 		movb	%bpl, 3(%rbx)
 118:Src/translator.cpp ****         tgt[1] = check >> 8;
 615              		.loc 1 118 9 is_stmt 1 view .LVU165
 118:Src/translator.cpp ****         tgt[1] = check >> 8;
 616              		.loc 1 118 39 is_stmt 0 view .LVU166
 617 022e 4889DF   		movq	%rbx, %rdi
 618 0231 E8000000 		call	_ZN10translator11getCheckSumEPKh
 618      00
 619              	.LVL73:
 119:Src/translator.cpp ****         tgt[2] = check & 0xFF;
 620              		.loc 1 119 9 is_stmt 1 view .LVU167
 119:Src/translator.cpp ****         tgt[2] = check & 0xFF;
 621              		.loc 1 119 24 is_stmt 0 view .LVU168
 622 0236 0FB6D4   		movzbl	%ah, %edx
 119:Src/translator.cpp ****         tgt[2] = check & 0xFF;
 623              		.loc 1 119 16 view .LVU169
 624 0239 885301   		movb	%dl, 1(%rbx)
 120:Src/translator.cpp ****     }
 625              		.loc 1 120 9 is_stmt 1 view .LVU170
 120:Src/translator.cpp ****     }
 626              		.loc 1 120 16 is_stmt 0 view .LVU171
 627 023c 884302   		movb	%al, 2(%rbx)
 121:Src/translator.cpp **** 
 628              		.loc 1 121 5 view .LVU172
 629 023f 5B       		popq	%rbx
 630              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccUgL469.s 			page 20


 631              	.LVL74:
 121:Src/translator.cpp **** 
 632              		.loc 1 121 5 view .LVU173
 633 0240 5D       		popq	%rbp
 634              		.cfi_def_cfa_offset 8
 635 0241 C3       		ret
 636              		.cfi_endproc
 637              	.LFE1512:
 639              		.globl	_ZN10translator8validateEPKh
 641              	_ZN10translator8validateEPKh:
 642              	.LVL75:
 643              	.LFB1514:
 136:Src/translator.cpp ****         uint8_t type = getType(pack);
 644              		.loc 1 136 5 is_stmt 1 view -0
 645              		.cfi_startproc
 136:Src/translator.cpp ****         uint8_t type = getType(pack);
 646              		.loc 1 136 5 is_stmt 0 view .LVU175
 647 0242 55       		pushq	%rbp
 648              		.cfi_def_cfa_offset 16
 649              		.cfi_offset 6, -16
 650 0243 53       		pushq	%rbx
 651              		.cfi_def_cfa_offset 24
 652              		.cfi_offset 3, -24
 653 0244 4889FB   		movq	%rdi, %rbx
 137:Src/translator.cpp ****         switch (type)
 654              		.loc 1 137 9 is_stmt 1 view .LVU176
 137:Src/translator.cpp ****         switch (type)
 655              		.loc 1 137 31 is_stmt 0 view .LVU177
 656 0247 E8000000 		call	_ZN10translator7getTypeEPKh
 656      00
 657              	.LVL76:
 138:Src/translator.cpp ****         {
 658              		.loc 1 138 9 is_stmt 1 view .LVU178
 659 024c 3C01     		cmpb	$1, %al
 660 024e 7432     		je	.L48
 661 0250 84C0     		testb	%al, %al
 662 0252 7441     		je	.L52
 663 0254 83E802   		subl	$2, %eax
 664              	.LVL77:
 138:Src/translator.cpp ****         {
 665              		.loc 1 138 9 is_stmt 0 view .LVU179
 666 0257 3C01     		cmpb	$1, %al
 667 0259 7741     		ja	.L58
 146:Src/translator.cpp ****             case TYPE_ARR:
 668              		.loc 1 146 13 is_stmt 1 view .LVU180
 147:Src/translator.cpp ****             {
 669              		.loc 1 147 13 view .LVU181
 148:Src/translator.cpp ****                 if(getLen(pack) <= 1)
 670              		.loc 1 148 13 view .LVU182
 149:Src/translator.cpp ****                     return false;
 671              		.loc 1 149 17 view .LVU183
 149:Src/translator.cpp ****                     return false;
 672              		.loc 1 149 26 is_stmt 0 view .LVU184
 673 025b 4889DF   		movq	%rbx, %rdi
 674 025e E8000000 		call	_ZN10translator6getLenEPKh
 674      00
 675              	.LVL78:
GAS LISTING /tmp/ccUgL469.s 			page 21


 149:Src/translator.cpp ****                     return false;
 676              		.loc 1 149 17 view .LVU185
 677 0263 3C01     		cmpb	$1, %al
 678 0265 763C     		jbe	.L55
 679              	.L51:
 156:Src/translator.cpp ****     }
 680              		.loc 1 156 9 is_stmt 1 view .LVU186
 156:Src/translator.cpp ****     }
 681              		.loc 1 156 28 is_stmt 0 view .LVU187
 682 0267 4889DF   		movq	%rbx, %rdi
 683 026a E8000000 		call	_ZN10translator11getCheckSumEPKh
 683      00
 684              	.LVL79:
 685 026f 89C5     		movl	%eax, %ebp
 156:Src/translator.cpp ****     }
 686              		.loc 1 156 49 view .LVU188
 687 0271 4889DF   		movq	%rbx, %rdi
 688 0274 E8000000 		call	_ZN10translator11genCheckSumEPKh
 688      00
 689              	.LVL80:
 156:Src/translator.cpp ****     }
 690              		.loc 1 156 55 view .LVU189
 691 0279 6639C5   		cmpw	%ax, %bp
 692 027c 0F94C0   		sete	%al
 693              	.L47:
 157:Src/translator.cpp **** 
 694              		.loc 1 157 5 view .LVU190
 695 027f 5B       		popq	%rbx
 696              		.cfi_remember_state
 697              		.cfi_def_cfa_offset 16
 698              	.LVL81:
 157:Src/translator.cpp **** 
 699              		.loc 1 157 5 view .LVU191
 700 0280 5D       		popq	%rbp
 701              		.cfi_def_cfa_offset 8
 702 0281 C3       		ret
 703              	.LVL82:
 704              	.L48:
 705              		.cfi_restore_state
 140:Src/translator.cpp ****             {
 706              		.loc 1 140 13 is_stmt 1 view .LVU192
 141:Src/translator.cpp ****                 if(getLen(pack) != 1)
 707              		.loc 1 141 13 view .LVU193
 142:Src/translator.cpp ****                     return false;
 708              		.loc 1 142 17 view .LVU194
 142:Src/translator.cpp ****                     return false;
 709              		.loc 1 142 26 is_stmt 0 view .LVU195
 710 0282 4889DF   		movq	%rbx, %rdi
 711 0285 E8000000 		call	_ZN10translator6getLenEPKh
 711      00
 712              	.LVL83:
 142:Src/translator.cpp ****                     return false;
 713              		.loc 1 142 17 view .LVU196
 714 028a 3C01     		cmpb	$1, %al
 715 028c 74D9     		je	.L51
 143:Src/translator.cpp ****                 break;
 716              		.loc 1 143 28 view .LVU197
GAS LISTING /tmp/ccUgL469.s 			page 22


 717 028e B8000000 		movl	$0, %eax
 717      00
 718 0293 EBEA     		jmp	.L47
 719              	.LVL84:
 720              	.L52:
 138:Src/translator.cpp ****         {
 721              		.loc 1 138 9 view .LVU198
 722 0295 B8000000 		movl	$0, %eax
 722      00
 723              	.LVL85:
 138:Src/translator.cpp ****         {
 724              		.loc 1 138 9 view .LVU199
 725 029a EBE3     		jmp	.L47
 726              	.L58:
 727 029c B8000000 		movl	$0, %eax
 727      00
 728 02a1 EBDC     		jmp	.L47
 729              	.L55:
 150:Src/translator.cpp ****                 break;
 730              		.loc 1 150 28 view .LVU200
 731 02a3 B8000000 		movl	$0, %eax
 731      00
 732 02a8 EBD5     		jmp	.L47
 733              		.cfi_endproc
 734              	.LFE1514:
 736              		.globl	_ZN10translator8getVarIdEPKh
 738              	_ZN10translator8getVarIdEPKh:
 739              	.LVL86:
 740              	.LFB1513:
 126:Src/translator.cpp ****         if(!validate(pack))
 741              		.loc 1 126 5 is_stmt 1 view -0
 742              		.cfi_startproc
 126:Src/translator.cpp ****         if(!validate(pack))
 743              		.loc 1 126 5 is_stmt 0 view .LVU202
 744 02aa 53       		pushq	%rbx
 745              		.cfi_def_cfa_offset 16
 746              		.cfi_offset 3, -16
 747 02ab 4889FB   		movq	%rdi, %rbx
 127:Src/translator.cpp ****             return 0xFF;
 748              		.loc 1 127 9 is_stmt 1 view .LVU203
 127:Src/translator.cpp ****             return 0xFF;
 749              		.loc 1 127 21 is_stmt 0 view .LVU204
 750 02ae E8000000 		call	_ZN10translator8validateEPKh
 750      00
 751              	.LVL87:
 127:Src/translator.cpp ****             return 0xFF;
 752              		.loc 1 127 9 view .LVU205
 753 02b3 84C0     		testb	%al, %al
 754 02b5 7406     		je	.L61
 130:Src/translator.cpp ****     }
 755              		.loc 1 130 9 is_stmt 1 view .LVU206
 130:Src/translator.cpp ****     }
 756              		.loc 1 130 22 is_stmt 0 view .LVU207
 757 02b7 0FB64303 		movzbl	3(%rbx), %eax
 758              	.L59:
 131:Src/translator.cpp **** 
 759              		.loc 1 131 5 view .LVU208
GAS LISTING /tmp/ccUgL469.s 			page 23


 760 02bb 5B       		popq	%rbx
 761              		.cfi_remember_state
 762              		.cfi_def_cfa_offset 8
 763              	.LVL88:
 131:Src/translator.cpp **** 
 764              		.loc 1 131 5 view .LVU209
 765 02bc C3       		ret
 766              	.LVL89:
 767              	.L61:
 768              		.cfi_restore_state
 128:Src/translator.cpp **** 
 769              		.loc 1 128 20 view .LVU210
 770 02bd B8FFFFFF 		movl	$-1, %eax
 770      FF
 771 02c2 EBF7     		jmp	.L59
 772              		.cfi_endproc
 773              	.LFE1513:
 775              		.globl	_ZN10translator11generateVarEhhPKhPh
 777              	_ZN10translator11generateVarEhhPKhPh:
 778              	.LVL90:
 779              	.LFB1515:
 161:Src/translator.cpp ****         tgt[0] = getZeroByte(TYPE_VAR, len + 1);
 780              		.loc 1 161 5 is_stmt 1 view -0
 781              		.cfi_startproc
 161:Src/translator.cpp ****         tgt[0] = getZeroByte(TYPE_VAR, len + 1);
 782              		.loc 1 161 5 is_stmt 0 view .LVU212
 783 02c4 4155     		pushq	%r13
 784              		.cfi_def_cfa_offset 16
 785              		.cfi_offset 13, -16
 786 02c6 4154     		pushq	%r12
 787              		.cfi_def_cfa_offset 24
 788              		.cfi_offset 12, -24
 789 02c8 55       		pushq	%rbp
 790              		.cfi_def_cfa_offset 32
 791              		.cfi_offset 6, -32
 792 02c9 53       		pushq	%rbx
 793              		.cfi_def_cfa_offset 40
 794              		.cfi_offset 3, -40
 795 02ca 4189F5   		movl	%esi, %r13d
 796 02cd 4889D5   		movq	%rdx, %rbp
 797 02d0 4889CB   		movq	%rcx, %rbx
 798 02d3 4189FC   		movl	%edi, %r12d
 162:Src/translator.cpp ****         tgt[3] = id;
 799              		.loc 1 162 9 is_stmt 1 view .LVU213
 162:Src/translator.cpp ****         tgt[3] = id;
 800              		.loc 1 162 44 is_stmt 0 view .LVU214
 801 02d6 83C701   		addl	$1, %edi
 802              	.LVL91:
 162:Src/translator.cpp ****         tgt[3] = id;
 803              		.loc 1 162 29 view .LVU215
 804 02d9 400FB6F7 		movzbl	%dil, %esi
 805              	.LVL92:
 162:Src/translator.cpp ****         tgt[3] = id;
 806              		.loc 1 162 29 view .LVU216
 807 02dd BF020000 		movl	$2, %edi
 807      00
 808 02e2 E8000000 		call	_ZN10translator11getZeroByteEhh
GAS LISTING /tmp/ccUgL469.s 			page 24


 808      00
 809              	.LVL93:
 162:Src/translator.cpp ****         tgt[3] = id;
 810              		.loc 1 162 16 view .LVU217
 811 02e7 8803     		movb	%al, (%rbx)
 163:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
 812              		.loc 1 163 9 is_stmt 1 view .LVU218
 163:Src/translator.cpp ****         for(uint8_t i = 0; i < len; i++)
 813              		.loc 1 163 16 is_stmt 0 view .LVU219
 814 02e9 44886B03 		movb	%r13b, 3(%rbx)
 164:Src/translator.cpp ****             tgt[4 + i] = var[i];
 815              		.loc 1 164 9 is_stmt 1 view .LVU220
 816              	.LVL94:
 817              	.LBB51:
 164:Src/translator.cpp ****             tgt[4 + i] = var[i];
 818              		.loc 1 164 21 is_stmt 0 view .LVU221
 819 02ed BA000000 		movl	$0, %edx
 819      00
 820              	.LVL95:
 821              	.L65:
 164:Src/translator.cpp ****             tgt[4 + i] = var[i];
 822              		.loc 1 164 30 discriminator 3 view .LVU222
 823 02f2 4438E2   		cmpb	%r12b, %dl
 824 02f5 7318     		jnb	.L64
 165:Src/translator.cpp ****         checksum_t check = genCheckSum(tgt);
 825              		.loc 1 165 13 is_stmt 1 discriminator 2 view .LVU223
 165:Src/translator.cpp ****         checksum_t check = genCheckSum(tgt);
 826              		.loc 1 165 30 is_stmt 0 discriminator 2 view .LVU224
 827 02f7 0FB6CA   		movzbl	%dl, %ecx
 165:Src/translator.cpp ****         checksum_t check = genCheckSum(tgt);
 828              		.loc 1 165 21 discriminator 2 view .LVU225
 829 02fa 0FB6C2   		movzbl	%dl, %eax
 165:Src/translator.cpp ****         checksum_t check = genCheckSum(tgt);
 830              		.loc 1 165 19 discriminator 2 view .LVU226
 831 02fd 83C004   		addl	$4, %eax
 832 0300 4898     		cltq
 165:Src/translator.cpp ****         checksum_t check = genCheckSum(tgt);
 833              		.loc 1 165 31 discriminator 2 view .LVU227
 834 0302 0FB64C0D 		movzbl	0(%rbp,%rcx), %ecx
 834      00
 165:Src/translator.cpp ****         checksum_t check = genCheckSum(tgt);
 835              		.loc 1 165 24 discriminator 2 view .LVU228
 836 0307 880C03   		movb	%cl, (%rbx,%rax)
 164:Src/translator.cpp ****             tgt[4 + i] = var[i];
 837              		.loc 1 164 9 discriminator 2 view .LVU229
 838 030a 83C201   		addl	$1, %edx
 839              	.LVL96:
 164:Src/translator.cpp ****             tgt[4 + i] = var[i];
 840              		.loc 1 164 9 discriminator 2 view .LVU230
 841 030d EBE3     		jmp	.L65
 842              	.L64:
 164:Src/translator.cpp ****             tgt[4 + i] = var[i];
 843              		.loc 1 164 9 discriminator 2 view .LVU231
 844              	.LBE51:
 166:Src/translator.cpp ****         tgt[1] = check >> 8;
 845              		.loc 1 166 9 is_stmt 1 view .LVU232
 166:Src/translator.cpp ****         tgt[1] = check >> 8;
GAS LISTING /tmp/ccUgL469.s 			page 25


 846              		.loc 1 166 39 is_stmt 0 view .LVU233
 847 030f 4889DF   		movq	%rbx, %rdi
 848 0312 E8000000 		call	_ZN10translator11genCheckSumEPKh
 848      00
 849              	.LVL97:
 167:Src/translator.cpp ****         tgt[2] = check & 0xFF;
 850              		.loc 1 167 9 is_stmt 1 view .LVU234
 167:Src/translator.cpp ****         tgt[2] = check & 0xFF;
 851              		.loc 1 167 24 is_stmt 0 view .LVU235
 852 0317 0FB6D4   		movzbl	%ah, %edx
 167:Src/translator.cpp ****         tgt[2] = check & 0xFF;
 853              		.loc 1 167 16 view .LVU236
 854 031a 885301   		movb	%dl, 1(%rbx)
 168:Src/translator.cpp ****     }
 855              		.loc 1 168 9 is_stmt 1 view .LVU237
 168:Src/translator.cpp ****     }
 856              		.loc 1 168 16 is_stmt 0 view .LVU238
 857 031d 884302   		movb	%al, 2(%rbx)
 169:Src/translator.cpp **** 
 858              		.loc 1 169 5 view .LVU239
 859 0320 5B       		popq	%rbx
 860              		.cfi_def_cfa_offset 32
 861              	.LVL98:
 169:Src/translator.cpp **** 
 862              		.loc 1 169 5 view .LVU240
 863 0321 5D       		popq	%rbp
 864              		.cfi_def_cfa_offset 24
 865              	.LVL99:
 169:Src/translator.cpp **** 
 866              		.loc 1 169 5 view .LVU241
 867 0322 415C     		popq	%r12
 868              		.cfi_def_cfa_offset 16
 869              	.LVL100:
 169:Src/translator.cpp **** 
 870              		.loc 1 169 5 view .LVU242
 871 0324 415D     		popq	%r13
 872              		.cfi_def_cfa_offset 8
 873 0326 C3       		ret
 874              		.cfi_endproc
 875              	.LFE1515:
 877              		.section	.rodata.str1.1,"aMS",@progbits,1
 878              	.LC0:
 879 0000 66726F6D 		.string	"from "
 879      2000
 880              	.LC1:
 881 0006 20746F20 		.string	" to "
 881      00
 882              		.text
 883              		.globl	_ZN10translator8parseVarEPhS0_h
 885              	_ZN10translator8parseVarEPhS0_h:
 886              	.LVL101:
 887              	.LFB1516:
 174:Src/translator.cpp ****         uint8_t type = getType(package);
 888              		.loc 1 174 5 is_stmt 1 view -0
 889              		.cfi_startproc
 174:Src/translator.cpp ****         uint8_t type = getType(package);
 890              		.loc 1 174 5 is_stmt 0 view .LVU244
GAS LISTING /tmp/ccUgL469.s 			page 26


 891 0327 4157     		pushq	%r15
 892              		.cfi_def_cfa_offset 16
 893              		.cfi_offset 15, -16
 894 0329 4156     		pushq	%r14
 895              		.cfi_def_cfa_offset 24
 896              		.cfi_offset 14, -24
 897 032b 4155     		pushq	%r13
 898              		.cfi_def_cfa_offset 32
 899              		.cfi_offset 13, -32
 900 032d 4154     		pushq	%r12
 901              		.cfi_def_cfa_offset 40
 902              		.cfi_offset 12, -40
 903 032f 55       		pushq	%rbp
 904              		.cfi_def_cfa_offset 48
 905              		.cfi_offset 6, -48
 906 0330 53       		pushq	%rbx
 907              		.cfi_def_cfa_offset 56
 908              		.cfi_offset 3, -56
 909 0331 4883EC18 		subq	$24, %rsp
 910              		.cfi_def_cfa_offset 80
 911 0335 4989FC   		movq	%rdi, %r12
 912 0338 48893424 		movq	%rsi, (%rsp)
 913 033c 8854240E 		movb	%dl, 14(%rsp)
 175:Src/translator.cpp ****         if(type != TYPE_VAR)
 914              		.loc 1 175 9 is_stmt 1 view .LVU245
 175:Src/translator.cpp ****         if(type != TYPE_VAR)
 915              		.loc 1 175 31 is_stmt 0 view .LVU246
 916 0340 E8000000 		call	_ZN10translator7getTypeEPKh
 916      00
 917              	.LVL102:
 176:Src/translator.cpp ****             return TYPE_BAD_TYPE;
 918              		.loc 1 176 9 is_stmt 1 view .LVU247
 919 0345 3C02     		cmpb	$2, %al
 920 0347 0F852701 		jne	.L73
 920      0000
 921 034d 4189C6   		movl	%eax, %r14d
 178:Src/translator.cpp ****         if(len < 2)
 922              		.loc 1 178 9 view .LVU248
 178:Src/translator.cpp ****         if(len < 2)
 923              		.loc 1 178 29 is_stmt 0 view .LVU249
 924 0350 4C89E7   		movq	%r12, %rdi
 925 0353 E8000000 		call	_ZN10translator6getLenEPKh
 925      00
 926              	.LVL103:
 178:Src/translator.cpp ****         if(len < 2)
 927              		.loc 1 178 29 view .LVU250
 928 0358 4189C7   		movl	%eax, %r15d
 929              	.LVL104:
 179:Src/translator.cpp ****             return TYPE_BAD_LEN;
 930              		.loc 1 179 9 is_stmt 1 view .LVU251
 931 035b 3C01     		cmpb	$1, %al
 932 035d 0F862901 		jbe	.L74
 932      0000
 181:Src/translator.cpp ****                     thischeck = getCheckSum(package);
 933              		.loc 1 181 9 view .LVU252
 181:Src/translator.cpp ****                     thischeck = getCheckSum(package);
 934              		.loc 1 181 40 is_stmt 0 view .LVU253
GAS LISTING /tmp/ccUgL469.s 			page 27


 935 0363 4C89E7   		movq	%r12, %rdi
 936 0366 E8000000 		call	_ZN10translator11genCheckSumEPKh
 936      00
 937              	.LVL105:
 181:Src/translator.cpp ****                     thischeck = getCheckSum(package);
 938              		.loc 1 181 40 view .LVU254
 939 036b 89C3     		movl	%eax, %ebx
 940              	.LVL106:
 182:Src/translator.cpp ****         if(check != thischeck)
 941              		.loc 1 182 44 view .LVU255
 942 036d 4C89E7   		movq	%r12, %rdi
 943 0370 E8000000 		call	_ZN10translator11getCheckSumEPKh
 943      00
 944              	.LVL107:
 183:Src/translator.cpp ****             return TYPE_BAD_CHECKSUM;
 945              		.loc 1 183 9 is_stmt 1 view .LVU256
 946 0375 6639C3   		cmpw	%ax, %bx
 947 0378 0F851601 		jne	.L75
 947      0000
 186:Src/translator.cpp ****         for(uint8_t i = 0; i < len - 1; i++)
 948              		.loc 1 186 9 view .LVU257
 186:Src/translator.cpp ****         for(uint8_t i = 0; i < len - 1; i++)
 949              		.loc 1 186 17 is_stmt 0 view .LVU258
 950 037e 410FB644 		movzbl	3(%r12), %eax
 950      2403
 951              	.LVL108:
 186:Src/translator.cpp ****         for(uint8_t i = 0; i < len - 1; i++)
 952              		.loc 1 186 17 view .LVU259
 953 0384 8844240F 		movb	%al, 15(%rsp)
 954              	.LVL109:
 187:Src/translator.cpp ****         {
 955              		.loc 1 187 9 is_stmt 1 view .LVU260
 956              	.LBB69:
 187:Src/translator.cpp ****         {
 957              		.loc 1 187 21 is_stmt 0 view .LVU261
 958 0388 41BD0000 		movl	$0, %r13d
 958      0000
 959 038e EB36     		jmp	.L72
 960              	.LVL110:
 961              	.L77:
 962              	.LBB70:
 963              	.LBB71:
 964              	.LBB72:
 965              	.LBB73:
 966              	.LBB74:
 967              	.LBB75:
 968              	.LBB76:
 969              		.file 3 "/usr/include/c++/9.1.0/bits/basic_ios.h"
   1:/usr/include/c++/9.1.0/bits/basic_ios.h **** // Iostreams base classes -*- C++ -*-
   2:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
   3:/usr/include/c++/9.1.0/bits/basic_ios.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.1.0/bits/basic_ios.h **** //
   5:/usr/include/c++/9.1.0/bits/basic_ios.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.1.0/bits/basic_ios.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.1.0/bits/basic_ios.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.1.0/bits/basic_ios.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.1.0/bits/basic_ios.h **** // any later version.
GAS LISTING /tmp/ccUgL469.s 			page 28


  10:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
  11:/usr/include/c++/9.1.0/bits/basic_ios.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.1.0/bits/basic_ios.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.1.0/bits/basic_ios.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.1.0/bits/basic_ios.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
  16:/usr/include/c++/9.1.0/bits/basic_ios.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.1.0/bits/basic_ios.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.1.0/bits/basic_ios.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
  20:/usr/include/c++/9.1.0/bits/basic_ios.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.1.0/bits/basic_ios.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.1.0/bits/basic_ios.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.1.0/bits/basic_ios.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
  25:/usr/include/c++/9.1.0/bits/basic_ios.h **** /** @file bits/basic_ios.h
  26:/usr/include/c++/9.1.0/bits/basic_ios.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.1.0/bits/basic_ios.h ****  *  Do not attempt to use it directly. @headername{ios}
  28:/usr/include/c++/9.1.0/bits/basic_ios.h ****  */
  29:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
  30:/usr/include/c++/9.1.0/bits/basic_ios.h **** #ifndef _BASIC_IOS_H
  31:/usr/include/c++/9.1.0/bits/basic_ios.h **** #define _BASIC_IOS_H 1
  32:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
  33:/usr/include/c++/9.1.0/bits/basic_ios.h **** #pragma GCC system_header
  34:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
  35:/usr/include/c++/9.1.0/bits/basic_ios.h **** #include <bits/localefwd.h>
  36:/usr/include/c++/9.1.0/bits/basic_ios.h **** #include <bits/locale_classes.h>
  37:/usr/include/c++/9.1.0/bits/basic_ios.h **** #include <bits/locale_facets.h>
  38:/usr/include/c++/9.1.0/bits/basic_ios.h **** #include <bits/streambuf_iterator.h>
  39:/usr/include/c++/9.1.0/bits/basic_ios.h **** #include <bits/move.h>
  40:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
  41:/usr/include/c++/9.1.0/bits/basic_ios.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.1.0/bits/basic_ios.h **** {
  43:/usr/include/c++/9.1.0/bits/basic_ios.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
  45:/usr/include/c++/9.1.0/bits/basic_ios.h ****   template<typename _Facet>
  46:/usr/include/c++/9.1.0/bits/basic_ios.h ****     inline const _Facet&
  47:/usr/include/c++/9.1.0/bits/basic_ios.h ****     __check_facet(const _Facet* __f)
  48:/usr/include/c++/9.1.0/bits/basic_ios.h ****     {
  49:/usr/include/c++/9.1.0/bits/basic_ios.h ****       if (!__f)
  50:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	__throw_bad_cast();
 970              		.loc 3 50 18 view .LVU262
 971 0390 E8000000 		call	_ZSt16__throw_bad_castv@PLT
 971      00
 972              	.LVL111:
 973              	.L70:
 974              		.loc 3 50 18 view .LVU263
 975              	.LBE76:
 976              	.LBE75:
 977              	.LBB78:
 978              	.LBB79:
 979              		.file 4 "/usr/include/c++/9.1.0/bits/locale_facets.h"
   1:/usr/include/c++/9.1.0/bits/locale_facets.h **** // Locale support -*- C++ -*-
   2:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
   3:/usr/include/c++/9.1.0/bits/locale_facets.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.1.0/bits/locale_facets.h **** //
   5:/usr/include/c++/9.1.0/bits/locale_facets.h **** // This file is part of the GNU ISO C++ Library.  This library is free
GAS LISTING /tmp/ccUgL469.s 			page 29


   6:/usr/include/c++/9.1.0/bits/locale_facets.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.1.0/bits/locale_facets.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.1.0/bits/locale_facets.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.1.0/bits/locale_facets.h **** // any later version.
  10:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  11:/usr/include/c++/9.1.0/bits/locale_facets.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.1.0/bits/locale_facets.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.1.0/bits/locale_facets.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.1.0/bits/locale_facets.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  16:/usr/include/c++/9.1.0/bits/locale_facets.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.1.0/bits/locale_facets.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.1.0/bits/locale_facets.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  20:/usr/include/c++/9.1.0/bits/locale_facets.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.1.0/bits/locale_facets.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.1.0/bits/locale_facets.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.1.0/bits/locale_facets.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  25:/usr/include/c++/9.1.0/bits/locale_facets.h **** /** @file bits/locale_facets.h
  26:/usr/include/c++/9.1.0/bits/locale_facets.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.1.0/bits/locale_facets.h ****  *  Do not attempt to use it directly. @headername{locale}
  28:/usr/include/c++/9.1.0/bits/locale_facets.h ****  */
  29:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  30:/usr/include/c++/9.1.0/bits/locale_facets.h **** //
  31:/usr/include/c++/9.1.0/bits/locale_facets.h **** // ISO C++ 14882: 22.1  Locales
  32:/usr/include/c++/9.1.0/bits/locale_facets.h **** //
  33:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  34:/usr/include/c++/9.1.0/bits/locale_facets.h **** #ifndef _LOCALE_FACETS_H
  35:/usr/include/c++/9.1.0/bits/locale_facets.h **** #define _LOCALE_FACETS_H 1
  36:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  37:/usr/include/c++/9.1.0/bits/locale_facets.h **** #pragma GCC system_header
  38:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  39:/usr/include/c++/9.1.0/bits/locale_facets.h **** #include <cwctype>	// For wctype_t
  40:/usr/include/c++/9.1.0/bits/locale_facets.h **** #include <cctype>
  41:/usr/include/c++/9.1.0/bits/locale_facets.h **** #include <bits/ctype_base.h>
  42:/usr/include/c++/9.1.0/bits/locale_facets.h **** #include <iosfwd>
  43:/usr/include/c++/9.1.0/bits/locale_facets.h **** #include <bits/ios_base.h>  // For ios_base, ios_base::iostate
  44:/usr/include/c++/9.1.0/bits/locale_facets.h **** #include <streambuf>
  45:/usr/include/c++/9.1.0/bits/locale_facets.h **** #include <bits/cpp_type_traits.h>
  46:/usr/include/c++/9.1.0/bits/locale_facets.h **** #include <ext/type_traits.h>
  47:/usr/include/c++/9.1.0/bits/locale_facets.h **** #include <ext/numeric_traits.h>
  48:/usr/include/c++/9.1.0/bits/locale_facets.h **** #include <bits/streambuf_iterator.h>
  49:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  50:/usr/include/c++/9.1.0/bits/locale_facets.h **** namespace std _GLIBCXX_VISIBILITY(default)
  51:/usr/include/c++/9.1.0/bits/locale_facets.h **** {
  52:/usr/include/c++/9.1.0/bits/locale_facets.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  54:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // NB: Don't instantiate required wchar_t facets if no wchar_t support.
  55:/usr/include/c++/9.1.0/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_WCHAR_T
  56:/usr/include/c++/9.1.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 28
  57:/usr/include/c++/9.1.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 16
  58:/usr/include/c++/9.1.0/bits/locale_facets.h **** #else
  59:/usr/include/c++/9.1.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 14
  60:/usr/include/c++/9.1.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 8
  61:/usr/include/c++/9.1.0/bits/locale_facets.h **** #endif
  62:/usr/include/c++/9.1.0/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_CHAR8_T
GAS LISTING /tmp/ccUgL469.s 			page 30


  63:/usr/include/c++/9.1.0/bits/locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 4
  64:/usr/include/c++/9.1.0/bits/locale_facets.h **** #else
  65:/usr/include/c++/9.1.0/bits/locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 2
  66:/usr/include/c++/9.1.0/bits/locale_facets.h **** #endif
  67:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  68:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // Convert string to numeric value of type _Tp and store results.
  69:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // NB: This is specialized for all required types, there is no
  70:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // generic definition.
  71:/usr/include/c++/9.1.0/bits/locale_facets.h ****   template<typename _Tp>
  72:/usr/include/c++/9.1.0/bits/locale_facets.h ****     void
  73:/usr/include/c++/9.1.0/bits/locale_facets.h ****     __convert_to_v(const char*, _Tp&, ios_base::iostate&,
  74:/usr/include/c++/9.1.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  75:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  76:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // Explicit specializations for required types.
  77:/usr/include/c++/9.1.0/bits/locale_facets.h ****   template<>
  78:/usr/include/c++/9.1.0/bits/locale_facets.h ****     void
  79:/usr/include/c++/9.1.0/bits/locale_facets.h ****     __convert_to_v(const char*, float&, ios_base::iostate&,
  80:/usr/include/c++/9.1.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  81:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  82:/usr/include/c++/9.1.0/bits/locale_facets.h ****   template<>
  83:/usr/include/c++/9.1.0/bits/locale_facets.h ****     void
  84:/usr/include/c++/9.1.0/bits/locale_facets.h ****     __convert_to_v(const char*, double&, ios_base::iostate&,
  85:/usr/include/c++/9.1.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  86:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  87:/usr/include/c++/9.1.0/bits/locale_facets.h ****   template<>
  88:/usr/include/c++/9.1.0/bits/locale_facets.h ****     void
  89:/usr/include/c++/9.1.0/bits/locale_facets.h ****     __convert_to_v(const char*, long double&, ios_base::iostate&,
  90:/usr/include/c++/9.1.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  91:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
  92:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // NB: __pad is a struct, rather than a function, so it can be
  93:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // partially-specialized.
  94:/usr/include/c++/9.1.0/bits/locale_facets.h ****   template<typename _CharT, typename _Traits>
  95:/usr/include/c++/9.1.0/bits/locale_facets.h ****     struct __pad
  96:/usr/include/c++/9.1.0/bits/locale_facets.h ****     {
  97:/usr/include/c++/9.1.0/bits/locale_facets.h ****       static void
  98:/usr/include/c++/9.1.0/bits/locale_facets.h ****       _S_pad(ios_base& __io, _CharT __fill, _CharT* __news,
  99:/usr/include/c++/9.1.0/bits/locale_facets.h **** 	     const _CharT* __olds, streamsize __newlen, streamsize __oldlen);
 100:/usr/include/c++/9.1.0/bits/locale_facets.h ****     };
 101:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 102:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // Used by both numeric and monetary facets.
 103:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // Inserts "group separator" characters into an array of characters.
 104:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // It's recursive, one iteration per group.  It moves the characters
 105:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // in the buffer this way: "xxxx12345" -> "12,345xxx".  Call this
 106:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // only with __gsize != 0.
 107:/usr/include/c++/9.1.0/bits/locale_facets.h ****   template<typename _CharT>
 108:/usr/include/c++/9.1.0/bits/locale_facets.h ****     _CharT*
 109:/usr/include/c++/9.1.0/bits/locale_facets.h ****     __add_grouping(_CharT* __s, _CharT __sep,
 110:/usr/include/c++/9.1.0/bits/locale_facets.h **** 		   const char* __gbeg, size_t __gsize,
 111:/usr/include/c++/9.1.0/bits/locale_facets.h **** 		   const _CharT* __first, const _CharT* __last);
 112:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 113:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // This template permits specializing facet output code for
 114:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // ostreambuf_iterator.  For ostreambuf_iterator, sputn is
 115:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // significantly more efficient than incrementing iterators.
 116:/usr/include/c++/9.1.0/bits/locale_facets.h ****   template<typename _CharT>
 117:/usr/include/c++/9.1.0/bits/locale_facets.h ****     inline
 118:/usr/include/c++/9.1.0/bits/locale_facets.h ****     ostreambuf_iterator<_CharT>
 119:/usr/include/c++/9.1.0/bits/locale_facets.h ****     __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
GAS LISTING /tmp/ccUgL469.s 			page 31


 120:/usr/include/c++/9.1.0/bits/locale_facets.h ****     {
 121:/usr/include/c++/9.1.0/bits/locale_facets.h ****       __s._M_put(__ws, __len);
 122:/usr/include/c++/9.1.0/bits/locale_facets.h ****       return __s;
 123:/usr/include/c++/9.1.0/bits/locale_facets.h ****     }
 124:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 125:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // This is the unspecialized form of the template.
 126:/usr/include/c++/9.1.0/bits/locale_facets.h ****   template<typename _CharT, typename _OutIter>
 127:/usr/include/c++/9.1.0/bits/locale_facets.h ****     inline
 128:/usr/include/c++/9.1.0/bits/locale_facets.h ****     _OutIter
 129:/usr/include/c++/9.1.0/bits/locale_facets.h ****     __write(_OutIter __s, const _CharT* __ws, int __len)
 130:/usr/include/c++/9.1.0/bits/locale_facets.h ****     {
 131:/usr/include/c++/9.1.0/bits/locale_facets.h ****       for (int __j = 0; __j < __len; __j++, ++__s)
 132:/usr/include/c++/9.1.0/bits/locale_facets.h **** 	*__s = __ws[__j];
 133:/usr/include/c++/9.1.0/bits/locale_facets.h ****       return __s;
 134:/usr/include/c++/9.1.0/bits/locale_facets.h ****     }
 135:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 136:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 137:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // 22.2.1.1  Template class ctype
 138:/usr/include/c++/9.1.0/bits/locale_facets.h ****   // Include host and configuration specific ctype enums for ctype_base.
 139:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 140:/usr/include/c++/9.1.0/bits/locale_facets.h ****   /**
 141:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  @brief  Common base for ctype facet
 142:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *
 143:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  This template class provides implementations of the public functions
 144:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  that forward to the protected virtual functions.
 145:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *
 146:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  This template also provides abstract stubs for the protected virtual
 147:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  functions.
 148:/usr/include/c++/9.1.0/bits/locale_facets.h ****   */
 149:/usr/include/c++/9.1.0/bits/locale_facets.h ****   template<typename _CharT>
 150:/usr/include/c++/9.1.0/bits/locale_facets.h ****     class __ctype_abstract_base : public locale::facet, public ctype_base
 151:/usr/include/c++/9.1.0/bits/locale_facets.h ****     {
 152:/usr/include/c++/9.1.0/bits/locale_facets.h ****     public:
 153:/usr/include/c++/9.1.0/bits/locale_facets.h ****       // Types:
 154:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /// Typedef for the template parameter
 155:/usr/include/c++/9.1.0/bits/locale_facets.h ****       typedef _CharT char_type;
 156:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 157:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 158:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 159:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 160:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function finds a mask M for @a __c and compares it to
 161:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  mask @a __m.  It does so by returning the value of
 162:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 163:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 164:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char_type to compare the mask of.
 165:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 166:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 167:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 168:/usr/include/c++/9.1.0/bits/locale_facets.h ****       bool
 169:/usr/include/c++/9.1.0/bits/locale_facets.h ****       is(mask __m, char_type __c) const
 170:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_is(__m, __c); }
 171:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 172:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 173:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 174:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 175:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 176:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
GAS LISTING /tmp/ccUgL469.s 			page 32


 177:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  as the char array.  It does so by returning the value of
 178:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 179:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 180:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 181:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 182:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 183:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  @a __hi.
 184:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 185:/usr/include/c++/9.1.0/bits/locale_facets.h ****       const char_type*
 186:/usr/include/c++/9.1.0/bits/locale_facets.h ****       is(const char_type *__lo, const char_type *__hi, mask *__vec) const
 187:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_is(__lo, __hi, __vec); }
 188:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 189:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 190:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Find char_type matching a mask
 191:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 192:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 193:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is true.  It does so by returning
 194:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_is().
 195:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 196:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 197:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 198:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 199:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  Pointer to matching char_type if found, else @a __hi.
 200:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 201:/usr/include/c++/9.1.0/bits/locale_facets.h ****       const char_type*
 202:/usr/include/c++/9.1.0/bits/locale_facets.h ****       scan_is(mask __m, const char_type* __lo, const char_type* __hi) const
 203:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_scan_is(__m, __lo, __hi); }
 204:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 205:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 206:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Find char_type not matching a mask
 207:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 208:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 209:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is false.  It does so by returning
 210:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_not().
 211:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 212:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 213:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 214:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 215:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  Pointer to non-matching char if found, else @a __hi.
 216:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 217:/usr/include/c++/9.1.0/bits/locale_facets.h ****       const char_type*
 218:/usr/include/c++/9.1.0/bits/locale_facets.h ****       scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
 219:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_scan_not(__m, __lo, __hi); }
 220:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 221:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 222:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 223:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 224:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts the argument to uppercase if possible.
 225:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.  It does
 226:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  so by returning ctype<char_type>::do_toupper().
 227:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 228:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 229:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 230:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 231:/usr/include/c++/9.1.0/bits/locale_facets.h ****       char_type
 232:/usr/include/c++/9.1.0/bits/locale_facets.h ****       toupper(char_type __c) const
 233:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_toupper(__c); }
GAS LISTING /tmp/ccUgL469.s 			page 33


 234:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 235:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 236:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 237:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 238:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts each char_type in the range [lo,hi) to
 239:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  uppercase if possible.  Other elements remain untouched.  It does so
 240:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_toupper(lo, hi).
 241:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 242:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 243:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 244:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  @a __hi.
 245:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 246:/usr/include/c++/9.1.0/bits/locale_facets.h ****       const char_type*
 247:/usr/include/c++/9.1.0/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 248:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 249:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 250:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 251:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 252:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 253:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts the argument to lowercase if possible.  If
 254:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  not possible (for example, '2'), returns the argument.  It does so
 255:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  by returning ctype<char_type>::do_tolower(c).
 256:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 257:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 258:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 259:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 260:/usr/include/c++/9.1.0/bits/locale_facets.h ****       char_type
 261:/usr/include/c++/9.1.0/bits/locale_facets.h ****       tolower(char_type __c) const
 262:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 263:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 264:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 265:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 266:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 267:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts each char_type in the range [__lo,__hi) to
 268:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  lowercase if possible.  Other elements remain untouched.  It does so
 269:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_tolower(__lo, __hi).
 270:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 271:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 272:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 273:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  @a __hi.
 274:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 275:/usr/include/c++/9.1.0/bits/locale_facets.h ****       const char_type*
 276:/usr/include/c++/9.1.0/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 277:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 278:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 279:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 280:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Widen char to char_type
 281:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 282:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts the char argument to char_type using the
 283:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 284:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 285:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 286:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 287:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  codecvt for that.
 288:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 289:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 290:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  The converted char_type.
GAS LISTING /tmp/ccUgL469.s 			page 34


 291:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 292:/usr/include/c++/9.1.0/bits/locale_facets.h ****       char_type
 293:/usr/include/c++/9.1.0/bits/locale_facets.h ****       widen(char __c) const
 294:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_widen(__c); }
 295:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 296:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 297:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Widen array to char_type
 298:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 299:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 300:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 301:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 302:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 303:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 304:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  codecvt for that.
 305:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 306:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 307:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 308:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 309:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  @a __hi.
 310:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 311:/usr/include/c++/9.1.0/bits/locale_facets.h ****       const char*
 312:/usr/include/c++/9.1.0/bits/locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 313:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_widen(__lo, __hi, __to); }
 314:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 315:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 316:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 317:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 318:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts the char_type to char using the simplest
 319:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 320:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  returned instead.  It does so by returning
 321:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__c).
 322:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 323:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 324:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  codecvt for that.
 325:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 326:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 327:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 328:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  The converted char.
 329:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 330:/usr/include/c++/9.1.0/bits/locale_facets.h ****       char
 331:/usr/include/c++/9.1.0/bits/locale_facets.h ****       narrow(char_type __c, char __dfault) const
 332:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_narrow(__c, __dfault); }
 333:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 334:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 335:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Narrow array to char array
 336:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 337:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts each char_type in the input to char using the
 338:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 339:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  destination array.  For any char_type in the input that cannot be
 340:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  converted, @a dfault is used instead.  It does so by returning
 341:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__lo, __hi, __dfault, __to).
 342:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 343:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 344:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  codecvt for that.
 345:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 346:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 347:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
GAS LISTING /tmp/ccUgL469.s 			page 35


 348:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 349:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 350:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  @a __hi.
 351:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 352:/usr/include/c++/9.1.0/bits/locale_facets.h ****       const char_type*
 353:/usr/include/c++/9.1.0/bits/locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 354:/usr/include/c++/9.1.0/bits/locale_facets.h **** 	      char __dfault, char* __to) const
 355:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_narrow(__lo, __hi, __dfault, __to); }
 356:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 357:/usr/include/c++/9.1.0/bits/locale_facets.h ****     protected:
 358:/usr/include/c++/9.1.0/bits/locale_facets.h ****       explicit
 359:/usr/include/c++/9.1.0/bits/locale_facets.h ****       __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }
 360:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 361:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual
 362:/usr/include/c++/9.1.0/bits/locale_facets.h ****       ~__ctype_abstract_base() { }
 363:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 364:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 365:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 366:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 367:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function finds a mask M for @a c and compares it to mask @a m.
 368:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 369:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 370:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 371:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  same input.
 372:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 373:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char_type to find the mask of.
 374:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 375:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 376:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 377:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual bool
 378:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const = 0;
 379:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 380:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 381:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 382:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 383:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 384:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 385:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  as the input.
 386:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 387:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 388:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 389:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  same input.
 390:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 391:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 392:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 393:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 394:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  @a __hi.
 395:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 396:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char_type*
 397:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi,
 398:/usr/include/c++/9.1.0/bits/locale_facets.h **** 	    mask* __vec) const = 0;
 399:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 400:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 401:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Find char_type matching mask
 402:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 403:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 404:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  [__lo,__hi) for which is(__m,c) is true.
GAS LISTING /tmp/ccUgL469.s 			page 36


 405:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 406:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 407:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 408:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  same input.
 409:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 410:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 411:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 412:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 413:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  Pointer to a matching char_type if found, else @a __hi.
 414:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 415:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char_type*
 416:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo,
 417:/usr/include/c++/9.1.0/bits/locale_facets.h **** 		 const char_type* __hi) const = 0;
 418:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 419:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 420:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Find char_type not matching mask
 421:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 422:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first
 423:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  char_type c of [lo,hi) for which is(m,c) is false.
 424:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 425:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 426:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 427:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  same input.
 428:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 429:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 430:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 431:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 432:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char_type if found, else @a __hi.
 433:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 434:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char_type*
 435:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 436:/usr/include/c++/9.1.0/bits/locale_facets.h **** 		  const char_type* __hi) const = 0;
 437:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 438:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 439:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 440:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 441:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This virtual function converts the char_type argument to uppercase
 442:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  if possible.  If not possible (for example, '2'), returns the
 443:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  argument.
 444:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 445:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 446:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 447:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  the same input.
 448:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 449:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 450:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 451:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 452:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual char_type
 453:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_toupper(char_type __c) const = 0;
 454:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 455:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 456:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 457:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 458:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 459:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  to uppercase if possible.  Other elements remain untouched.
 460:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 461:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
GAS LISTING /tmp/ccUgL469.s 			page 37


 462:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 463:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  the same input.
 464:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 465:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 466:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 467:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  @a __hi.
 468:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 469:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char_type*
 470:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const = 0;
 471:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 472:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 473:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 474:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 475:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This virtual function converts the argument to lowercase if
 476:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 477:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 478:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 479:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 480:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  the same input.
 481:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 482:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 483:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 484:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 485:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual char_type
 486:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_tolower(char_type __c) const = 0;
 487:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 488:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 489:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 490:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 491:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 492:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  to lowercase if possible.  Other elements remain untouched.
 493:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 494:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 495:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 496:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  the same input.
 497:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 498:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 499:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 500:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  @a __hi.
 501:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 502:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char_type*
 503:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const = 0;
 504:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 505:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 506:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Widen char
 507:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 508:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This virtual function converts the char to char_type using the
 509:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  simplest reasonable transformation.
 510:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 511:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 512:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 513:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  same input.
 514:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 515:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 516:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  codecvt for that.
 517:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 518:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
GAS LISTING /tmp/ccUgL469.s 			page 38


 519:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  The converted char_type
 520:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 521:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual char_type
 522:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_widen(char __c) const = 0;
 523:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 524:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 525:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Widen char array
 526:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 527:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 528:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  simplest reasonable transformation.
 529:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 530:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 531:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 532:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  same input.
 533:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 534:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 535:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  codecvt for that.
 536:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 537:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start range.
 538:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 539:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 540:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  @a __hi.
 541:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 542:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char*
 543:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __to) const = 0;
 544:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 545:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 546:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 547:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 548:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This virtual function converts the argument to char using the
 549:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  If the conversion fails, dfault
 550:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  is returned instead.
 551:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 552:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 553:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 554:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  same input.
 555:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 556:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 557:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  codecvt for that.
 558:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 559:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 560:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 561:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  The converted char.
 562:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 563:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual char
 564:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_narrow(char_type __c, char __dfault) const = 0;
 565:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 566:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 567:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Narrow char_type array to char
 568:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 569:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range
 570:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  [__lo,__hi) to char using the simplest reasonable
 571:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  transformation and writes the results to the destination
 572:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  array.  For any element in the input that cannot be
 573:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  converted, @a __dfault is used instead.
 574:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 575:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
GAS LISTING /tmp/ccUgL469.s 			page 39


 576:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 577:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  same input.
 578:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 579:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 580:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  codecvt for that.
 581:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 582:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 583:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 584:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 585:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 586:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  @a __hi.
 587:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 588:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char_type*
 589:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 590:/usr/include/c++/9.1.0/bits/locale_facets.h **** 		char __dfault, char* __to) const = 0;
 591:/usr/include/c++/9.1.0/bits/locale_facets.h ****     };
 592:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 593:/usr/include/c++/9.1.0/bits/locale_facets.h ****   /**
 594:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  @brief  Primary class template ctype facet.
 595:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  @ingroup locales
 596:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *
 597:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  This template class defines classification and conversion functions for
 598:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  character sets.  It wraps cctype functionality.  Ctype gets used by
 599:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  streams for many I/O operations.
 600:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *
 601:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  This template provides the protected virtual functions the developer
 602:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  will have to replace in a derived class or specialization to make a
 603:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  working facet.  The public functions that access them are defined in
 604:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  __ctype_abstract_base, to allow for implementation flexibility.  See
 605:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  ctype<wchar_t> for an example.  The functions are documented in
 606:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  __ctype_abstract_base.
 607:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *
 608:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  Note: implementations are provided for all the protected virtual
 609:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  functions, but will likely not be useful.
 610:/usr/include/c++/9.1.0/bits/locale_facets.h ****   */
 611:/usr/include/c++/9.1.0/bits/locale_facets.h ****   template<typename _CharT>
 612:/usr/include/c++/9.1.0/bits/locale_facets.h ****     class ctype : public __ctype_abstract_base<_CharT>
 613:/usr/include/c++/9.1.0/bits/locale_facets.h ****     {
 614:/usr/include/c++/9.1.0/bits/locale_facets.h ****     public:
 615:/usr/include/c++/9.1.0/bits/locale_facets.h ****       // Types:
 616:/usr/include/c++/9.1.0/bits/locale_facets.h ****       typedef _CharT			char_type;
 617:/usr/include/c++/9.1.0/bits/locale_facets.h ****       typedef typename __ctype_abstract_base<_CharT>::mask mask;
 618:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 619:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /// The facet id for ctype<char_type>
 620:/usr/include/c++/9.1.0/bits/locale_facets.h ****       static locale::id			id;
 621:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 622:/usr/include/c++/9.1.0/bits/locale_facets.h ****       explicit
 623:/usr/include/c++/9.1.0/bits/locale_facets.h ****       ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }
 624:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 625:/usr/include/c++/9.1.0/bits/locale_facets.h ****    protected:
 626:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual
 627:/usr/include/c++/9.1.0/bits/locale_facets.h ****       ~ctype();
 628:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 629:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual bool
 630:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const;
 631:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 632:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char_type*
GAS LISTING /tmp/ccUgL469.s 			page 40


 633:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;
 634:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 635:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char_type*
 636:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;
 637:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 638:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char_type*
 639:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 640:/usr/include/c++/9.1.0/bits/locale_facets.h **** 		  const char_type* __hi) const;
 641:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 642:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual char_type
 643:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_toupper(char_type __c) const;
 644:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 645:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char_type*
 646:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
 647:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 648:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual char_type
 649:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_tolower(char_type __c) const;
 650:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 651:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char_type*
 652:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
 653:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 654:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual char_type
 655:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_widen(char __c) const;
 656:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 657:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char*
 658:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __dest) const;
 659:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 660:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual char
 661:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_narrow(char_type, char __dfault) const;
 662:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 663:/usr/include/c++/9.1.0/bits/locale_facets.h ****       virtual const char_type*
 664:/usr/include/c++/9.1.0/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 665:/usr/include/c++/9.1.0/bits/locale_facets.h **** 		char __dfault, char* __to) const;
 666:/usr/include/c++/9.1.0/bits/locale_facets.h ****     };
 667:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 668:/usr/include/c++/9.1.0/bits/locale_facets.h ****   template<typename _CharT>
 669:/usr/include/c++/9.1.0/bits/locale_facets.h ****     locale::id ctype<_CharT>::id;
 670:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 671:/usr/include/c++/9.1.0/bits/locale_facets.h ****   /**
 672:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  @brief  The ctype<char> specialization.
 673:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  @ingroup locales
 674:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *
 675:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  This class defines classification and conversion functions for
 676:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  the char type.  It gets used by char streams for many I/O
 677:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  operations.  The char specialization provides a number of
 678:/usr/include/c++/9.1.0/bits/locale_facets.h ****    *  optimizations as well.
 679:/usr/include/c++/9.1.0/bits/locale_facets.h ****   */
 680:/usr/include/c++/9.1.0/bits/locale_facets.h ****   template<>
 681:/usr/include/c++/9.1.0/bits/locale_facets.h ****     class ctype<char> : public locale::facet, public ctype_base
 682:/usr/include/c++/9.1.0/bits/locale_facets.h ****     {
 683:/usr/include/c++/9.1.0/bits/locale_facets.h ****     public:
 684:/usr/include/c++/9.1.0/bits/locale_facets.h ****       // Types:
 685:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /// Typedef for the template parameter char.
 686:/usr/include/c++/9.1.0/bits/locale_facets.h ****       typedef char		char_type;
 687:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 688:/usr/include/c++/9.1.0/bits/locale_facets.h ****     protected:
 689:/usr/include/c++/9.1.0/bits/locale_facets.h ****       // Data Members:
GAS LISTING /tmp/ccUgL469.s 			page 41


 690:/usr/include/c++/9.1.0/bits/locale_facets.h ****       __c_locale		_M_c_locale_ctype;
 691:/usr/include/c++/9.1.0/bits/locale_facets.h ****       bool			_M_del;
 692:/usr/include/c++/9.1.0/bits/locale_facets.h ****       __to_type			_M_toupper;
 693:/usr/include/c++/9.1.0/bits/locale_facets.h ****       __to_type			_M_tolower;
 694:/usr/include/c++/9.1.0/bits/locale_facets.h ****       const mask*		_M_table;
 695:/usr/include/c++/9.1.0/bits/locale_facets.h ****       mutable char		_M_widen_ok;
 696:/usr/include/c++/9.1.0/bits/locale_facets.h ****       mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];
 697:/usr/include/c++/9.1.0/bits/locale_facets.h ****       mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];
 698:/usr/include/c++/9.1.0/bits/locale_facets.h ****       mutable char		_M_narrow_ok;	// 0 uninitialized, 1 init,
 699:/usr/include/c++/9.1.0/bits/locale_facets.h **** 						// 2 memcpy can't be used
 700:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 701:/usr/include/c++/9.1.0/bits/locale_facets.h ****     public:
 702:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /// The facet id for ctype<char>
 703:/usr/include/c++/9.1.0/bits/locale_facets.h ****       static locale::id        id;
 704:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /// The size of the mask table.  It is SCHAR_MAX + 1.
 705:/usr/include/c++/9.1.0/bits/locale_facets.h ****       static const size_t      table_size = 1 + static_cast<unsigned char>(-1);
 706:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 707:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 708:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Constructor performs initialization.
 709:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 710:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This is the constructor provided by the standard.
 711:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 712:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 713:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *               Else classic_table() is used.
 714:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 715:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 716:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 717:/usr/include/c++/9.1.0/bits/locale_facets.h ****       explicit
 718:/usr/include/c++/9.1.0/bits/locale_facets.h ****       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);
 719:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 720:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 721:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Constructor performs static initialization.
 722:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 723:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This constructor is used to construct the initial C locale facet.
 724:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 725:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __cloc  Handle to C locale data.
 726:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 727:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 728:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 729:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 730:/usr/include/c++/9.1.0/bits/locale_facets.h ****       explicit
 731:/usr/include/c++/9.1.0/bits/locale_facets.h ****       ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,
 732:/usr/include/c++/9.1.0/bits/locale_facets.h **** 	    size_t __refs = 0);
 733:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 734:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 735:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Test char classification.
 736:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 737:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function compares the mask table[c] to @a __m.
 738:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 739:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char to compare the mask of.
 740:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 741:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  True if __m & table[__c] is true, false otherwise.
 742:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 743:/usr/include/c++/9.1.0/bits/locale_facets.h ****       inline bool
 744:/usr/include/c++/9.1.0/bits/locale_facets.h ****       is(mask __m, char __c) const;
 745:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 746:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
GAS LISTING /tmp/ccUgL469.s 			page 42


 747:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 748:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 749:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function finds the mask for each char in the range [lo, hi) and
 750:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  successively writes it to vec.  vec must have as many elements as
 751:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  the char array.
 752:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 753:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 754:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 755:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 756:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  @a __hi.
 757:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 758:/usr/include/c++/9.1.0/bits/locale_facets.h ****       inline const char*
 759:/usr/include/c++/9.1.0/bits/locale_facets.h ****       is(const char* __lo, const char* __hi, mask* __vec) const;
 760:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 761:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 762:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Find char matching a mask
 763:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 764:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function searches for and returns the first char in [lo,hi) for
 765:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  which is(m,char) is true.
 766:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 767:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 768:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 769:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 770:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  Pointer to a matching char if found, else @a __hi.
 771:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 772:/usr/include/c++/9.1.0/bits/locale_facets.h ****       inline const char*
 773:/usr/include/c++/9.1.0/bits/locale_facets.h ****       scan_is(mask __m, const char* __lo, const char* __hi) const;
 774:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 775:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 776:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Find char not matching a mask
 777:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 778:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first char
 779:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  in [__lo,__hi) for which is(m,char) is false.
 780:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 781:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 782:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 783:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 784:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char if found, else @a __hi.
 785:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 786:/usr/include/c++/9.1.0/bits/locale_facets.h ****       inline const char*
 787:/usr/include/c++/9.1.0/bits/locale_facets.h ****       scan_not(mask __m, const char* __lo, const char* __hi) const;
 788:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 789:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 790:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 791:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 792:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts the char argument to uppercase if possible.
 793:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 794:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 795:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>::do_toupper(c).
 796:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 797:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 798:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 799:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
 800:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 801:/usr/include/c++/9.1.0/bits/locale_facets.h ****       char_type
 802:/usr/include/c++/9.1.0/bits/locale_facets.h ****       toupper(char_type __c) const
 803:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_toupper(__c); }
GAS LISTING /tmp/ccUgL469.s 			page 43


 804:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 805:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 806:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 807:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 808:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts each char in the range [__lo,__hi) to uppercase
 809:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 810:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 811:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>:: do_toupper(__lo, __hi).
 812:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 813:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 814:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 815:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 816:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  @a __hi.
 817:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 818:/usr/include/c++/9.1.0/bits/locale_facets.h ****       const char_type*
 819:/usr/include/c++/9.1.0/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 820:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 821:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 822:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 823:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 824:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 825:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts the char argument to lowercase if possible.
 826:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 827:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 828:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>::do_tolower(__c).
 829:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 830:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 831:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 832:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
 833:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 834:/usr/include/c++/9.1.0/bits/locale_facets.h ****       char_type
 835:/usr/include/c++/9.1.0/bits/locale_facets.h ****       tolower(char_type __c) const
 836:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 837:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 838:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 839:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 840:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 841:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts each char in the range [lo,hi) to lowercase
 842:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 843:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 844:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>:: do_tolower(__lo, __hi).
 845:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 846:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 847:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 848:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 849:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  @a __hi.
 850:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 851:/usr/include/c++/9.1.0/bits/locale_facets.h ****       const char_type*
 852:/usr/include/c++/9.1.0/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 853:/usr/include/c++/9.1.0/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 854:/usr/include/c++/9.1.0/bits/locale_facets.h **** 
 855:/usr/include/c++/9.1.0/bits/locale_facets.h ****       /**
 856:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @brief  Widen char
 857:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 858:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function converts the char to char_type using the simplest
 859:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
 860:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  argument will be returned unchanged.
GAS LISTING /tmp/ccUgL469.s 			page 44


 861:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 862:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 863:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 864:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 865:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 866:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  codecvt for that.
 867:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *
 868:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 869:/usr/include/c++/9.1.0/bits/locale_facets.h ****        *  @return  The converted character.
 870:/usr/include/c++/9.1.0/bits/locale_facets.h ****       */
 871:/usr/include/c++/9.1.0/bits/locale_facets.h ****       char_type
 872:/usr/include/c++/9.1.0/bits/locale_facets.h ****       widen(char __c) const
 873:/usr/include/c++/9.1.0/bits/locale_facets.h ****       {
 874:/usr/include/c++/9.1.0/bits/locale_facets.h **** 	if (_M_widen_ok)
 875:/usr/include/c++/9.1.0/bits/locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
 876:/usr/include/c++/9.1.0/bits/locale_facets.h **** 	this->_M_widen_init();
 980              		.loc 4 876 2 is_stmt 1 view .LVU264
 981              		.loc 4 876 21 is_stmt 0 view .LVU265
 982 0395 4889EF   		movq	%rbp, %rdi
 983 0398 E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 983      00
 984              	.LVL112:
 877:/usr/include/c++/9.1.0/bits/locale_facets.h **** 	return this->do_widen(__c);
 985              		.loc 4 877 2 is_stmt 1 view .LVU266
 986              		.loc 4 877 27 is_stmt 0 view .LVU267
 987 039d 488B4500 		movq	0(%rbp), %rax
 988              		.loc 4 877 23 view .LVU268
 989 03a1 BE0A0000 		movl	$10, %esi
 989      00
 990 03a6 4889EF   		movq	%rbp, %rdi
 991 03a9 FF5030   		call	*48(%rax)
 992              	.LVL113:
 993 03ac 89C6     		movl	%eax, %esi
 994              	.L71:
 995              	.LVL114:
 996              		.loc 4 877 23 view .LVU269
 997              	.LBE79:
 998              	.LBE78:
 999              	.LBE74:
 1000              	.LBE73:
 1001              		.file 5 "/usr/include/c++/9.1.0/ostream"
   1:/usr/include/c++/9.1.0/ostream **** // Output streams -*- C++ -*-
   2:/usr/include/c++/9.1.0/ostream **** 
   3:/usr/include/c++/9.1.0/ostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.1.0/ostream **** //
   5:/usr/include/c++/9.1.0/ostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.1.0/ostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.1.0/ostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.1.0/ostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.1.0/ostream **** // any later version.
  10:/usr/include/c++/9.1.0/ostream **** 
  11:/usr/include/c++/9.1.0/ostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.1.0/ostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.1.0/ostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.1.0/ostream **** // GNU General Public License for more details.
  15:/usr/include/c++/9.1.0/ostream **** 
  16:/usr/include/c++/9.1.0/ostream **** // Under Section 7 of GPL version 3, you are granted additional
GAS LISTING /tmp/ccUgL469.s 			page 45


  17:/usr/include/c++/9.1.0/ostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.1.0/ostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.1.0/ostream **** 
  20:/usr/include/c++/9.1.0/ostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.1.0/ostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.1.0/ostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.1.0/ostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.1.0/ostream **** 
  25:/usr/include/c++/9.1.0/ostream **** /** @file include/ostream
  26:/usr/include/c++/9.1.0/ostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/9.1.0/ostream ****  */
  28:/usr/include/c++/9.1.0/ostream **** 
  29:/usr/include/c++/9.1.0/ostream **** //
  30:/usr/include/c++/9.1.0/ostream **** // ISO C++ 14882: 27.6.2  Output streams
  31:/usr/include/c++/9.1.0/ostream **** //
  32:/usr/include/c++/9.1.0/ostream **** 
  33:/usr/include/c++/9.1.0/ostream **** #ifndef _GLIBCXX_OSTREAM
  34:/usr/include/c++/9.1.0/ostream **** #define _GLIBCXX_OSTREAM 1
  35:/usr/include/c++/9.1.0/ostream **** 
  36:/usr/include/c++/9.1.0/ostream **** #pragma GCC system_header
  37:/usr/include/c++/9.1.0/ostream **** 
  38:/usr/include/c++/9.1.0/ostream **** #include <ios>
  39:/usr/include/c++/9.1.0/ostream **** #include <bits/ostream_insert.h>
  40:/usr/include/c++/9.1.0/ostream **** 
  41:/usr/include/c++/9.1.0/ostream **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.1.0/ostream **** {
  43:/usr/include/c++/9.1.0/ostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/9.1.0/ostream **** 
  45:/usr/include/c++/9.1.0/ostream ****   /**
  46:/usr/include/c++/9.1.0/ostream ****    *  @brief  Template class basic_ostream.
  47:/usr/include/c++/9.1.0/ostream ****    *  @ingroup io
  48:/usr/include/c++/9.1.0/ostream ****    *
  49:/usr/include/c++/9.1.0/ostream ****    *  @tparam _CharT  Type of character stream.
  50:/usr/include/c++/9.1.0/ostream ****    *  @tparam _Traits  Traits for character type, defaults to
  51:/usr/include/c++/9.1.0/ostream ****    *                   char_traits<_CharT>.
  52:/usr/include/c++/9.1.0/ostream ****    *
  53:/usr/include/c++/9.1.0/ostream ****    *  This is the base class for all output streams.  It provides text
  54:/usr/include/c++/9.1.0/ostream ****    *  formatting of all builtin types, and communicates with any class
  55:/usr/include/c++/9.1.0/ostream ****    *  derived from basic_streambuf to do the actual output.
  56:/usr/include/c++/9.1.0/ostream ****   */
  57:/usr/include/c++/9.1.0/ostream ****   template<typename _CharT, typename _Traits>
  58:/usr/include/c++/9.1.0/ostream ****     class basic_ostream : virtual public basic_ios<_CharT, _Traits>
  59:/usr/include/c++/9.1.0/ostream ****     {
  60:/usr/include/c++/9.1.0/ostream ****     public:
  61:/usr/include/c++/9.1.0/ostream ****       // Types (inherited from basic_ios):
  62:/usr/include/c++/9.1.0/ostream ****       typedef _CharT			 		char_type;
  63:/usr/include/c++/9.1.0/ostream ****       typedef typename _Traits::int_type 		int_type;
  64:/usr/include/c++/9.1.0/ostream ****       typedef typename _Traits::pos_type 		pos_type;
  65:/usr/include/c++/9.1.0/ostream ****       typedef typename _Traits::off_type 		off_type;
  66:/usr/include/c++/9.1.0/ostream ****       typedef _Traits			 		traits_type;
  67:/usr/include/c++/9.1.0/ostream **** 
  68:/usr/include/c++/9.1.0/ostream ****       // Non-standard Types:
  69:/usr/include/c++/9.1.0/ostream ****       typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
  70:/usr/include/c++/9.1.0/ostream ****       typedef basic_ios<_CharT, _Traits>		__ios_type;
  71:/usr/include/c++/9.1.0/ostream ****       typedef basic_ostream<_CharT, _Traits>		__ostream_type;
  72:/usr/include/c++/9.1.0/ostream ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  73:/usr/include/c++/9.1.0/ostream ****       							__num_put_type;
GAS LISTING /tmp/ccUgL469.s 			page 46


  74:/usr/include/c++/9.1.0/ostream ****       typedef ctype<_CharT>	      			__ctype_type;
  75:/usr/include/c++/9.1.0/ostream **** 
  76:/usr/include/c++/9.1.0/ostream ****       /**
  77:/usr/include/c++/9.1.0/ostream ****        *  @brief  Base constructor.
  78:/usr/include/c++/9.1.0/ostream ****        *
  79:/usr/include/c++/9.1.0/ostream ****        *  This ctor is almost never called by the user directly, rather from
  80:/usr/include/c++/9.1.0/ostream ****        *  derived classes' initialization lists, which pass a pointer to
  81:/usr/include/c++/9.1.0/ostream ****        *  their own stream buffer.
  82:/usr/include/c++/9.1.0/ostream ****       */
  83:/usr/include/c++/9.1.0/ostream ****       explicit
  84:/usr/include/c++/9.1.0/ostream ****       basic_ostream(__streambuf_type* __sb)
  85:/usr/include/c++/9.1.0/ostream ****       { this->init(__sb); }
  86:/usr/include/c++/9.1.0/ostream **** 
  87:/usr/include/c++/9.1.0/ostream ****       /**
  88:/usr/include/c++/9.1.0/ostream ****        *  @brief  Base destructor.
  89:/usr/include/c++/9.1.0/ostream ****        *
  90:/usr/include/c++/9.1.0/ostream ****        *  This does very little apart from providing a virtual base dtor.
  91:/usr/include/c++/9.1.0/ostream ****       */
  92:/usr/include/c++/9.1.0/ostream ****       virtual
  93:/usr/include/c++/9.1.0/ostream ****       ~basic_ostream() { }
  94:/usr/include/c++/9.1.0/ostream **** 
  95:/usr/include/c++/9.1.0/ostream ****       /// Safe prefix/suffix operations.
  96:/usr/include/c++/9.1.0/ostream ****       class sentry;
  97:/usr/include/c++/9.1.0/ostream ****       friend class sentry;
  98:/usr/include/c++/9.1.0/ostream **** 
  99:/usr/include/c++/9.1.0/ostream ****       //@{
 100:/usr/include/c++/9.1.0/ostream ****       /**
 101:/usr/include/c++/9.1.0/ostream ****        *  @brief  Interface for manipulators.
 102:/usr/include/c++/9.1.0/ostream ****        *
 103:/usr/include/c++/9.1.0/ostream ****        *  Manipulators such as @c std::endl and @c std::hex use these
 104:/usr/include/c++/9.1.0/ostream ****        *  functions in constructs like "std::cout << std::endl".  For more
 105:/usr/include/c++/9.1.0/ostream ****        *  information, see the iomanip header.
 106:/usr/include/c++/9.1.0/ostream ****       */
 107:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 108:/usr/include/c++/9.1.0/ostream ****       operator<<(__ostream_type& (*__pf)(__ostream_type&))
 109:/usr/include/c++/9.1.0/ostream ****       {
 110:/usr/include/c++/9.1.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 111:/usr/include/c++/9.1.0/ostream **** 	// DR 60. What is a formatted input function?
 112:/usr/include/c++/9.1.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 113:/usr/include/c++/9.1.0/ostream **** 	return __pf(*this);
 114:/usr/include/c++/9.1.0/ostream ****       }
 115:/usr/include/c++/9.1.0/ostream **** 
 116:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 117:/usr/include/c++/9.1.0/ostream ****       operator<<(__ios_type& (*__pf)(__ios_type&))
 118:/usr/include/c++/9.1.0/ostream ****       {
 119:/usr/include/c++/9.1.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 120:/usr/include/c++/9.1.0/ostream **** 	// DR 60. What is a formatted input function?
 121:/usr/include/c++/9.1.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 122:/usr/include/c++/9.1.0/ostream **** 	__pf(*this);
 123:/usr/include/c++/9.1.0/ostream **** 	return *this;
 124:/usr/include/c++/9.1.0/ostream ****       }
 125:/usr/include/c++/9.1.0/ostream **** 
 126:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 127:/usr/include/c++/9.1.0/ostream ****       operator<<(ios_base& (*__pf) (ios_base&))
 128:/usr/include/c++/9.1.0/ostream ****       {
 129:/usr/include/c++/9.1.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 130:/usr/include/c++/9.1.0/ostream **** 	// DR 60. What is a formatted input function?
GAS LISTING /tmp/ccUgL469.s 			page 47


 131:/usr/include/c++/9.1.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 132:/usr/include/c++/9.1.0/ostream **** 	__pf(*this);
 133:/usr/include/c++/9.1.0/ostream **** 	return *this;
 134:/usr/include/c++/9.1.0/ostream ****       }
 135:/usr/include/c++/9.1.0/ostream ****       //@}
 136:/usr/include/c++/9.1.0/ostream **** 
 137:/usr/include/c++/9.1.0/ostream ****       //@{
 138:/usr/include/c++/9.1.0/ostream ****       /**
 139:/usr/include/c++/9.1.0/ostream ****        *  @name Inserters
 140:/usr/include/c++/9.1.0/ostream ****        *
 141:/usr/include/c++/9.1.0/ostream ****        *  All the @c operator<< functions (aka <em>formatted output
 142:/usr/include/c++/9.1.0/ostream ****        *  functions</em>) have some common behavior.  Each starts by
 143:/usr/include/c++/9.1.0/ostream ****        *  constructing a temporary object of type std::basic_ostream::sentry.
 144:/usr/include/c++/9.1.0/ostream ****        *  This can have several effects, concluding with the setting of a
 145:/usr/include/c++/9.1.0/ostream ****        *  status flag; see the sentry documentation for more.
 146:/usr/include/c++/9.1.0/ostream ****        *
 147:/usr/include/c++/9.1.0/ostream ****        *  If the sentry status is good, the function tries to generate
 148:/usr/include/c++/9.1.0/ostream ****        *  whatever data is appropriate for the type of the argument.
 149:/usr/include/c++/9.1.0/ostream ****        *
 150:/usr/include/c++/9.1.0/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 151:/usr/include/c++/9.1.0/ostream ****        *  will be turned on in the stream's error state without causing an
 152:/usr/include/c++/9.1.0/ostream ****        *  ios_base::failure to be thrown.  The original exception will then
 153:/usr/include/c++/9.1.0/ostream ****        *  be rethrown.
 154:/usr/include/c++/9.1.0/ostream ****       */
 155:/usr/include/c++/9.1.0/ostream **** 
 156:/usr/include/c++/9.1.0/ostream ****       //@{
 157:/usr/include/c++/9.1.0/ostream ****       /**
 158:/usr/include/c++/9.1.0/ostream ****        *  @brief Integer arithmetic inserters
 159:/usr/include/c++/9.1.0/ostream ****        *  @param  __n A variable of builtin integral type.
 160:/usr/include/c++/9.1.0/ostream ****        *  @return  @c *this if successful
 161:/usr/include/c++/9.1.0/ostream ****        *
 162:/usr/include/c++/9.1.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 163:/usr/include/c++/9.1.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 164:/usr/include/c++/9.1.0/ostream ****       */
 165:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 166:/usr/include/c++/9.1.0/ostream ****       operator<<(long __n)
 167:/usr/include/c++/9.1.0/ostream ****       { return _M_insert(__n); }
 168:/usr/include/c++/9.1.0/ostream **** 
 169:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 170:/usr/include/c++/9.1.0/ostream ****       operator<<(unsigned long __n)
 171:/usr/include/c++/9.1.0/ostream ****       { return _M_insert(__n); }
 172:/usr/include/c++/9.1.0/ostream **** 
 173:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 174:/usr/include/c++/9.1.0/ostream ****       operator<<(bool __n)
 175:/usr/include/c++/9.1.0/ostream ****       { return _M_insert(__n); }
 176:/usr/include/c++/9.1.0/ostream **** 
 177:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 178:/usr/include/c++/9.1.0/ostream ****       operator<<(short __n);
 179:/usr/include/c++/9.1.0/ostream **** 
 180:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 181:/usr/include/c++/9.1.0/ostream ****       operator<<(unsigned short __n)
 182:/usr/include/c++/9.1.0/ostream ****       {
 183:/usr/include/c++/9.1.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 184:/usr/include/c++/9.1.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 185:/usr/include/c++/9.1.0/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 186:/usr/include/c++/9.1.0/ostream ****       }
 187:/usr/include/c++/9.1.0/ostream **** 
GAS LISTING /tmp/ccUgL469.s 			page 48


 188:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 189:/usr/include/c++/9.1.0/ostream ****       operator<<(int __n);
 190:/usr/include/c++/9.1.0/ostream **** 
 191:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 192:/usr/include/c++/9.1.0/ostream ****       operator<<(unsigned int __n)
 193:/usr/include/c++/9.1.0/ostream ****       {
 194:/usr/include/c++/9.1.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 195:/usr/include/c++/9.1.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 196:/usr/include/c++/9.1.0/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 197:/usr/include/c++/9.1.0/ostream ****       }
 198:/usr/include/c++/9.1.0/ostream **** 
 199:/usr/include/c++/9.1.0/ostream **** #ifdef _GLIBCXX_USE_LONG_LONG
 200:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 201:/usr/include/c++/9.1.0/ostream ****       operator<<(long long __n)
 202:/usr/include/c++/9.1.0/ostream ****       { return _M_insert(__n); }
 203:/usr/include/c++/9.1.0/ostream **** 
 204:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 205:/usr/include/c++/9.1.0/ostream ****       operator<<(unsigned long long __n)
 206:/usr/include/c++/9.1.0/ostream ****       { return _M_insert(__n); }
 207:/usr/include/c++/9.1.0/ostream **** #endif
 208:/usr/include/c++/9.1.0/ostream ****       //@}
 209:/usr/include/c++/9.1.0/ostream **** 
 210:/usr/include/c++/9.1.0/ostream ****       //@{
 211:/usr/include/c++/9.1.0/ostream ****       /**
 212:/usr/include/c++/9.1.0/ostream ****        *  @brief  Floating point arithmetic inserters
 213:/usr/include/c++/9.1.0/ostream ****        *  @param  __f A variable of builtin floating point type.
 214:/usr/include/c++/9.1.0/ostream ****        *  @return  @c *this if successful
 215:/usr/include/c++/9.1.0/ostream ****        *
 216:/usr/include/c++/9.1.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 217:/usr/include/c++/9.1.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 218:/usr/include/c++/9.1.0/ostream ****       */
 219:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 220:/usr/include/c++/9.1.0/ostream ****       operator<<(double __f)
 221:/usr/include/c++/9.1.0/ostream ****       { return _M_insert(__f); }
 222:/usr/include/c++/9.1.0/ostream **** 
 223:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 224:/usr/include/c++/9.1.0/ostream ****       operator<<(float __f)
 225:/usr/include/c++/9.1.0/ostream ****       {
 226:/usr/include/c++/9.1.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 227:/usr/include/c++/9.1.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 228:/usr/include/c++/9.1.0/ostream **** 	return _M_insert(static_cast<double>(__f));
 229:/usr/include/c++/9.1.0/ostream ****       }
 230:/usr/include/c++/9.1.0/ostream **** 
 231:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 232:/usr/include/c++/9.1.0/ostream ****       operator<<(long double __f)
 233:/usr/include/c++/9.1.0/ostream ****       { return _M_insert(__f); }
 234:/usr/include/c++/9.1.0/ostream ****       //@}
 235:/usr/include/c++/9.1.0/ostream **** 
 236:/usr/include/c++/9.1.0/ostream ****       /**
 237:/usr/include/c++/9.1.0/ostream ****        *  @brief  Pointer arithmetic inserters
 238:/usr/include/c++/9.1.0/ostream ****        *  @param  __p A variable of pointer type.
 239:/usr/include/c++/9.1.0/ostream ****        *  @return  @c *this if successful
 240:/usr/include/c++/9.1.0/ostream ****        *
 241:/usr/include/c++/9.1.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 242:/usr/include/c++/9.1.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 243:/usr/include/c++/9.1.0/ostream ****       */
 244:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
GAS LISTING /tmp/ccUgL469.s 			page 49


 245:/usr/include/c++/9.1.0/ostream ****       operator<<(const void* __p)
 246:/usr/include/c++/9.1.0/ostream ****       { return _M_insert(__p); }
 247:/usr/include/c++/9.1.0/ostream **** 
 248:/usr/include/c++/9.1.0/ostream **** #if __cplusplus >= 201703L
 249:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 250:/usr/include/c++/9.1.0/ostream ****       operator<<(nullptr_t)
 251:/usr/include/c++/9.1.0/ostream ****       { return *this << "nullptr"; }
 252:/usr/include/c++/9.1.0/ostream **** #endif
 253:/usr/include/c++/9.1.0/ostream **** 
 254:/usr/include/c++/9.1.0/ostream ****       /**
 255:/usr/include/c++/9.1.0/ostream ****        *  @brief  Extracting from another streambuf.
 256:/usr/include/c++/9.1.0/ostream ****        *  @param  __sb  A pointer to a streambuf
 257:/usr/include/c++/9.1.0/ostream ****        *
 258:/usr/include/c++/9.1.0/ostream ****        *  This function behaves like one of the basic arithmetic extractors,
 259:/usr/include/c++/9.1.0/ostream ****        *  in that it also constructs a sentry object and has the same error
 260:/usr/include/c++/9.1.0/ostream ****        *  handling behavior.
 261:/usr/include/c++/9.1.0/ostream ****        *
 262:/usr/include/c++/9.1.0/ostream ****        *  If @p __sb is NULL, the stream will set failbit in its error state.
 263:/usr/include/c++/9.1.0/ostream ****        *
 264:/usr/include/c++/9.1.0/ostream ****        *  Characters are extracted from @p __sb and inserted into @c *this
 265:/usr/include/c++/9.1.0/ostream ****        *  until one of the following occurs:
 266:/usr/include/c++/9.1.0/ostream ****        *
 267:/usr/include/c++/9.1.0/ostream ****        *  - the input stream reaches end-of-file,
 268:/usr/include/c++/9.1.0/ostream ****        *  - insertion into the output sequence fails (in this case, the
 269:/usr/include/c++/9.1.0/ostream ****        *    character that would have been inserted is not extracted), or
 270:/usr/include/c++/9.1.0/ostream ****        *  - an exception occurs while getting a character from @p __sb, which
 271:/usr/include/c++/9.1.0/ostream ****        *    sets failbit in the error state
 272:/usr/include/c++/9.1.0/ostream ****        *
 273:/usr/include/c++/9.1.0/ostream ****        *  If the function inserts no characters, failbit is set.
 274:/usr/include/c++/9.1.0/ostream ****       */
 275:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 276:/usr/include/c++/9.1.0/ostream ****       operator<<(__streambuf_type* __sb);
 277:/usr/include/c++/9.1.0/ostream ****       //@}
 278:/usr/include/c++/9.1.0/ostream **** 
 279:/usr/include/c++/9.1.0/ostream ****       //@{
 280:/usr/include/c++/9.1.0/ostream ****       /**
 281:/usr/include/c++/9.1.0/ostream ****        *  @name Unformatted Output Functions
 282:/usr/include/c++/9.1.0/ostream ****        *
 283:/usr/include/c++/9.1.0/ostream ****        *  All the unformatted output functions have some common behavior.
 284:/usr/include/c++/9.1.0/ostream ****        *  Each starts by constructing a temporary object of type
 285:/usr/include/c++/9.1.0/ostream ****        *  std::basic_ostream::sentry.  This has several effects, concluding
 286:/usr/include/c++/9.1.0/ostream ****        *  with the setting of a status flag; see the sentry documentation
 287:/usr/include/c++/9.1.0/ostream ****        *  for more.
 288:/usr/include/c++/9.1.0/ostream ****        *
 289:/usr/include/c++/9.1.0/ostream ****        *  If the sentry status is good, the function tries to generate
 290:/usr/include/c++/9.1.0/ostream ****        *  whatever data is appropriate for the type of the argument.
 291:/usr/include/c++/9.1.0/ostream ****        *
 292:/usr/include/c++/9.1.0/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 293:/usr/include/c++/9.1.0/ostream ****        *  will be turned on in the stream's error state.  If badbit is on in
 294:/usr/include/c++/9.1.0/ostream ****        *  the stream's exceptions mask, the exception will be rethrown
 295:/usr/include/c++/9.1.0/ostream ****        *  without completing its actions.
 296:/usr/include/c++/9.1.0/ostream ****       */
 297:/usr/include/c++/9.1.0/ostream **** 
 298:/usr/include/c++/9.1.0/ostream ****       /**
 299:/usr/include/c++/9.1.0/ostream ****        *  @brief  Simple insertion.
 300:/usr/include/c++/9.1.0/ostream ****        *  @param  __c  The character to insert.
 301:/usr/include/c++/9.1.0/ostream ****        *  @return  *this
GAS LISTING /tmp/ccUgL469.s 			page 50


 302:/usr/include/c++/9.1.0/ostream ****        *
 303:/usr/include/c++/9.1.0/ostream ****        *  Tries to insert @p __c.
 304:/usr/include/c++/9.1.0/ostream ****        *
 305:/usr/include/c++/9.1.0/ostream ****        *  @note  This function is not overloaded on signed char and
 306:/usr/include/c++/9.1.0/ostream ****        *         unsigned char.
 307:/usr/include/c++/9.1.0/ostream ****       */
 308:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 309:/usr/include/c++/9.1.0/ostream ****       put(char_type __c);
 310:/usr/include/c++/9.1.0/ostream **** 
 311:/usr/include/c++/9.1.0/ostream ****       /**
 312:/usr/include/c++/9.1.0/ostream ****        *  @brief  Core write functionality, without sentry.
 313:/usr/include/c++/9.1.0/ostream ****        *  @param  __s  The array to insert.
 314:/usr/include/c++/9.1.0/ostream ****        *  @param  __n  Maximum number of characters to insert.
 315:/usr/include/c++/9.1.0/ostream ****       */
 316:/usr/include/c++/9.1.0/ostream ****       void
 317:/usr/include/c++/9.1.0/ostream ****       _M_write(const char_type* __s, streamsize __n)
 318:/usr/include/c++/9.1.0/ostream ****       {
 319:/usr/include/c++/9.1.0/ostream **** 	const streamsize __put = this->rdbuf()->sputn(__s, __n);
 320:/usr/include/c++/9.1.0/ostream **** 	if (__put != __n)
 321:/usr/include/c++/9.1.0/ostream **** 	  this->setstate(ios_base::badbit);
 322:/usr/include/c++/9.1.0/ostream ****       }
 323:/usr/include/c++/9.1.0/ostream **** 
 324:/usr/include/c++/9.1.0/ostream ****       /**
 325:/usr/include/c++/9.1.0/ostream ****        *  @brief  Character string insertion.
 326:/usr/include/c++/9.1.0/ostream ****        *  @param  __s  The array to insert.
 327:/usr/include/c++/9.1.0/ostream ****        *  @param  __n  Maximum number of characters to insert.
 328:/usr/include/c++/9.1.0/ostream ****        *  @return  *this
 329:/usr/include/c++/9.1.0/ostream ****        *
 330:/usr/include/c++/9.1.0/ostream ****        *  Characters are copied from @p __s and inserted into the stream until
 331:/usr/include/c++/9.1.0/ostream ****        *  one of the following happens:
 332:/usr/include/c++/9.1.0/ostream ****        *
 333:/usr/include/c++/9.1.0/ostream ****        *  - @p __n characters are inserted
 334:/usr/include/c++/9.1.0/ostream ****        *  - inserting into the output sequence fails (in this case, badbit
 335:/usr/include/c++/9.1.0/ostream ****        *    will be set in the stream's error state)
 336:/usr/include/c++/9.1.0/ostream ****        *
 337:/usr/include/c++/9.1.0/ostream ****        *  @note  This function is not overloaded on signed char and
 338:/usr/include/c++/9.1.0/ostream ****        *         unsigned char.
 339:/usr/include/c++/9.1.0/ostream ****       */
 340:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 341:/usr/include/c++/9.1.0/ostream ****       write(const char_type* __s, streamsize __n);
 342:/usr/include/c++/9.1.0/ostream ****       //@}
 343:/usr/include/c++/9.1.0/ostream **** 
 344:/usr/include/c++/9.1.0/ostream ****       /**
 345:/usr/include/c++/9.1.0/ostream ****        *  @brief  Synchronizing the stream buffer.
 346:/usr/include/c++/9.1.0/ostream ****        *  @return  *this
 347:/usr/include/c++/9.1.0/ostream ****        *
 348:/usr/include/c++/9.1.0/ostream ****        *  If @c rdbuf() is a null pointer, changes nothing.
 349:/usr/include/c++/9.1.0/ostream ****        *
 350:/usr/include/c++/9.1.0/ostream ****        *  Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,
 351:/usr/include/c++/9.1.0/ostream ****        *  sets badbit.
 352:/usr/include/c++/9.1.0/ostream ****       */
 353:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 354:/usr/include/c++/9.1.0/ostream ****       flush();
 355:/usr/include/c++/9.1.0/ostream **** 
 356:/usr/include/c++/9.1.0/ostream ****       /**
 357:/usr/include/c++/9.1.0/ostream ****        *  @brief  Getting the current write position.
 358:/usr/include/c++/9.1.0/ostream ****        *  @return  A file position object.
GAS LISTING /tmp/ccUgL469.s 			page 51


 359:/usr/include/c++/9.1.0/ostream ****        *
 360:/usr/include/c++/9.1.0/ostream ****        *  If @c fail() is not false, returns @c pos_type(-1) to indicate
 361:/usr/include/c++/9.1.0/ostream ****        *  failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).
 362:/usr/include/c++/9.1.0/ostream ****       */
 363:/usr/include/c++/9.1.0/ostream ****       pos_type
 364:/usr/include/c++/9.1.0/ostream ****       tellp();
 365:/usr/include/c++/9.1.0/ostream **** 
 366:/usr/include/c++/9.1.0/ostream ****       /**
 367:/usr/include/c++/9.1.0/ostream ****        *  @brief  Changing the current write position.
 368:/usr/include/c++/9.1.0/ostream ****        *  @param  __pos  A file position object.
 369:/usr/include/c++/9.1.0/ostream ****        *  @return  *this
 370:/usr/include/c++/9.1.0/ostream ****        *
 371:/usr/include/c++/9.1.0/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If
 372:/usr/include/c++/9.1.0/ostream ****        *  that function fails, sets failbit.
 373:/usr/include/c++/9.1.0/ostream ****       */
 374:/usr/include/c++/9.1.0/ostream ****       __ostream_type&
 375:/usr/include/c++/9.1.0/ostream ****       seekp(pos_type);
 376:/usr/include/c++/9.1.0/ostream **** 
 377:/usr/include/c++/9.1.0/ostream ****       /**
 378:/usr/include/c++/9.1.0/ostream ****        *  @brief  Changing the current write position.
 379:/usr/include/c++/9.1.0/ostream ****        *  @param  __off  A file offset object.
 380:/usr/include/c++/9.1.0/ostream ****        *  @param  __dir  The direction in which to seek.
 381:/usr/include/c++/9.1.0/ostream ****        *  @return  *this
 382:/usr/include/c++/9.1.0/ostream ****        *
 383:/usr/include/c++/9.1.0/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).
 384:/usr/include/c++/9.1.0/ostream ****        *  If that function fails, sets failbit.
 385:/usr/include/c++/9.1.0/ostream ****       */
 386:/usr/include/c++/9.1.0/ostream ****        __ostream_type&
 387:/usr/include/c++/9.1.0/ostream ****       seekp(off_type, ios_base::seekdir);
 388:/usr/include/c++/9.1.0/ostream **** 
 389:/usr/include/c++/9.1.0/ostream ****     protected:
 390:/usr/include/c++/9.1.0/ostream ****       basic_ostream()
 391:/usr/include/c++/9.1.0/ostream ****       { this->init(0); }
 392:/usr/include/c++/9.1.0/ostream **** 
 393:/usr/include/c++/9.1.0/ostream **** #if __cplusplus >= 201103L
 394:/usr/include/c++/9.1.0/ostream ****       // Non-standard constructor that does not call init()
 395:/usr/include/c++/9.1.0/ostream ****       basic_ostream(basic_iostream<_CharT, _Traits>&) { }
 396:/usr/include/c++/9.1.0/ostream **** 
 397:/usr/include/c++/9.1.0/ostream ****       basic_ostream(const basic_ostream&) = delete;
 398:/usr/include/c++/9.1.0/ostream **** 
 399:/usr/include/c++/9.1.0/ostream ****       basic_ostream(basic_ostream&& __rhs)
 400:/usr/include/c++/9.1.0/ostream ****       : __ios_type()
 401:/usr/include/c++/9.1.0/ostream ****       { __ios_type::move(__rhs); }
 402:/usr/include/c++/9.1.0/ostream **** 
 403:/usr/include/c++/9.1.0/ostream ****       // 27.7.3.3 Assign/swap
 404:/usr/include/c++/9.1.0/ostream **** 
 405:/usr/include/c++/9.1.0/ostream ****       basic_ostream& operator=(const basic_ostream&) = delete;
 406:/usr/include/c++/9.1.0/ostream **** 
 407:/usr/include/c++/9.1.0/ostream ****       basic_ostream&
 408:/usr/include/c++/9.1.0/ostream ****       operator=(basic_ostream&& __rhs)
 409:/usr/include/c++/9.1.0/ostream ****       {
 410:/usr/include/c++/9.1.0/ostream **** 	swap(__rhs);
 411:/usr/include/c++/9.1.0/ostream **** 	return *this;
 412:/usr/include/c++/9.1.0/ostream ****       }
 413:/usr/include/c++/9.1.0/ostream **** 
 414:/usr/include/c++/9.1.0/ostream ****       void
 415:/usr/include/c++/9.1.0/ostream ****       swap(basic_ostream& __rhs)
GAS LISTING /tmp/ccUgL469.s 			page 52


 416:/usr/include/c++/9.1.0/ostream ****       { __ios_type::swap(__rhs); }
 417:/usr/include/c++/9.1.0/ostream **** #endif
 418:/usr/include/c++/9.1.0/ostream **** 
 419:/usr/include/c++/9.1.0/ostream ****       template<typename _ValueT>
 420:/usr/include/c++/9.1.0/ostream **** 	__ostream_type&
 421:/usr/include/c++/9.1.0/ostream **** 	_M_insert(_ValueT __v);
 422:/usr/include/c++/9.1.0/ostream ****     };
 423:/usr/include/c++/9.1.0/ostream **** 
 424:/usr/include/c++/9.1.0/ostream ****   /**
 425:/usr/include/c++/9.1.0/ostream ****    *  @brief  Performs setup work for output streams.
 426:/usr/include/c++/9.1.0/ostream ****    *
 427:/usr/include/c++/9.1.0/ostream ****    *  Objects of this class are created before all of the standard
 428:/usr/include/c++/9.1.0/ostream ****    *  inserters are run.  It is responsible for <em>exception-safe prefix and
 429:/usr/include/c++/9.1.0/ostream ****    *  suffix operations</em>.
 430:/usr/include/c++/9.1.0/ostream ****   */
 431:/usr/include/c++/9.1.0/ostream ****   template <typename _CharT, typename _Traits>
 432:/usr/include/c++/9.1.0/ostream ****     class basic_ostream<_CharT, _Traits>::sentry
 433:/usr/include/c++/9.1.0/ostream ****     {
 434:/usr/include/c++/9.1.0/ostream ****       // Data Members.
 435:/usr/include/c++/9.1.0/ostream ****       bool 				_M_ok;
 436:/usr/include/c++/9.1.0/ostream ****       basic_ostream<_CharT, _Traits>& 	_M_os;
 437:/usr/include/c++/9.1.0/ostream **** 
 438:/usr/include/c++/9.1.0/ostream ****     public:
 439:/usr/include/c++/9.1.0/ostream ****       /**
 440:/usr/include/c++/9.1.0/ostream ****        *  @brief  The constructor performs preparatory work.
 441:/usr/include/c++/9.1.0/ostream ****        *  @param  __os  The output stream to guard.
 442:/usr/include/c++/9.1.0/ostream ****        *
 443:/usr/include/c++/9.1.0/ostream ****        *  If the stream state is good (@a __os.good() is true), then if the
 444:/usr/include/c++/9.1.0/ostream ****        *  stream is tied to another output stream, @c is.tie()->flush()
 445:/usr/include/c++/9.1.0/ostream ****        *  is called to synchronize the output sequences.
 446:/usr/include/c++/9.1.0/ostream ****        *
 447:/usr/include/c++/9.1.0/ostream ****        *  If the stream state is still good, then the sentry state becomes
 448:/usr/include/c++/9.1.0/ostream ****        *  true (@a okay).
 449:/usr/include/c++/9.1.0/ostream ****       */
 450:/usr/include/c++/9.1.0/ostream ****       explicit
 451:/usr/include/c++/9.1.0/ostream ****       sentry(basic_ostream<_CharT, _Traits>& __os);
 452:/usr/include/c++/9.1.0/ostream **** 
 453:/usr/include/c++/9.1.0/ostream **** #pragma GCC diagnostic push
 454:/usr/include/c++/9.1.0/ostream **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 455:/usr/include/c++/9.1.0/ostream ****       /**
 456:/usr/include/c++/9.1.0/ostream ****        *  @brief  Possibly flushes the stream.
 457:/usr/include/c++/9.1.0/ostream ****        *
 458:/usr/include/c++/9.1.0/ostream ****        *  If @c ios_base::unitbuf is set in @c os.flags(), and
 459:/usr/include/c++/9.1.0/ostream ****        *  @c std::uncaught_exception() is true, the sentry destructor calls
 460:/usr/include/c++/9.1.0/ostream ****        *  @c flush() on the output stream.
 461:/usr/include/c++/9.1.0/ostream ****       */
 462:/usr/include/c++/9.1.0/ostream ****       ~sentry()
 463:/usr/include/c++/9.1.0/ostream ****       {
 464:/usr/include/c++/9.1.0/ostream **** 	// XXX MT
 465:/usr/include/c++/9.1.0/ostream **** 	if (bool(_M_os.flags() & ios_base::unitbuf) && !uncaught_exception())
 466:/usr/include/c++/9.1.0/ostream **** 	  {
 467:/usr/include/c++/9.1.0/ostream **** 	    // Can't call flush directly or else will get into recursive lock.
 468:/usr/include/c++/9.1.0/ostream **** 	    if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
 469:/usr/include/c++/9.1.0/ostream **** 	      _M_os.setstate(ios_base::badbit);
 470:/usr/include/c++/9.1.0/ostream **** 	  }
 471:/usr/include/c++/9.1.0/ostream ****       }
 472:/usr/include/c++/9.1.0/ostream **** #pragma GCC diagnostic pop
GAS LISTING /tmp/ccUgL469.s 			page 53


 473:/usr/include/c++/9.1.0/ostream **** 
 474:/usr/include/c++/9.1.0/ostream ****       /**
 475:/usr/include/c++/9.1.0/ostream ****        *  @brief  Quick status checking.
 476:/usr/include/c++/9.1.0/ostream ****        *  @return  The sentry state.
 477:/usr/include/c++/9.1.0/ostream ****        *
 478:/usr/include/c++/9.1.0/ostream ****        *  For ease of use, sentries may be converted to booleans.  The
 479:/usr/include/c++/9.1.0/ostream ****        *  return value is that of the sentry state (true == okay).
 480:/usr/include/c++/9.1.0/ostream ****       */
 481:/usr/include/c++/9.1.0/ostream **** #if __cplusplus >= 201103L
 482:/usr/include/c++/9.1.0/ostream ****       explicit
 483:/usr/include/c++/9.1.0/ostream **** #endif
 484:/usr/include/c++/9.1.0/ostream ****       operator bool() const
 485:/usr/include/c++/9.1.0/ostream ****       { return _M_ok; }
 486:/usr/include/c++/9.1.0/ostream ****     };
 487:/usr/include/c++/9.1.0/ostream **** 
 488:/usr/include/c++/9.1.0/ostream ****   //@{
 489:/usr/include/c++/9.1.0/ostream ****   /**
 490:/usr/include/c++/9.1.0/ostream ****    *  @brief  Character inserters
 491:/usr/include/c++/9.1.0/ostream ****    *  @param  __out  An output stream.
 492:/usr/include/c++/9.1.0/ostream ****    *  @param  __c  A character.
 493:/usr/include/c++/9.1.0/ostream ****    *  @return  out
 494:/usr/include/c++/9.1.0/ostream ****    *
 495:/usr/include/c++/9.1.0/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 496:/usr/include/c++/9.1.0/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 497:/usr/include/c++/9.1.0/ostream ****    *  status, this function inserts a single character and any required
 498:/usr/include/c++/9.1.0/ostream ****    *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
 499:/usr/include/c++/9.1.0/ostream ****    *  called.
 500:/usr/include/c++/9.1.0/ostream ****    *
 501:/usr/include/c++/9.1.0/ostream ****    *  If @p __c is of type @c char and the character type of the stream is not
 502:/usr/include/c++/9.1.0/ostream ****    *  @c char, the character is widened before insertion.
 503:/usr/include/c++/9.1.0/ostream ****   */
 504:/usr/include/c++/9.1.0/ostream ****   template<typename _CharT, typename _Traits>
 505:/usr/include/c++/9.1.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 506:/usr/include/c++/9.1.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
 507:/usr/include/c++/9.1.0/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 508:/usr/include/c++/9.1.0/ostream **** 
 509:/usr/include/c++/9.1.0/ostream ****   template<typename _CharT, typename _Traits>
 510:/usr/include/c++/9.1.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 511:/usr/include/c++/9.1.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
 512:/usr/include/c++/9.1.0/ostream ****     { return (__out << __out.widen(__c)); }
 513:/usr/include/c++/9.1.0/ostream **** 
 514:/usr/include/c++/9.1.0/ostream ****   // Specialization
 515:/usr/include/c++/9.1.0/ostream ****   template <class _Traits>
 516:/usr/include/c++/9.1.0/ostream ****     inline basic_ostream<char, _Traits>&
 517:/usr/include/c++/9.1.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, char __c)
 518:/usr/include/c++/9.1.0/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 519:/usr/include/c++/9.1.0/ostream **** 
 520:/usr/include/c++/9.1.0/ostream ****   // Signed and unsigned
 521:/usr/include/c++/9.1.0/ostream ****   template<class _Traits>
 522:/usr/include/c++/9.1.0/ostream ****     inline basic_ostream<char, _Traits>&
 523:/usr/include/c++/9.1.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
 524:/usr/include/c++/9.1.0/ostream ****     { return (__out << static_cast<char>(__c)); }
 525:/usr/include/c++/9.1.0/ostream **** 
 526:/usr/include/c++/9.1.0/ostream ****   template<class _Traits>
 527:/usr/include/c++/9.1.0/ostream ****     inline basic_ostream<char, _Traits>&
 528:/usr/include/c++/9.1.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
 529:/usr/include/c++/9.1.0/ostream ****     { return (__out << static_cast<char>(__c)); }
GAS LISTING /tmp/ccUgL469.s 			page 54


 530:/usr/include/c++/9.1.0/ostream ****   //@}
 531:/usr/include/c++/9.1.0/ostream **** 
 532:/usr/include/c++/9.1.0/ostream ****   //@{
 533:/usr/include/c++/9.1.0/ostream ****   /**
 534:/usr/include/c++/9.1.0/ostream ****    *  @brief  String inserters
 535:/usr/include/c++/9.1.0/ostream ****    *  @param  __out  An output stream.
 536:/usr/include/c++/9.1.0/ostream ****    *  @param  __s  A character string.
 537:/usr/include/c++/9.1.0/ostream ****    *  @return  out
 538:/usr/include/c++/9.1.0/ostream ****    *  @pre  @p __s must be a non-NULL pointer
 539:/usr/include/c++/9.1.0/ostream ****    *
 540:/usr/include/c++/9.1.0/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 541:/usr/include/c++/9.1.0/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 542:/usr/include/c++/9.1.0/ostream ****    *  status, this function inserts @c traits::length(__s) characters starting
 543:/usr/include/c++/9.1.0/ostream ****    *  at @p __s, widened if necessary, followed by any required padding (as
 544:/usr/include/c++/9.1.0/ostream ****    *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
 545:/usr/include/c++/9.1.0/ostream ****   */
 546:/usr/include/c++/9.1.0/ostream ****   template<typename _CharT, typename _Traits>
 547:/usr/include/c++/9.1.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 548:/usr/include/c++/9.1.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
 549:/usr/include/c++/9.1.0/ostream ****     {
 550:/usr/include/c++/9.1.0/ostream ****       if (!__s)
 551:/usr/include/c++/9.1.0/ostream **** 	__out.setstate(ios_base::badbit);
 552:/usr/include/c++/9.1.0/ostream ****       else
 553:/usr/include/c++/9.1.0/ostream **** 	__ostream_insert(__out, __s,
 554:/usr/include/c++/9.1.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 555:/usr/include/c++/9.1.0/ostream ****       return __out;
 556:/usr/include/c++/9.1.0/ostream ****     }
 557:/usr/include/c++/9.1.0/ostream **** 
 558:/usr/include/c++/9.1.0/ostream ****   template<typename _CharT, typename _Traits>
 559:/usr/include/c++/9.1.0/ostream ****     basic_ostream<_CharT, _Traits> &
 560:/usr/include/c++/9.1.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
 561:/usr/include/c++/9.1.0/ostream **** 
 562:/usr/include/c++/9.1.0/ostream ****   // Partial specializations
 563:/usr/include/c++/9.1.0/ostream ****   template<class _Traits>
 564:/usr/include/c++/9.1.0/ostream ****     inline basic_ostream<char, _Traits>&
 565:/usr/include/c++/9.1.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
 566:/usr/include/c++/9.1.0/ostream ****     {
 567:/usr/include/c++/9.1.0/ostream ****       if (!__s)
 568:/usr/include/c++/9.1.0/ostream **** 	__out.setstate(ios_base::badbit);
 569:/usr/include/c++/9.1.0/ostream ****       else
 570:/usr/include/c++/9.1.0/ostream **** 	__ostream_insert(__out, __s,
 571:/usr/include/c++/9.1.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 572:/usr/include/c++/9.1.0/ostream ****       return __out;
 573:/usr/include/c++/9.1.0/ostream ****     }
 574:/usr/include/c++/9.1.0/ostream **** 
 575:/usr/include/c++/9.1.0/ostream ****   // Signed and unsigned
 576:/usr/include/c++/9.1.0/ostream ****   template<class _Traits>
 577:/usr/include/c++/9.1.0/ostream ****     inline basic_ostream<char, _Traits>&
 578:/usr/include/c++/9.1.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
 579:/usr/include/c++/9.1.0/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 580:/usr/include/c++/9.1.0/ostream **** 
 581:/usr/include/c++/9.1.0/ostream ****   template<class _Traits>
 582:/usr/include/c++/9.1.0/ostream ****     inline basic_ostream<char, _Traits> &
 583:/usr/include/c++/9.1.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
 584:/usr/include/c++/9.1.0/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 585:/usr/include/c++/9.1.0/ostream ****   //@}
 586:/usr/include/c++/9.1.0/ostream **** 
GAS LISTING /tmp/ccUgL469.s 			page 55


 587:/usr/include/c++/9.1.0/ostream ****   // Standard basic_ostream manipulators
 588:/usr/include/c++/9.1.0/ostream **** 
 589:/usr/include/c++/9.1.0/ostream ****   /**
 590:/usr/include/c++/9.1.0/ostream ****    *  @brief  Write a newline and flush the stream.
 591:/usr/include/c++/9.1.0/ostream ****    *
 592:/usr/include/c++/9.1.0/ostream ****    *  This manipulator is often mistakenly used when a simple newline is
 593:/usr/include/c++/9.1.0/ostream ****    *  desired, leading to poor buffering performance.  See
 594:/usr/include/c++/9.1.0/ostream ****    *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/streambufs.html#io.streambuf.buffering
 595:/usr/include/c++/9.1.0/ostream ****    *  for more on this subject.
 596:/usr/include/c++/9.1.0/ostream ****   */
 597:/usr/include/c++/9.1.0/ostream ****   template<typename _CharT, typename _Traits>
 598:/usr/include/c++/9.1.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 599:/usr/include/c++/9.1.0/ostream ****     endl(basic_ostream<_CharT, _Traits>& __os)
 600:/usr/include/c++/9.1.0/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 1002              		.loc 5 600 19 view .LVU270
 1003 03ae 400FBEF6 		movsbl	%sil, %esi
 1004 03b2 4889DF   		movq	%rbx, %rdi
 1005 03b5 E8000000 		call	_ZNSo3putEc@PLT
 1005      00
 1006              	.LVL115:
 1007 03ba 4889C7   		movq	%rax, %rdi
 1008              	.LVL116:
 1009              	.LBB84:
 1010              	.LBI84:
 601:/usr/include/c++/9.1.0/ostream **** 
 602:/usr/include/c++/9.1.0/ostream ****   /**
 603:/usr/include/c++/9.1.0/ostream ****    *  @brief  Write a null character into the output sequence.
 604:/usr/include/c++/9.1.0/ostream ****    *
 605:/usr/include/c++/9.1.0/ostream ****    *  <em>Null character</em> is @c CharT() by definition.  For CharT
 606:/usr/include/c++/9.1.0/ostream ****    *  of @c char, this correctly writes the ASCII @c NUL character
 607:/usr/include/c++/9.1.0/ostream ****    *  string terminator.
 608:/usr/include/c++/9.1.0/ostream ****   */
 609:/usr/include/c++/9.1.0/ostream ****   template<typename _CharT, typename _Traits>
 610:/usr/include/c++/9.1.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 611:/usr/include/c++/9.1.0/ostream ****     ends(basic_ostream<_CharT, _Traits>& __os)
 612:/usr/include/c++/9.1.0/ostream ****     { return __os.put(_CharT()); }
 613:/usr/include/c++/9.1.0/ostream **** 
 614:/usr/include/c++/9.1.0/ostream ****   /**
 615:/usr/include/c++/9.1.0/ostream ****    *  @brief  Flushes the output stream.
 616:/usr/include/c++/9.1.0/ostream ****    *
 617:/usr/include/c++/9.1.0/ostream ****    *  This manipulator simply calls the stream's @c flush() member function.
 618:/usr/include/c++/9.1.0/ostream ****   */
 619:/usr/include/c++/9.1.0/ostream ****   template<typename _CharT, typename _Traits>
 620:/usr/include/c++/9.1.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 621:/usr/include/c++/9.1.0/ostream ****     flush(basic_ostream<_CharT, _Traits>& __os)
 1011              		.loc 5 621 5 is_stmt 1 view .LVU271
 1012              	.LBB85:
 622:/usr/include/c++/9.1.0/ostream ****     { return __os.flush(); }
 1013              		.loc 5 622 25 is_stmt 0 view .LVU272
 1014 03bd E8000000 		call	_ZNSo5flushEv@PLT
 1014      00
 1015              	.LVL117:
 1016              		.loc 5 622 25 view .LVU273
 1017              	.LBE85:
 1018              	.LBE84:
 1019              	.LBE72:
 1020              	.LBE71:
GAS LISTING /tmp/ccUgL469.s 			page 56


 1021              	.LBE70:
 187:Src/translator.cpp ****         {
 1022              		.loc 1 187 9 view .LVU274
 1023 03c2 4183C501 		addl	$1, %r13d
 1024              	.LVL118:
 1025              	.L72:
 187:Src/translator.cpp ****         {
 1026              		.loc 1 187 28 discriminator 3 view .LVU275
 1027 03c6 410FB6ED 		movzbl	%r13b, %ebp
 187:Src/translator.cpp ****         {
 1028              		.loc 1 187 32 discriminator 3 view .LVU276
 1029 03ca 410FB6C7 		movzbl	%r15b, %eax
 187:Src/translator.cpp ****         {
 1030              		.loc 1 187 36 discriminator 3 view .LVU277
 1031 03ce 83E801   		subl	$1, %eax
 187:Src/translator.cpp ****         {
 1032              		.loc 1 187 30 discriminator 3 view .LVU278
 1033 03d1 39C5     		cmpl	%eax, %ebp
 1034 03d3 0F8DA100 		jge	.L67
 1034      0000
 189:Src/translator.cpp ****             std::cout << "from " << (int)((id + i) * elsize) << " to " << (int)(i + 4) << std::endl
 1035              		.loc 1 189 13 is_stmt 1 discriminator 2 view .LVU279
 189:Src/translator.cpp ****             std::cout << "from " << (int)((id + i) * elsize) << " to " << (int)(i + 4) << std::endl
 1036              		.loc 1 189 48 is_stmt 0 discriminator 2 view .LVU280
 1037 03d9 410FB6C5 		movzbl	%r13b, %eax
 189:Src/translator.cpp ****             std::cout << "from " << (int)((id + i) * elsize) << " to " << (int)(i + 4) << std::endl
 1038              		.loc 1 189 20 discriminator 2 view .LVU281
 1039 03dd 0FB65C24 		movzbl	15(%rsp), %ebx
 1039      0F
 189:Src/translator.cpp ****             std::cout << "from " << (int)((id + i) * elsize) << " to " << (int)(i + 4) << std::endl
 1040              		.loc 1 189 23 discriminator 2 view .LVU282
 1041 03e2 01EB     		addl	%ebp, %ebx
 189:Src/translator.cpp ****             std::cout << "from " << (int)((id + i) * elsize) << " to " << (int)(i + 4) << std::endl
 1042              		.loc 1 189 30 discriminator 2 view .LVU283
 1043 03e4 0FB65424 		movzbl	14(%rsp), %edx
 1043      0E
 189:Src/translator.cpp ****             std::cout << "from " << (int)((id + i) * elsize) << " to " << (int)(i + 4) << std::endl
 1044              		.loc 1 189 28 discriminator 2 view .LVU284
 1045 03e9 0FAFDA   		imull	%edx, %ebx
 1046 03ec 4863D3   		movslq	%ebx, %rdx
 189:Src/translator.cpp ****             std::cout << "from " << (int)((id + i) * elsize) << " to " << (int)(i + 4) << std::endl
 1047              		.loc 1 189 53 discriminator 2 view .LVU285
 1048 03ef 410FB644 		movzbl	4(%r12,%rax), %eax
 1048      0404
 189:Src/translator.cpp ****             std::cout << "from " << (int)((id + i) * elsize) << " to " << (int)(i + 4) << std::endl
 1049              		.loc 1 189 38 discriminator 2 view .LVU286
 1050 03f5 488B0C24 		movq	(%rsp), %rcx
 1051 03f9 880411   		movb	%al, (%rcx,%rdx)
 190:Src/translator.cpp ****         }
 1052              		.loc 1 190 13 is_stmt 1 discriminator 2 view .LVU287
 1053              	.LVL119:
 1054              	.LBB89:
 1055              	.LBI89:
 565:/usr/include/c++/9.1.0/ostream ****     {
 1056              		.loc 5 565 5 discriminator 2 view .LVU288
 565:/usr/include/c++/9.1.0/ostream ****     {
 1057              		.loc 5 565 5 is_stmt 0 discriminator 2 view .LVU289
GAS LISTING /tmp/ccUgL469.s 			page 57


 1058              	.LBE89:
 1059              	.LBE69:
 1060              		.file 6 "/usr/include/c++/9.1.0/bits/char_traits.h"
   1:/usr/include/c++/9.1.0/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/usr/include/c++/9.1.0/bits/char_traits.h **** 
   3:/usr/include/c++/9.1.0/bits/char_traits.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.1.0/bits/char_traits.h **** //
   5:/usr/include/c++/9.1.0/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.1.0/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.1.0/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.1.0/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.1.0/bits/char_traits.h **** // any later version.
  10:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  11:/usr/include/c++/9.1.0/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.1.0/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.1.0/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.1.0/bits/char_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  16:/usr/include/c++/9.1.0/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.1.0/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.1.0/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  20:/usr/include/c++/9.1.0/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.1.0/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.1.0/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.1.0/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  25:/usr/include/c++/9.1.0/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/usr/include/c++/9.1.0/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.1.0/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/9.1.0/bits/char_traits.h ****  */
  29:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  30:/usr/include/c++/9.1.0/bits/char_traits.h **** //
  31:/usr/include/c++/9.1.0/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/c++/9.1.0/bits/char_traits.h **** //
  33:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  34:/usr/include/c++/9.1.0/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/usr/include/c++/9.1.0/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  37:/usr/include/c++/9.1.0/bits/char_traits.h **** #pragma GCC system_header
  38:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  39:/usr/include/c++/9.1.0/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/usr/include/c++/9.1.0/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/usr/include/c++/9.1.0/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  43:/usr/include/c++/9.1.0/bits/char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  44:/usr/include/c++/9.1.0/bits/char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  45:/usr/include/c++/9.1.0/bits/char_traits.h **** #endif
  46:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  47:/usr/include/c++/9.1.0/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  48:/usr/include/c++/9.1.0/bits/char_traits.h **** {
  49:/usr/include/c++/9.1.0/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  51:/usr/include/c++/9.1.0/bits/char_traits.h ****   /**
  52:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  53:/usr/include/c++/9.1.0/bits/char_traits.h ****    *
  54:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
GAS LISTING /tmp/ccUgL469.s 			page 58


  55:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  56:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  57:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  58:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  59:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  60:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  61:/usr/include/c++/9.1.0/bits/char_traits.h ****   template<typename _CharT>
  62:/usr/include/c++/9.1.0/bits/char_traits.h ****     struct _Char_types
  63:/usr/include/c++/9.1.0/bits/char_traits.h ****     {
  64:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef unsigned long   int_type;
  65:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef std::streampos  pos_type;
  66:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef std::streamoff  off_type;
  67:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  68:/usr/include/c++/9.1.0/bits/char_traits.h ****     };
  69:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  70:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  71:/usr/include/c++/9.1.0/bits/char_traits.h ****   /**
  72:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  73:/usr/include/c++/9.1.0/bits/char_traits.h ****    *
  74:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  75:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  76:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  77:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  78:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  79:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  80:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  81:/usr/include/c++/9.1.0/bits/char_traits.h ****    *
  82:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  83:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  84:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  85:/usr/include/c++/9.1.0/bits/char_traits.h ****    */
  86:/usr/include/c++/9.1.0/bits/char_traits.h ****   template<typename _CharT>
  87:/usr/include/c++/9.1.0/bits/char_traits.h ****     struct char_traits
  88:/usr/include/c++/9.1.0/bits/char_traits.h ****     {
  89:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef _CharT                                    char_type;
  90:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  91:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  92:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  93:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  94:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  95:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
  96:/usr/include/c++/9.1.0/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
  97:/usr/include/c++/9.1.0/bits/char_traits.h ****       { __c1 = __c2; }
  98:/usr/include/c++/9.1.0/bits/char_traits.h **** 
  99:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 100:/usr/include/c++/9.1.0/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 101:/usr/include/c++/9.1.0/bits/char_traits.h ****       { return __c1 == __c2; }
 102:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 103:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 104:/usr/include/c++/9.1.0/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 105:/usr/include/c++/9.1.0/bits/char_traits.h ****       { return __c1 < __c2; }
 106:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 107:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 108:/usr/include/c++/9.1.0/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 109:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 110:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 111:/usr/include/c++/9.1.0/bits/char_traits.h ****       length(const char_type* __s);
GAS LISTING /tmp/ccUgL469.s 			page 59


 112:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 113:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 114:/usr/include/c++/9.1.0/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 115:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 116:/usr/include/c++/9.1.0/bits/char_traits.h ****       static char_type*
 117:/usr/include/c++/9.1.0/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 118:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 119:/usr/include/c++/9.1.0/bits/char_traits.h ****       static char_type*
 120:/usr/include/c++/9.1.0/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 121:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 122:/usr/include/c++/9.1.0/bits/char_traits.h ****       static char_type*
 123:/usr/include/c++/9.1.0/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 124:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 125:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 126:/usr/include/c++/9.1.0/bits/char_traits.h ****       to_char_type(const int_type& __c)
 127:/usr/include/c++/9.1.0/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 128:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 129:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 130:/usr/include/c++/9.1.0/bits/char_traits.h ****       to_int_type(const char_type& __c)
 131:/usr/include/c++/9.1.0/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 132:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 133:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 134:/usr/include/c++/9.1.0/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 135:/usr/include/c++/9.1.0/bits/char_traits.h ****       { return __c1 == __c2; }
 136:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 137:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 138:/usr/include/c++/9.1.0/bits/char_traits.h ****       eof()
 139:/usr/include/c++/9.1.0/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 140:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 141:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 142:/usr/include/c++/9.1.0/bits/char_traits.h ****       not_eof(const int_type& __c)
 143:/usr/include/c++/9.1.0/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 144:/usr/include/c++/9.1.0/bits/char_traits.h ****     };
 145:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 146:/usr/include/c++/9.1.0/bits/char_traits.h ****   template<typename _CharT>
 147:/usr/include/c++/9.1.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 148:/usr/include/c++/9.1.0/bits/char_traits.h ****     char_traits<_CharT>::
 149:/usr/include/c++/9.1.0/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 150:/usr/include/c++/9.1.0/bits/char_traits.h ****     {
 151:/usr/include/c++/9.1.0/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 152:/usr/include/c++/9.1.0/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 153:/usr/include/c++/9.1.0/bits/char_traits.h **** 	  return -1;
 154:/usr/include/c++/9.1.0/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 155:/usr/include/c++/9.1.0/bits/char_traits.h **** 	  return 1;
 156:/usr/include/c++/9.1.0/bits/char_traits.h ****       return 0;
 157:/usr/include/c++/9.1.0/bits/char_traits.h ****     }
 158:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 159:/usr/include/c++/9.1.0/bits/char_traits.h ****   template<typename _CharT>
 160:/usr/include/c++/9.1.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 161:/usr/include/c++/9.1.0/bits/char_traits.h ****     char_traits<_CharT>::
 162:/usr/include/c++/9.1.0/bits/char_traits.h ****     length(const char_type* __p)
 163:/usr/include/c++/9.1.0/bits/char_traits.h ****     {
 164:/usr/include/c++/9.1.0/bits/char_traits.h ****       std::size_t __i = 0;
 165:/usr/include/c++/9.1.0/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 166:/usr/include/c++/9.1.0/bits/char_traits.h ****         ++__i;
 167:/usr/include/c++/9.1.0/bits/char_traits.h ****       return __i;
 168:/usr/include/c++/9.1.0/bits/char_traits.h ****     }
GAS LISTING /tmp/ccUgL469.s 			page 60


 169:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 170:/usr/include/c++/9.1.0/bits/char_traits.h ****   template<typename _CharT>
 171:/usr/include/c++/9.1.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 172:/usr/include/c++/9.1.0/bits/char_traits.h ****     char_traits<_CharT>::
 173:/usr/include/c++/9.1.0/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 174:/usr/include/c++/9.1.0/bits/char_traits.h ****     {
 175:/usr/include/c++/9.1.0/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 176:/usr/include/c++/9.1.0/bits/char_traits.h ****         if (eq(__s[__i], __a))
 177:/usr/include/c++/9.1.0/bits/char_traits.h ****           return __s + __i;
 178:/usr/include/c++/9.1.0/bits/char_traits.h ****       return 0;
 179:/usr/include/c++/9.1.0/bits/char_traits.h ****     }
 180:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 181:/usr/include/c++/9.1.0/bits/char_traits.h ****   template<typename _CharT>
 182:/usr/include/c++/9.1.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 183:/usr/include/c++/9.1.0/bits/char_traits.h ****     char_traits<_CharT>::
 184:/usr/include/c++/9.1.0/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 185:/usr/include/c++/9.1.0/bits/char_traits.h ****     {
 186:/usr/include/c++/9.1.0/bits/char_traits.h ****       if (__n == 0)
 187:/usr/include/c++/9.1.0/bits/char_traits.h **** 	return __s1;
 188:/usr/include/c++/9.1.0/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 189:/usr/include/c++/9.1.0/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 190:/usr/include/c++/9.1.0/bits/char_traits.h ****     }
 191:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 192:/usr/include/c++/9.1.0/bits/char_traits.h ****   template<typename _CharT>
 193:/usr/include/c++/9.1.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 194:/usr/include/c++/9.1.0/bits/char_traits.h ****     char_traits<_CharT>::
 195:/usr/include/c++/9.1.0/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 196:/usr/include/c++/9.1.0/bits/char_traits.h ****     {
 197:/usr/include/c++/9.1.0/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 198:/usr/include/c++/9.1.0/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 199:/usr/include/c++/9.1.0/bits/char_traits.h ****       return __s1;
 200:/usr/include/c++/9.1.0/bits/char_traits.h ****     }
 201:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 202:/usr/include/c++/9.1.0/bits/char_traits.h ****   template<typename _CharT>
 203:/usr/include/c++/9.1.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 204:/usr/include/c++/9.1.0/bits/char_traits.h ****     char_traits<_CharT>::
 205:/usr/include/c++/9.1.0/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 206:/usr/include/c++/9.1.0/bits/char_traits.h ****     {
 207:/usr/include/c++/9.1.0/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 208:/usr/include/c++/9.1.0/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 209:/usr/include/c++/9.1.0/bits/char_traits.h ****       return __s;
 210:/usr/include/c++/9.1.0/bits/char_traits.h ****     }
 211:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 212:/usr/include/c++/9.1.0/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 213:/usr/include/c++/9.1.0/bits/char_traits.h **** } // namespace
 214:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 215:/usr/include/c++/9.1.0/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 216:/usr/include/c++/9.1.0/bits/char_traits.h **** {
 217:/usr/include/c++/9.1.0/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 218:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 219:/usr/include/c++/9.1.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 220:/usr/include/c++/9.1.0/bits/char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 221:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 222:/usr/include/c++/9.1.0/bits/char_traits.h ****   /**
 223:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 224:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  string are known at compile time.
 225:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  @param  __s  The string.
GAS LISTING /tmp/ccUgL469.s 			page 61


 226:/usr/include/c++/9.1.0/bits/char_traits.h ****    *
 227:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 228:/usr/include/c++/9.1.0/bits/char_traits.h ****    */
 229:/usr/include/c++/9.1.0/bits/char_traits.h ****   template<typename _CharT>
 230:/usr/include/c++/9.1.0/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 231:/usr/include/c++/9.1.0/bits/char_traits.h ****     __constant_string_p(const _CharT* __s)
 232:/usr/include/c++/9.1.0/bits/char_traits.h ****     {
 233:/usr/include/c++/9.1.0/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 234:/usr/include/c++/9.1.0/bits/char_traits.h ****       (void) __s;
 235:/usr/include/c++/9.1.0/bits/char_traits.h ****       // In constexpr contexts all strings should be constant.
 236:/usr/include/c++/9.1.0/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 237:/usr/include/c++/9.1.0/bits/char_traits.h **** #else
 238:/usr/include/c++/9.1.0/bits/char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 239:/usr/include/c++/9.1.0/bits/char_traits.h **** 	__s++;
 240:/usr/include/c++/9.1.0/bits/char_traits.h ****       return __builtin_constant_p(*__s);
 241:/usr/include/c++/9.1.0/bits/char_traits.h **** #endif
 242:/usr/include/c++/9.1.0/bits/char_traits.h ****     }
 243:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 244:/usr/include/c++/9.1.0/bits/char_traits.h ****   /**
 245:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  @brief Determine whether the characters of a character array are
 246:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  known at compile time.
 247:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  @param  __a  The character array.
 248:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  @param  __n  Number of characters.
 249:/usr/include/c++/9.1.0/bits/char_traits.h ****    *
 250:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 251:/usr/include/c++/9.1.0/bits/char_traits.h ****    */
 252:/usr/include/c++/9.1.0/bits/char_traits.h ****   template<typename _CharT>
 253:/usr/include/c++/9.1.0/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 254:/usr/include/c++/9.1.0/bits/char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 255:/usr/include/c++/9.1.0/bits/char_traits.h ****     {
 256:/usr/include/c++/9.1.0/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 257:/usr/include/c++/9.1.0/bits/char_traits.h ****       (void) __a;
 258:/usr/include/c++/9.1.0/bits/char_traits.h ****       (void) __n;
 259:/usr/include/c++/9.1.0/bits/char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 260:/usr/include/c++/9.1.0/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 261:/usr/include/c++/9.1.0/bits/char_traits.h **** #else
 262:/usr/include/c++/9.1.0/bits/char_traits.h ****       size_t __i = 0;
 263:/usr/include/c++/9.1.0/bits/char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 264:/usr/include/c++/9.1.0/bits/char_traits.h **** 	__i++;
 265:/usr/include/c++/9.1.0/bits/char_traits.h ****       return __i == __n;
 266:/usr/include/c++/9.1.0/bits/char_traits.h **** #endif
 267:/usr/include/c++/9.1.0/bits/char_traits.h ****     }
 268:/usr/include/c++/9.1.0/bits/char_traits.h **** #endif
 269:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 270:/usr/include/c++/9.1.0/bits/char_traits.h ****   // 21.1
 271:/usr/include/c++/9.1.0/bits/char_traits.h ****   /**
 272:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 273:/usr/include/c++/9.1.0/bits/char_traits.h ****    *
 274:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 275:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 276:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 277:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 278:/usr/include/c++/9.1.0/bits/char_traits.h ****    *
 279:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 280:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 281:/usr/include/c++/9.1.0/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 282:/usr/include/c++/9.1.0/bits/char_traits.h ****   */
GAS LISTING /tmp/ccUgL469.s 			page 62


 283:/usr/include/c++/9.1.0/bits/char_traits.h ****   template<class _CharT>
 284:/usr/include/c++/9.1.0/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 285:/usr/include/c++/9.1.0/bits/char_traits.h ****     { };
 286:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 287:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 288:/usr/include/c++/9.1.0/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 289:/usr/include/c++/9.1.0/bits/char_traits.h ****   template<>
 290:/usr/include/c++/9.1.0/bits/char_traits.h ****     struct char_traits<char>
 291:/usr/include/c++/9.1.0/bits/char_traits.h ****     {
 292:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef char              char_type;
 293:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef int               int_type;
 294:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef streampos         pos_type;
 295:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef streamoff         off_type;
 296:/usr/include/c++/9.1.0/bits/char_traits.h ****       typedef mbstate_t         state_type;
 297:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 298:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 299:/usr/include/c++/9.1.0/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 300:/usr/include/c++/9.1.0/bits/char_traits.h ****       { __c1 = __c2; }
 301:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 302:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 303:/usr/include/c++/9.1.0/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 304:/usr/include/c++/9.1.0/bits/char_traits.h ****       { return __c1 == __c2; }
 305:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 306:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 307:/usr/include/c++/9.1.0/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 308:/usr/include/c++/9.1.0/bits/char_traits.h ****       {
 309:/usr/include/c++/9.1.0/bits/char_traits.h **** 	// LWG 467.
 310:/usr/include/c++/9.1.0/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 311:/usr/include/c++/9.1.0/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
 312:/usr/include/c++/9.1.0/bits/char_traits.h ****       }
 313:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 314:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 315:/usr/include/c++/9.1.0/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 316:/usr/include/c++/9.1.0/bits/char_traits.h ****       {
 317:/usr/include/c++/9.1.0/bits/char_traits.h **** 	if (__n == 0)
 318:/usr/include/c++/9.1.0/bits/char_traits.h **** 	  return 0;
 319:/usr/include/c++/9.1.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 320:/usr/include/c++/9.1.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 321:/usr/include/c++/9.1.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 322:/usr/include/c++/9.1.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 323:/usr/include/c++/9.1.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 324:/usr/include/c++/9.1.0/bits/char_traits.h **** #endif
 325:/usr/include/c++/9.1.0/bits/char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 326:/usr/include/c++/9.1.0/bits/char_traits.h ****       }
 327:/usr/include/c++/9.1.0/bits/char_traits.h **** 
 328:/usr/include/c++/9.1.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 329:/usr/include/c++/9.1.0/bits/char_traits.h ****       length(const char_type* __s)
 330:/usr/include/c++/9.1.0/bits/char_traits.h ****       {
 331:/usr/include/c++/9.1.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 332:/usr/include/c++/9.1.0/bits/char_traits.h **** 	if (__constant_string_p(__s))
 333:/usr/include/c++/9.1.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 334:/usr/include/c++/9.1.0/bits/char_traits.h **** #endif
 335:/usr/include/c++/9.1.0/bits/char_traits.h **** 	return __builtin_strlen(__s);
 1061              		.loc 6 335 2 is_stmt 1 discriminator 2 view .LVU290
 1062              	.LBB96:
 1063              	.LBB91:
 1064              	.LBB90:
GAS LISTING /tmp/ccUgL469.s 			page 63


 570:/usr/include/c++/9.1.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1065              		.loc 5 570 18 is_stmt 0 discriminator 2 view .LVU291
 1066 03fc BA050000 		movl	$5, %edx
 1066      00
 1067 0401 488D3500 		leaq	.LC0(%rip), %rsi
 1067      000000
 1068 0408 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 1068      000000
 1069 040f E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 1069      00
 1070              	.LVL120:
 570:/usr/include/c++/9.1.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1071              		.loc 5 570 18 discriminator 2 view .LVU292
 1072              	.LBE90:
 1073              	.LBE91:
 190:Src/translator.cpp ****         }
 1074              		.loc 1 190 65 discriminator 2 view .LVU293
 1075 0414 89DE     		movl	%ebx, %esi
 1076 0416 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 1076      000000
 1077 041d E8000000 		call	_ZNSolsEi@PLT
 1077      00
 1078              	.LVL121:
 1079 0422 4889C3   		movq	%rax, %rbx
 1080              	.LVL122:
 1081              	.LBB92:
 1082              	.LBI92:
 565:/usr/include/c++/9.1.0/ostream ****     {
 1083              		.loc 5 565 5 is_stmt 1 discriminator 2 view .LVU294
 565:/usr/include/c++/9.1.0/ostream ****     {
 1084              		.loc 5 565 5 is_stmt 0 discriminator 2 view .LVU295
 1085              	.LBE92:
 1086              	.LBE96:
 1087              		.loc 6 335 2 is_stmt 1 discriminator 2 view .LVU296
 1088              	.LBB97:
 1089              	.LBB94:
 1090              	.LBB93:
 570:/usr/include/c++/9.1.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1091              		.loc 5 570 18 is_stmt 0 discriminator 2 view .LVU297
 1092 0425 BA040000 		movl	$4, %edx
 1092      00
 1093 042a 488D3500 		leaq	.LC1(%rip), %rsi
 1093      000000
 1094 0431 4889C7   		movq	%rax, %rdi
 1095 0434 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 1095      00
 1096              	.LVL123:
 570:/usr/include/c++/9.1.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1097              		.loc 5 570 18 discriminator 2 view .LVU298
 1098              	.LBE93:
 1099              	.LBE94:
 190:Src/translator.cpp ****         }
 1100              		.loc 1 190 86 discriminator 2 view .LVU299
 1101 0439 8D7504   		leal	4(%rbp), %esi
 1102 043c 4889DF   		movq	%rbx, %rdi
 1103 043f E8000000 		call	_ZNSolsEi@PLT
 1103      00
GAS LISTING /tmp/ccUgL469.s 			page 64


 1104              	.LVL124:
 1105 0444 4889C3   		movq	%rax, %rbx
 1106              	.LVL125:
 1107              	.LBB95:
 1108              	.LBI70:
 108:/usr/include/c++/9.1.0/ostream ****       {
 1109              		.loc 5 108 7 is_stmt 1 discriminator 2 view .LVU300
 1110              	.LBB88:
 1111              	.LBI71:
 599:/usr/include/c++/9.1.0/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 1112              		.loc 5 599 5 discriminator 2 view .LVU301
 1113              	.LBB87:
 600:/usr/include/c++/9.1.0/ostream **** 
 1114              		.loc 5 600 19 is_stmt 0 discriminator 2 view .LVU302
 1115 0447 488B00   		movq	(%rax), %rax
 1116              	.LVL126:
 600:/usr/include/c++/9.1.0/ostream **** 
 1117              		.loc 5 600 19 discriminator 2 view .LVU303
 1118 044a 4889D9   		movq	%rbx, %rcx
 1119 044d 480348E8 		addq	-24(%rax), %rcx
 1120              	.LVL127:
 1121              	.LBB86:
 1122              	.LBI73:
  51:/usr/include/c++/9.1.0/bits/basic_ios.h ****       return *__f;
  52:/usr/include/c++/9.1.0/bits/basic_ios.h ****     }
  53:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
  54:/usr/include/c++/9.1.0/bits/basic_ios.h ****   /**
  55:/usr/include/c++/9.1.0/bits/basic_ios.h ****    *  @brief Template class basic_ios, virtual base class for all
  56:/usr/include/c++/9.1.0/bits/basic_ios.h ****    *  stream classes. 
  57:/usr/include/c++/9.1.0/bits/basic_ios.h ****    *  @ingroup io
  58:/usr/include/c++/9.1.0/bits/basic_ios.h ****    *
  59:/usr/include/c++/9.1.0/bits/basic_ios.h ****    *  @tparam _CharT  Type of character stream.
  60:/usr/include/c++/9.1.0/bits/basic_ios.h ****    *  @tparam _Traits  Traits for character type, defaults to
  61:/usr/include/c++/9.1.0/bits/basic_ios.h ****    *                   char_traits<_CharT>.
  62:/usr/include/c++/9.1.0/bits/basic_ios.h ****    *
  63:/usr/include/c++/9.1.0/bits/basic_ios.h ****    *  Most of the member functions called dispatched on stream objects
  64:/usr/include/c++/9.1.0/bits/basic_ios.h ****    *  (e.g., @c std::cout.foo(bar);) are consolidated in this class.
  65:/usr/include/c++/9.1.0/bits/basic_ios.h ****   */
  66:/usr/include/c++/9.1.0/bits/basic_ios.h ****   template<typename _CharT, typename _Traits>
  67:/usr/include/c++/9.1.0/bits/basic_ios.h ****     class basic_ios : public ios_base
  68:/usr/include/c++/9.1.0/bits/basic_ios.h ****     {
  69:/usr/include/c++/9.1.0/bits/basic_ios.h ****     public:
  70:/usr/include/c++/9.1.0/bits/basic_ios.h ****       //@{
  71:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
  72:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  These are standard types.  They permit a standardized way of
  73:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  referring to names of (or names dependent on) the template
  74:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  parameters, which are specific to the implementation.
  75:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
  76:/usr/include/c++/9.1.0/bits/basic_ios.h ****       typedef _CharT                                 char_type;
  77:/usr/include/c++/9.1.0/bits/basic_ios.h ****       typedef typename _Traits::int_type             int_type;
  78:/usr/include/c++/9.1.0/bits/basic_ios.h ****       typedef typename _Traits::pos_type             pos_type;
  79:/usr/include/c++/9.1.0/bits/basic_ios.h ****       typedef typename _Traits::off_type             off_type;
  80:/usr/include/c++/9.1.0/bits/basic_ios.h ****       typedef _Traits                                traits_type;
  81:/usr/include/c++/9.1.0/bits/basic_ios.h ****       //@}
  82:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
  83:/usr/include/c++/9.1.0/bits/basic_ios.h ****       //@{
  84:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
GAS LISTING /tmp/ccUgL469.s 			page 65


  85:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  These are non-standard types.
  86:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
  87:/usr/include/c++/9.1.0/bits/basic_ios.h ****       typedef ctype<_CharT>                          __ctype_type;
  88:/usr/include/c++/9.1.0/bits/basic_ios.h ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  89:/usr/include/c++/9.1.0/bits/basic_ios.h **** 						     __num_put_type;
  90:/usr/include/c++/9.1.0/bits/basic_ios.h ****       typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
  91:/usr/include/c++/9.1.0/bits/basic_ios.h **** 						     __num_get_type;
  92:/usr/include/c++/9.1.0/bits/basic_ios.h ****       //@}
  93:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
  94:/usr/include/c++/9.1.0/bits/basic_ios.h ****       // Data members:
  95:/usr/include/c++/9.1.0/bits/basic_ios.h ****     protected:
  96:/usr/include/c++/9.1.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*                _M_tie;
  97:/usr/include/c++/9.1.0/bits/basic_ios.h ****       mutable char_type                              _M_fill;
  98:/usr/include/c++/9.1.0/bits/basic_ios.h ****       mutable bool                                   _M_fill_init;
  99:/usr/include/c++/9.1.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*              _M_streambuf;
 100:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 101:/usr/include/c++/9.1.0/bits/basic_ios.h ****       // Cached use_facet<ctype>, which is based on the current locale info.
 102:/usr/include/c++/9.1.0/bits/basic_ios.h ****       const __ctype_type*                            _M_ctype;
 103:/usr/include/c++/9.1.0/bits/basic_ios.h ****       // For ostream.
 104:/usr/include/c++/9.1.0/bits/basic_ios.h ****       const __num_put_type*                          _M_num_put;
 105:/usr/include/c++/9.1.0/bits/basic_ios.h ****       // For istream.
 106:/usr/include/c++/9.1.0/bits/basic_ios.h ****       const __num_get_type*                          _M_num_get;
 107:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 108:/usr/include/c++/9.1.0/bits/basic_ios.h ****     public:
 109:/usr/include/c++/9.1.0/bits/basic_ios.h ****       //@{
 110:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 111:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  The quick-and-easy status check.
 112:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 113:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  This allows you to write constructs such as
 114:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  <code>if (!a_stream) ...</code> and <code>while (a_stream) ...</code>
 115:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 116:/usr/include/c++/9.1.0/bits/basic_ios.h **** #if __cplusplus >= 201103L
 117:/usr/include/c++/9.1.0/bits/basic_ios.h ****       explicit operator bool() const
 118:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { return !this->fail(); }
 119:/usr/include/c++/9.1.0/bits/basic_ios.h **** #else
 120:/usr/include/c++/9.1.0/bits/basic_ios.h ****       operator void*() const
 121:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { return this->fail() ? 0 : const_cast<basic_ios*>(this); }
 122:/usr/include/c++/9.1.0/bits/basic_ios.h **** #endif
 123:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 124:/usr/include/c++/9.1.0/bits/basic_ios.h ****       bool
 125:/usr/include/c++/9.1.0/bits/basic_ios.h ****       operator!() const
 126:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { return this->fail(); }
 127:/usr/include/c++/9.1.0/bits/basic_ios.h ****       //@}
 128:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 129:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 130:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Returns the error state of the stream buffer.
 131:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  A bit pattern (well, isn't everything?)
 132:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 133:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 134:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  users will call one of the interpreting wrappers, e.g., good().
 135:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 136:/usr/include/c++/9.1.0/bits/basic_ios.h ****       iostate
 137:/usr/include/c++/9.1.0/bits/basic_ios.h ****       rdstate() const
 138:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { return _M_streambuf_state; }
 139:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 140:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 141:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  [Re]sets the error state.
GAS LISTING /tmp/ccUgL469.s 			page 66


 142:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @param  __state  The new state flag(s) to set.
 143:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 144:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 145:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  users will not need to pass an argument.
 146:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 147:/usr/include/c++/9.1.0/bits/basic_ios.h ****       void
 148:/usr/include/c++/9.1.0/bits/basic_ios.h ****       clear(iostate __state = goodbit);
 149:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 150:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 151:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Sets additional flags in the error state.
 152:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @param  __state  The additional state flag(s) to set.
 153:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 154:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.
 155:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 156:/usr/include/c++/9.1.0/bits/basic_ios.h ****       void
 157:/usr/include/c++/9.1.0/bits/basic_ios.h ****       setstate(iostate __state)
 158:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { this->clear(this->rdstate() | __state); }
 159:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 160:/usr/include/c++/9.1.0/bits/basic_ios.h ****       // Flip the internal state on for the proper state bits, then
 161:/usr/include/c++/9.1.0/bits/basic_ios.h ****       // rethrows the propagated exception if bit also set in
 162:/usr/include/c++/9.1.0/bits/basic_ios.h ****       // exceptions().
 163:/usr/include/c++/9.1.0/bits/basic_ios.h ****       void
 164:/usr/include/c++/9.1.0/bits/basic_ios.h ****       _M_setstate(iostate __state)
 165:/usr/include/c++/9.1.0/bits/basic_ios.h ****       {
 166:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	// 27.6.1.2.1 Common requirements.
 167:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	// Turn this on without causing an ios::failure to be thrown.
 168:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	_M_streambuf_state |= __state;
 169:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	if (this->exceptions() & __state)
 170:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	  __throw_exception_again;
 171:/usr/include/c++/9.1.0/bits/basic_ios.h ****       }
 172:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 173:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 174:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 175:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  True if no error flags are set.
 176:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 177:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  A wrapper around rdstate.
 178:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 179:/usr/include/c++/9.1.0/bits/basic_ios.h ****       bool
 180:/usr/include/c++/9.1.0/bits/basic_ios.h ****       good() const
 181:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { return this->rdstate() == 0; }
 182:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 183:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 184:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 185:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  True if the eofbit is set.
 186:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 187:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 188:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 189:/usr/include/c++/9.1.0/bits/basic_ios.h ****       bool
 190:/usr/include/c++/9.1.0/bits/basic_ios.h ****       eof() const
 191:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { return (this->rdstate() & eofbit) != 0; }
 192:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 193:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 194:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 195:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  True if either the badbit or the failbit is set.
 196:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 197:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Checking the badbit in fail() is historical practice.
 198:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
GAS LISTING /tmp/ccUgL469.s 			page 67


 199:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 200:/usr/include/c++/9.1.0/bits/basic_ios.h ****       bool
 201:/usr/include/c++/9.1.0/bits/basic_ios.h ****       fail() const
 202:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { return (this->rdstate() & (badbit | failbit)) != 0; }
 203:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 204:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 205:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 206:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  True if the badbit is set.
 207:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 208:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 209:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 210:/usr/include/c++/9.1.0/bits/basic_ios.h ****       bool
 211:/usr/include/c++/9.1.0/bits/basic_ios.h ****       bad() const
 212:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { return (this->rdstate() & badbit) != 0; }
 213:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 214:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 215:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 216:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  The current exceptions mask.
 217:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 218:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  This changes nothing in the stream.  See the one-argument version
 219:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  of exceptions(iostate) for the meaning of the return value.
 220:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 221:/usr/include/c++/9.1.0/bits/basic_ios.h ****       iostate
 222:/usr/include/c++/9.1.0/bits/basic_ios.h ****       exceptions() const
 223:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { return _M_exception; }
 224:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 225:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 226:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 227:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @param  __except  The new exceptions mask.
 228:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 229:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  By default, error flags are set silently.  You can set an
 230:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  exceptions mask for each stream; if a bit in the mask becomes set
 231:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  in the error flags, then an exception of type
 232:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  std::ios_base::failure is thrown.
 233:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 234:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  If the error flag is already set when the exceptions mask is
 235:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  added, the exception is immediately thrown.  Try running the
 236:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  following under GCC 3.1 or later:
 237:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @code
 238:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  #include <iostream>
 239:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  #include <fstream>
 240:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  #include <exception>
 241:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 242:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  int main()
 243:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  {
 244:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *      std::set_terminate (__gnu_cxx::__verbose_terminate_handler);
 245:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 246:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *      std::ifstream f ("/etc/motd");
 247:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 248:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *      std::cerr << "Setting badbit\n";
 249:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *      f.setstate (std::ios_base::badbit);
 250:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 251:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *      std::cerr << "Setting exception mask\n";
 252:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *      f.exceptions (std::ios_base::badbit);
 253:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  }
 254:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @endcode
 255:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
GAS LISTING /tmp/ccUgL469.s 			page 68


 256:/usr/include/c++/9.1.0/bits/basic_ios.h ****       void
 257:/usr/include/c++/9.1.0/bits/basic_ios.h ****       exceptions(iostate __except)
 258:/usr/include/c++/9.1.0/bits/basic_ios.h ****       {
 259:/usr/include/c++/9.1.0/bits/basic_ios.h ****         _M_exception = __except;
 260:/usr/include/c++/9.1.0/bits/basic_ios.h ****         this->clear(_M_streambuf_state);
 261:/usr/include/c++/9.1.0/bits/basic_ios.h ****       }
 262:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 263:/usr/include/c++/9.1.0/bits/basic_ios.h ****       // Constructor/destructor:
 264:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 265:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Constructor performs initialization.
 266:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 267:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  The parameter is passed by derived streams.
 268:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 269:/usr/include/c++/9.1.0/bits/basic_ios.h ****       explicit
 270:/usr/include/c++/9.1.0/bits/basic_ios.h ****       basic_ios(basic_streambuf<_CharT, _Traits>* __sb)
 271:/usr/include/c++/9.1.0/bits/basic_ios.h ****       : ios_base(), _M_tie(0), _M_fill(), _M_fill_init(false), _M_streambuf(0),
 272:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	_M_ctype(0), _M_num_put(0), _M_num_get(0)
 273:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { this->init(__sb); }
 274:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 275:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 276:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Empty.
 277:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 278:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  The destructor does nothing.  More specifically, it does not
 279:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  destroy the streambuf held by rdbuf().
 280:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 281:/usr/include/c++/9.1.0/bits/basic_ios.h ****       virtual
 282:/usr/include/c++/9.1.0/bits/basic_ios.h ****       ~basic_ios() { }
 283:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 284:/usr/include/c++/9.1.0/bits/basic_ios.h ****       // Members:
 285:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 286:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Fetches the current @e tied stream.
 287:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  A pointer to the tied stream, or NULL if the stream is
 288:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *           not tied.
 289:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 290:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  A stream may be @e tied (or synchronized) to a second output
 291:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  stream.  When this stream performs any I/O, the tied stream is
 292:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  first flushed.  For example, @c std::cin is tied to @c std::cout.
 293:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 294:/usr/include/c++/9.1.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 295:/usr/include/c++/9.1.0/bits/basic_ios.h ****       tie() const
 296:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { return _M_tie; }
 297:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 298:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 299:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Ties this stream to an output stream.
 300:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @param  __tiestr  The output stream.
 301:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  The previously tied output stream, or NULL if the stream
 302:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *           was not tied.
 303:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 304:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  This sets up a new tie; see tie() for more.
 305:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 306:/usr/include/c++/9.1.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 307:/usr/include/c++/9.1.0/bits/basic_ios.h ****       tie(basic_ostream<_CharT, _Traits>* __tiestr)
 308:/usr/include/c++/9.1.0/bits/basic_ios.h ****       {
 309:/usr/include/c++/9.1.0/bits/basic_ios.h ****         basic_ostream<_CharT, _Traits>* __old = _M_tie;
 310:/usr/include/c++/9.1.0/bits/basic_ios.h ****         _M_tie = __tiestr;
 311:/usr/include/c++/9.1.0/bits/basic_ios.h ****         return __old;
 312:/usr/include/c++/9.1.0/bits/basic_ios.h ****       }
GAS LISTING /tmp/ccUgL469.s 			page 69


 313:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 314:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 315:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Accessing the underlying buffer.
 316:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  The current stream buffer.
 317:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 318:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  This does not change the state of the stream.
 319:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 320:/usr/include/c++/9.1.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 321:/usr/include/c++/9.1.0/bits/basic_ios.h ****       rdbuf() const
 322:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { return _M_streambuf; }
 323:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 324:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 325:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Changing the underlying buffer.
 326:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @param  __sb  The new stream buffer.
 327:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  The previous stream buffer.
 328:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 329:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Associates a new buffer with the current stream, and clears the
 330:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  error state.
 331:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 332:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Due to historical accidents which the LWG refuses to correct, the
 333:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  I/O library suffers from a design error:  this function is hidden
 334:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  in derived classes by overrides of the zero-argument @c rdbuf(),
 335:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  which is non-virtual for hysterical raisins.  As a result, you
 336:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  must use explicit qualifications to access this function via any
 337:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  derived class.  For example:
 338:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 339:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @code
 340:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  std::fstream     foo;         // or some other derived type
 341:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  std::streambuf*  p = .....;
 342:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 343:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  foo.ios::rdbuf(p);            // ios == basic_ios<char>
 344:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @endcode
 345:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 346:/usr/include/c++/9.1.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 347:/usr/include/c++/9.1.0/bits/basic_ios.h ****       rdbuf(basic_streambuf<_CharT, _Traits>* __sb);
 348:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 349:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 350:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Copies fields of __rhs into this.
 351:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @param  __rhs  The source values for the copies.
 352:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  Reference to this object.
 353:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 354:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  All fields of __rhs are copied into this object except that rdbuf()
 355:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  and rdstate() remain unchanged.  All values in the pword and iword
 356:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  arrays are copied.  Before copying, each callback is invoked with
 357:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  erase_event.  After copying, each (new) callback is invoked with
 358:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  copyfmt_event.  The final step is to copy exceptions().
 359:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 360:/usr/include/c++/9.1.0/bits/basic_ios.h ****       basic_ios&
 361:/usr/include/c++/9.1.0/bits/basic_ios.h ****       copyfmt(const basic_ios& __rhs);
 362:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 363:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 364:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Retrieves the @a empty character.
 365:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  The current fill character.
 366:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 367:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  It defaults to a space (' ') in the current locale.
 368:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 369:/usr/include/c++/9.1.0/bits/basic_ios.h ****       char_type
GAS LISTING /tmp/ccUgL469.s 			page 70


 370:/usr/include/c++/9.1.0/bits/basic_ios.h ****       fill() const
 371:/usr/include/c++/9.1.0/bits/basic_ios.h ****       {
 372:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	if (!_M_fill_init)
 373:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	  {
 374:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	    _M_fill = this->widen(' ');
 375:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	    _M_fill_init = true;
 376:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	  }
 377:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	return _M_fill;
 378:/usr/include/c++/9.1.0/bits/basic_ios.h ****       }
 379:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 380:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 381:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Sets a new @a empty character.
 382:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @param  __ch  The new character.
 383:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  The previous fill character.
 384:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 385:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  The fill character is used to fill out space when P+ characters
 386:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  have been requested (e.g., via setw), Q characters are actually
 387:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  used, and Q<P.  It defaults to a space (' ') in the current locale.
 388:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 389:/usr/include/c++/9.1.0/bits/basic_ios.h ****       char_type
 390:/usr/include/c++/9.1.0/bits/basic_ios.h ****       fill(char_type __ch)
 391:/usr/include/c++/9.1.0/bits/basic_ios.h ****       {
 392:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	char_type __old = this->fill();
 393:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	_M_fill = __ch;
 394:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	return __old;
 395:/usr/include/c++/9.1.0/bits/basic_ios.h ****       }
 396:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 397:/usr/include/c++/9.1.0/bits/basic_ios.h ****       // Locales:
 398:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 399:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Moves to a new locale.
 400:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @param  __loc  The new locale.
 401:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  The previous locale.
 402:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 403:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Calls @c ios_base::imbue(loc), and if a stream buffer is associated
 404:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  with this stream, calls that buffer's @c pubimbue(loc).
 405:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 406:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 407:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 408:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 409:/usr/include/c++/9.1.0/bits/basic_ios.h ****       locale
 410:/usr/include/c++/9.1.0/bits/basic_ios.h ****       imbue(const locale& __loc);
 411:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 412:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 413:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Squeezes characters.
 414:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @param  __c  The character to narrow.
 415:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @param  __dfault  The character to narrow.
 416:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  The narrowed character.
 417:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 418:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Maps a character of @c char_type to a character of @c char,
 419:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  if possible.
 420:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 421:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Returns the result of
 422:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @code
 423:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).narrow(c,dfault)
 424:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @endcode
 425:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 426:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Additional l10n notes are at
GAS LISTING /tmp/ccUgL469.s 			page 71


 427:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 428:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 429:/usr/include/c++/9.1.0/bits/basic_ios.h ****       char
 430:/usr/include/c++/9.1.0/bits/basic_ios.h ****       narrow(char_type __c, char __dfault) const
 431:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { return __check_facet(_M_ctype).narrow(__c, __dfault); }
 432:/usr/include/c++/9.1.0/bits/basic_ios.h **** 
 433:/usr/include/c++/9.1.0/bits/basic_ios.h ****       /**
 434:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @brief  Widens characters.
 435:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @param  __c  The character to widen.
 436:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @return  The widened character.
 437:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 438:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Maps a character of @c char to a character of @c char_type.
 439:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 440:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Returns the result of
 441:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @code
 442:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).widen(c)
 443:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  @endcode
 444:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *
 445:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 446:/usr/include/c++/9.1.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 447:/usr/include/c++/9.1.0/bits/basic_ios.h ****       */
 448:/usr/include/c++/9.1.0/bits/basic_ios.h ****       char_type
 449:/usr/include/c++/9.1.0/bits/basic_ios.h ****       widen(char __c) const
 1123              		.loc 3 449 7 is_stmt 1 discriminator 2 view .LVU304
 1124              	.LBB83:
 450:/usr/include/c++/9.1.0/bits/basic_ios.h ****       { return __check_facet(_M_ctype).widen(__c); }
 1125              		.loc 3 450 30 is_stmt 0 discriminator 2 view .LVU305
 1126 0451 488BA9F0 		movq	240(%rcx), %rbp
 1126      000000
 1127              	.LVL128:
 1128              	.LBB81:
 1129              	.LBI75:
  47:/usr/include/c++/9.1.0/bits/basic_ios.h ****     {
 1130              		.loc 3 47 5 is_stmt 1 discriminator 2 view .LVU306
 1131              	.LBB77:
  49:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	__throw_bad_cast();
 1132              		.loc 3 49 7 is_stmt 0 discriminator 2 view .LVU307
 1133 0458 4885ED   		testq	%rbp, %rbp
 1134 045b 0F842FFF 		je	.L77
 1134      FFFF
 1135              	.LVL129:
  49:/usr/include/c++/9.1.0/bits/basic_ios.h **** 	__throw_bad_cast();
 1136              		.loc 3 49 7 discriminator 2 view .LVU308
 1137              	.LBE77:
 1138              	.LBE81:
 1139              	.LBB82:
 1140              	.LBI78:
 872:/usr/include/c++/9.1.0/bits/locale_facets.h ****       {
 1141              		.loc 4 872 7 is_stmt 1 view .LVU309
 1142              	.LBB80:
 874:/usr/include/c++/9.1.0/bits/locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
 1143              		.loc 4 874 2 view .LVU310
 1144 0461 807D3800 		cmpb	$0, 56(%rbp)
 1145 0465 0F842AFF 		je	.L70
 1145      FFFF
 875:/usr/include/c++/9.1.0/bits/locale_facets.h **** 	this->_M_widen_init();
 1146              		.loc 4 875 4 view .LVU311
GAS LISTING /tmp/ccUgL469.s 			page 72


 875:/usr/include/c++/9.1.0/bits/locale_facets.h **** 	this->_M_widen_init();
 1147              		.loc 4 875 51 is_stmt 0 view .LVU312
 1148 046b 0FB67543 		movzbl	67(%rbp), %esi
 1149 046f E93AFFFF 		jmp	.L71
 1149      FF
 1150              	.LVL130:
 1151              	.L73:
 875:/usr/include/c++/9.1.0/bits/locale_facets.h **** 	this->_M_widen_init();
 1152              		.loc 4 875 51 view .LVU313
 1153              	.LBE80:
 1154              	.LBE82:
 1155              	.LBE83:
 1156              	.LBE86:
 1157              	.LBE87:
 1158              	.LBE88:
 1159              	.LBE95:
 1160              	.LBE97:
 177:Src/translator.cpp ****         uint8_t len = getLen(package);
 1161              		.loc 1 177 20 view .LVU314
 1162 0474 41BE6500 		movl	$101, %r14d
 1162      0000
 1163              	.LVL131:
 1164              	.L67:
 193:Src/translator.cpp **** }
 1165              		.loc 1 193 5 view .LVU315
 1166 047a 4489F0   		movl	%r14d, %eax
 1167 047d 4883C418 		addq	$24, %rsp
 1168              		.cfi_remember_state
 1169              		.cfi_def_cfa_offset 56
 1170              	.LVL132:
 193:Src/translator.cpp **** }
 1171              		.loc 1 193 5 view .LVU316
 1172 0481 5B       		popq	%rbx
 1173              		.cfi_def_cfa_offset 48
 1174 0482 5D       		popq	%rbp
 1175              		.cfi_def_cfa_offset 40
 1176 0483 415C     		popq	%r12
 1177              		.cfi_def_cfa_offset 32
 1178              	.LVL133:
 193:Src/translator.cpp **** }
 1179              		.loc 1 193 5 view .LVU317
 1180 0485 415D     		popq	%r13
 1181              		.cfi_def_cfa_offset 24
 1182 0487 415E     		popq	%r14
 1183              		.cfi_def_cfa_offset 16
 1184 0489 415F     		popq	%r15
 1185              		.cfi_def_cfa_offset 8
 1186 048b C3       		ret
 1187              	.LVL134:
 1188              	.L74:
 1189              		.cfi_restore_state
 180:Src/translator.cpp ****         checksum_t  check = genCheckSum(package),
 1190              		.loc 1 180 20 view .LVU318
 1191 048c 41BE6400 		movl	$100, %r14d
 1191      0000
 1192              	.LVL135:
 180:Src/translator.cpp ****         checksum_t  check = genCheckSum(package),
GAS LISTING /tmp/ccUgL469.s 			page 73


 1193              		.loc 1 180 20 view .LVU319
 1194 0492 EBE6     		jmp	.L67
 1195              	.LVL136:
 1196              	.L75:
 184:Src/translator.cpp **** 
 1197              		.loc 1 184 20 view .LVU320
 1198 0494 41BE6600 		movl	$102, %r14d
 1198      0000
 1199              	.LVL137:
 184:Src/translator.cpp **** 
 1200              		.loc 1 184 20 view .LVU321
 1201 049a EBDE     		jmp	.L67
 1202              		.cfi_endproc
 1203              	.LFE1516:
 1206              	_GLOBAL__sub_I__ZN10translator11genCheckSumEPKh:
 1207              	.LFB1842:
 1208              		.loc 1 194 1 is_stmt 1 view -0
 1209              		.cfi_startproc
 1210 049c 4883EC08 		subq	$8, %rsp
 1211              		.cfi_def_cfa_offset 16
 1212              		.loc 1 194 1 is_stmt 0 view .LVU323
 1213 04a0 BEFFFF00 		movl	$65535, %esi
 1213      00
 1214 04a5 BF010000 		movl	$1, %edi
 1214      00
 1215 04aa E851FBFF 		call	_Z41__static_initialization_and_destruction_0ii
 1215      FF
 1216              	.LVL138:
 1217 04af 4883C408 		addq	$8, %rsp
 1218              		.cfi_def_cfa_offset 8
 1219 04b3 C3       		ret
 1220              		.cfi_endproc
 1221              	.LFE1842:
 1223              		.section	.init_array,"aw"
 1224              		.align 8
 1225 0000 00000000 		.quad	_GLOBAL__sub_I__ZN10translator11genCheckSumEPKh
 1225      00000000 
 1226              		.local	_ZStL8__ioinit
 1227              		.comm	_ZStL8__ioinit,1,1
 1228              		.text
 1229              	.Letext0:
 1230              		.file 7 "/usr/include/c++/9.1.0/cwchar"
 1231              		.file 8 "/usr/include/c++/9.1.0/new"
 1232              		.file 9 "/usr/include/c++/9.1.0/bits/exception_ptr.h"
 1233              		.file 10 "/usr/include/c++/9.1.0/type_traits"
 1234              		.file 11 "/usr/include/c++/9.1.0/x86_64-pc-linux-gnu/bits/c++config.h"
 1235              		.file 12 "/usr/include/c++/9.1.0/bits/stl_pair.h"
 1236              		.file 13 "/usr/include/c++/9.1.0/debug/debug.h"
 1237              		.file 14 "/usr/include/c++/9.1.0/cstdint"
 1238              		.file 15 "/usr/include/c++/9.1.0/clocale"
 1239              		.file 16 "/usr/include/c++/9.1.0/cstdlib"
 1240              		.file 17 "/usr/include/c++/9.1.0/cstdio"
 1241              		.file 18 "/usr/include/c++/9.1.0/system_error"
 1242              		.file 19 "/usr/include/c++/9.1.0/bits/ios_base.h"
 1243              		.file 20 "/usr/include/c++/9.1.0/cwctype"
 1244              		.file 21 "/usr/include/c++/9.1.0/bits/ostream.tcc"
 1245              		.file 22 "/usr/include/c++/9.1.0/iosfwd"
GAS LISTING /tmp/ccUgL469.s 			page 74


 1246              		.file 23 "/usr/include/c++/9.1.0/bits/functexcept.h"
 1247              		.file 24 "/usr/include/c++/9.1.0/bits/ostream_insert.h"
 1248              		.file 25 "/usr/include/c++/9.1.0/bits/predefined_ops.h"
 1249              		.file 26 "/usr/include/c++/9.1.0/ext/new_allocator.h"
 1250              		.file 27 "/usr/include/c++/9.1.0/ext/numeric_traits.h"
 1251              		.file 28 "/usr/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/stddef.h"
 1252              		.file 29 "<built-in>"
 1253              		.file 30 "/usr/include/bits/types/wint_t.h"
 1254              		.file 31 "/usr/include/bits/types/__mbstate_t.h"
 1255              		.file 32 "/usr/include/bits/types/mbstate_t.h"
 1256              		.file 33 "/usr/include/bits/types/__FILE.h"
 1257              		.file 34 "/usr/include/bits/types/struct_FILE.h"
 1258              		.file 35 "/usr/include/bits/types/FILE.h"
 1259              		.file 36 "/usr/include/wchar.h"
 1260              		.file 37 "/usr/include/bits/types/struct_tm.h"
 1261              		.file 38 "/usr/include/bits/types.h"
 1262              		.file 39 "/usr/include/bits/stdint-intn.h"
 1263              		.file 40 "/usr/include/bits/stdint-uintn.h"
 1264              		.file 41 "/usr/include/stdint.h"
 1265              		.file 42 "/usr/include/locale.h"
 1266              		.file 43 "/usr/include/time.h"
 1267              		.file 44 "/usr/include/c++/9.1.0/x86_64-pc-linux-gnu/bits/atomic_word.h"
 1268              		.file 45 "/usr/include/stdlib.h"
 1269              		.file 46 "/usr/include/bits/stdlib-float.h"
 1270              		.file 47 "/usr/include/bits/stdlib-bsearch.h"
 1271              		.file 48 "/usr/include/bits/types/__fpos_t.h"
 1272              		.file 49 "/usr/include/stdio.h"
 1273              		.file 50 "/usr/include/bits/sys_errlist.h"
 1274              		.file 51 "/usr/include/bits/stdio.h"
 1275              		.file 52 "/usr/include/errno.h"
 1276              		.file 53 "/usr/include/bits/wctype-wchar.h"
 1277              		.file 54 "/usr/include/wctype.h"
 1278              		.file 55 "Inc/translator.hpp"
GAS LISTING /tmp/ccUgL469.s 			page 75


DEFINED SYMBOLS
                            *ABS*:0000000000000000 translator.cpp
     /tmp/ccUgL469.s:5      .text:0000000000000000 _Z41__static_initialization_and_destruction_0ii
                             .bss:0000000000000000 _ZStL8__ioinit
     /tmp/ccUgL469.s:45     .text:000000000000003d _ZN10translator7getTypeEPKh
     /tmp/ccUgL469.s:62     .text:0000000000000044 _ZN10translator6getLenEPKh
     /tmp/ccUgL469.s:79     .text:000000000000004b _ZN10translator11genCheckSumEPKh
     /tmp/ccUgL469.s:147    .text:0000000000000083 _ZN10translator10getPayloadEPKhPh
     /tmp/ccUgL469.s:204    .text:00000000000000ae _ZN10translator6equalsEPKhS1_
     /tmp/ccUgL469.s:293    .text:00000000000000f3 _ZN10translator11getZeroByteEhh
     /tmp/ccUgL469.s:315    .text:0000000000000100 _ZN10translator11getCheckSumEPKh
     /tmp/ccUgL469.s:337    .text:0000000000000110 _ZN10translator11parsePacketEPhS0_
     /tmp/ccUgL469.s:475    .text:00000000000001a1 _ZN10translator8parseCmdEPhPPFvvE
     /tmp/ccUgL469.s:586    .text:0000000000000212 _ZN10translator11generateCmdEhPh
     /tmp/ccUgL469.s:641    .text:0000000000000242 _ZN10translator8validateEPKh
     /tmp/ccUgL469.s:738    .text:00000000000002aa _ZN10translator8getVarIdEPKh
     /tmp/ccUgL469.s:777    .text:00000000000002c4 _ZN10translator11generateVarEhhPKhPh
     /tmp/ccUgL469.s:885    .text:0000000000000327 _ZN10translator8parseVarEPhS0_h
     /tmp/ccUgL469.s:1206   .text:000000000000049c _GLOBAL__sub_I__ZN10translator11genCheckSumEPKh
     /tmp/ccUgL469.s:878    .rodata.str1.1:0000000000000000 .LC0
     /tmp/ccUgL469.s:880    .rodata.str1.1:0000000000000006 .LC1

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
_ZNSt8ios_base4InitC1Ev
__dso_handle
_ZNSt8ios_base4InitD1Ev
__cxa_atexit
_ZSt16__throw_bad_castv
_ZNKSt5ctypeIcE13_M_widen_initEv
_ZNSo3putEc
_ZNSo5flushEv
_ZSt4cout
_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
_ZNSolsEi
